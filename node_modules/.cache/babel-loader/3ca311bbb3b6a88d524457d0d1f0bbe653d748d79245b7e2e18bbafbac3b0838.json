{"ast":null,"code":"var _jsxFileName = \"/Users/austincopps/Projects/RusselProject/Build/src/components/ClinicalChartMockup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Search, X, ChevronDown, Info, Stethoscope, Settings, Filter, ChevronRight } from 'lucide-react';\nimport clsx from 'clsx';\nimport DiagnosisWizard from './DiagnosisWizard';\nimport AdminPanel from './AdminPanel';\nimport conditionsDataImport from '../conditions_complete.json';\n\n// PatientTypes definition based on project documentation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PATIENT_TYPES = {\n  'Type 1': 'Healthy',\n  'Type 2': 'Mild inflammation, moderate risk',\n  'Type 3': 'Smoker, diabetic, immunocompromised',\n  'Type 4': 'Periodontal disease, chronic illness, poor healing'\n};\nfunction ClinicalChartMockup() {\n  _s();\n  // State management\n  const [conditions, setConditions] = useState([]);\n  const [filteredConditions, setFilteredConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categoryFilter, setCategoryFilter] = useState('All');\n  const [ddsTypeFilter, setDdsTypeFilter] = useState('All');\n  const [patientTypeFilter, setPatientTypeFilter] = useState('All');\n  const [activePatientType, setActivePatientType] = useState('All'); // Active patient type for product filtering\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [wizardOpen, setWizardOpen] = useState(false);\n  const [adminOpen, setAdminOpen] = useState(false);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Store filtered products\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({}); // Store patient-specific product recommendations\n  const [expandedSections, setExpandedSections] = useState({\n    pitchPoints: false,\n    competitiveAdvantage: false,\n    handlingObjections: false\n  });\n\n  // Load conditions on component mount\n  useEffect(() => {\n    // Check if saved data exists in localStorage\n    const savedData = localStorage.getItem('conditions_data');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setConditions(parsedData);\n      setFilteredConditions(parsedData);\n\n      // Set default selected condition if data exists\n      if (parsedData.length > 0) {\n        setSelectedCondition(parsedData[0]);\n        setActiveTab(parsedData[0].phases[0]);\n      }\n    } else {\n      // Use imported data if no saved data exists\n      setConditions(conditionsDataImport);\n      setFilteredConditions(conditionsDataImport);\n\n      // Set default selected condition if data exists\n      if (conditionsDataImport.length > 0) {\n        setSelectedCondition(conditionsDataImport[0]);\n        setActiveTab(conditionsDataImport[0].phases[0]);\n      }\n    }\n  }, []);\n\n  // Filter conditions based on selected filters and search query\n  useEffect(() => {\n    let filtered = [...conditions];\n\n    // Filter by category\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.category === categoryFilter);\n    }\n\n    // Filter by DDS type\n    if (ddsTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.dds.includes(ddsTypeFilter));\n    }\n\n    // Filter by patient type\n    if (patientTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => {\n        // Check if condition's patientType includes the selected patient type\n        // This assumes patientType can be a string like \"Types 1 to 4\" or an array\n        if (Array.isArray(condition.patientType)) {\n          return condition.patientType.includes(`Type ${patientTypeFilter}`);\n        } else {\n          return condition.patientType.includes(patientTypeFilter);\n        }\n      });\n    }\n\n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(condition => condition.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n    setFilteredConditions(filtered);\n\n    // Update selected condition if it's no longer in filtered results\n    if (filtered.length > 0 && (!selectedCondition || !filtered.find(c => c.name === selectedCondition.name))) {\n      setSelectedCondition(filtered[0]);\n      setActiveTab(filtered[0].phases[0]);\n    }\n  }, [conditions, categoryFilter, ddsTypeFilter, patientTypeFilter, searchQuery, selectedCondition]);\n\n  // Generate patient-specific product recommendations when selectedCondition changes\n  useEffect(() => {\n    if (!selectedCondition) return;\n\n    // Create a map of phase -> patientType -> products\n    let patientProducts = {};\n\n    // Check if condition has patientSpecificConfig from admin panel\n    if (selectedCondition.patientSpecificConfig) {\n      // Use the configuration directly\n      patientProducts = JSON.parse(JSON.stringify(selectedCondition.patientSpecificConfig));\n    } else {\n      // Fall back to the old method of inferring patient-specific products\n      // Process each phase\n      selectedCondition.phases.forEach(phase => {\n        patientProducts[phase] = {\n          'All': [...(selectedCondition.products[phase] || [])],\n          // Default 'All' includes all products\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n\n        // Extract patient-specific products from the condition's products\n        const phaseProducts = selectedCondition.products[phase] || [];\n\n        // Process each product in this phase\n        phaseProducts.forEach(product => {\n          // Handle Type 3/4 Only products\n          if (product.includes('(Type 3/4 Only)')) {\n            const baseProduct = product.replace(' (Type 3/4 Only)', '');\n            patientProducts[phase]['3'].push(baseProduct);\n            patientProducts[phase]['4'].push(baseProduct);\n          }\n          // Regular products apply to all patient types\n          else {\n            patientProducts[phase]['1'].push(product);\n            patientProducts[phase]['2'].push(product);\n            patientProducts[phase]['3'].push(product);\n            patientProducts[phase]['4'].push(product);\n          }\n        });\n      });\n    }\n    setPatientSpecificProducts(patientProducts);\n  }, [selectedCondition]);\n\n  // Filter products based on selected phase and patient type\n  useEffect(() => {\n    if (selectedCondition && activeTab && patientSpecificProducts[activeTab]) {\n      // If a specific patient type is selected, show that type's products\n      if (activePatientType !== 'All') {\n        setFilteredProducts(patientSpecificProducts[activeTab][activePatientType] || []);\n      } else {\n        // If 'All' is selected, show all products for this phase\n        setFilteredProducts(patientSpecificProducts[activeTab]['All'] || []);\n      }\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [selectedCondition, activeTab, activePatientType, patientSpecificProducts]);\n\n  // Extract unique categories for filter dropdown\n  const categories = ['All', ...new Set(conditions.map(condition => condition.category))];\n\n  // Extract unique DDS types for filter dropdown\n  const ddsTypes = ['All'];\n  conditions.forEach(condition => {\n    condition.dds.forEach(dds => {\n      if (!ddsTypes.includes(dds)) {\n        ddsTypes.push(dds);\n      }\n    });\n  });\n\n  // Get patient types from PATIENT_TYPES constant\n  const patientTypes = ['All', '1', '2', '3', '4'];\n\n  // Handle condition selection\n  const handleConditionSelect = condition => {\n    setSelectedCondition(condition);\n    setActiveTab(condition.phases[0]);\n    setActivePatientType('All'); // Reset patient type filter when changing condition\n  };\n\n  // Handle patient type selection for product filtering\n  const handlePatientTypeSelect = type => {\n    setActivePatientType(type);\n  };\n\n  // Handle product selection for modal\n  const handleProductSelect = product => {\n    setSelectedProduct({\n      name: product,\n      details: selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')]\n    });\n    setModalOpen(true);\n  };\n\n  // Determine if a phase has products for the selected condition\n  const hasProductsForPhase = phase => {\n    return selectedCondition && selectedCondition.products && selectedCondition.products[phase] && selectedCondition.products[phase].length > 0;\n  };\n\n  // Toggle diagnosis wizard\n  const toggleWizard = () => {\n    setWizardOpen(!wizardOpen);\n  };\n\n  // Toggle admin panel\n  const toggleAdmin = () => {\n    setAdminOpen(!adminOpen);\n  };\n\n  // Handle conditions update from admin panel\n  const handleConditionsUpdate = updatedConditions => {\n    setConditions(updatedConditions);\n\n    // If previously selected condition exists in updated data, keep it selected\n    if (selectedCondition) {\n      const updatedSelectedCondition = updatedConditions.find(c => c.name === selectedCondition.name);\n      if (updatedSelectedCondition) {\n        setSelectedCondition(updatedSelectedCondition);\n\n        // Ensure active tab is valid for updated condition\n        if (updatedSelectedCondition.phases && !updatedSelectedCondition.phases.includes(activeTab)) {\n          setActiveTab(updatedSelectedCondition.phases[0]);\n        }\n      } else {\n        // If selected condition no longer exists, select the first condition\n        if (updatedConditions.length > 0) {\n          setSelectedCondition(updatedConditions[0]);\n          setActiveTab(updatedConditions[0].phases[0]);\n        } else {\n          setSelectedCondition(null);\n          setActiveTab('');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Clinical Chart Tool for Dental Sales Reps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleWizard,\n            className: \"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n            children: [/*#__PURE__*/_jsxDEV(Stethoscope, {\n              size: 18,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), \"Diagnosis Wizard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleAdmin,\n            className: \"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\",\n            children: [/*#__PURE__*/_jsxDEV(Settings, {\n              size: 18,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), \"Admin\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category-filter\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Condition Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n              value: categoryFilter,\n              onValueChange: setCategoryFilter,\n              children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                id: \"category-filter\",\n                className: \"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                  children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                  className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                    className: \"p-1\",\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(Select.Item, {\n                      value: category,\n                      className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                      children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                        children: category\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 27\n                      }, this)\n                    }, category, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dds-filter\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"DDS Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n              value: ddsTypeFilter,\n              onValueChange: setDdsTypeFilter,\n              children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                id: \"dds-filter\",\n                className: \"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                  children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                  className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                    className: \"p-1\",\n                    children: ddsTypes.map(dds => /*#__PURE__*/_jsxDEV(Select.Item, {\n                      value: dds,\n                      className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                      children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                        children: dds\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 27\n                      }, this)\n                    }, dds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"patient-filter\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Patient Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n              value: patientTypeFilter,\n              onValueChange: setPatientTypeFilter,\n              children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                id: \"patient-filter\",\n                className: \"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                  children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                  className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                    className: \"p-1\",\n                    children: patientTypes.map(type => /*#__PURE__*/_jsxDEV(Select.Item, {\n                      value: type,\n                      className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                      children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                        children: type === 'All' ? 'All' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 27\n                      }, this)\n                    }, type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Search Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",\n                children: /*#__PURE__*/_jsxDEV(Search, {\n                  size: 18,\n                  className: \"text-gray-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"search\",\n                type: \"text\",\n                value: searchQuery,\n                onChange: e => setSearchQuery(e.target.value),\n                className: \"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                placeholder: \"Search conditions...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"absolute inset-y-0 right-0 pr-3 flex items-center\",\n                onClick: () => setSearchQuery(''),\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 18,\n                  className: \"text-gray-400 hover:text-gray-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-6 lg:grid-cols-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-medium p-4 border-b\",\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), filteredConditions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 text-gray-500\",\n            children: \"No conditions match the selected filters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\",\n            children: filteredConditions.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: clsx(\"px-4 py-3 hover:bg-gray-50 cursor-pointer\", selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-50\" : \"\"),\n              onClick: () => handleConditionSelect(condition),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: condition.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: condition.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400 mt-1\",\n                children: [condition.dds.join(', '), \" | \", condition.patientType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this)]\n            }, condition.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-3\",\n          children: selectedCondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white shadow rounded-lg overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 border-b\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: selectedCondition.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500 mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: selectedCondition.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedCondition.dds.join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedCondition.patientType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this), selectedCondition.pitchPoints && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.pitchPoints ? 'bg-blue-100' : 'bg-blue-50 hover:bg-blue-100'}`,\n                  onClick: () => setExpandedSections(prev => ({\n                    ...prev,\n                    pitchPoints: !prev.pitchPoints\n                  })),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-blue-800\",\n                      children: \"Key Pitch Points\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-blue-600\",\n                      children: expandedSections.pitchPoints ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                        size: 18\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                        size: 18\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this), expandedSections.pitchPoints && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-blue-700 mt-2\",\n                    children: selectedCondition.pitchPoints\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.competitiveAdvantage ? 'bg-purple-100' : 'bg-purple-50 hover:bg-purple-100'}`,\n                  onClick: () => setExpandedSections(prev => ({\n                    ...prev,\n                    competitiveAdvantage: !prev.competitiveAdvantage\n                  })),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-purple-800\",\n                      children: \"Competitive Advantage\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-purple-600\",\n                      children: expandedSections.competitiveAdvantage ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                        size: 18\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                        size: 18\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 486,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 25\n                  }, this), expandedSections.competitiveAdvantage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-purple-700 mt-2\",\n                    children: selectedCondition.competitiveAdvantage || 'No competitive advantage information available.'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.handlingObjections ? 'bg-amber-100' : 'bg-amber-50 hover:bg-amber-100'}`,\n                  onClick: () => setExpandedSections(prev => ({\n                    ...prev,\n                    handlingObjections: !prev.handlingObjections\n                  })),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-amber-800\",\n                      children: \"Handling Objections\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-amber-600\",\n                      children: expandedSections.handlingObjections ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                        size: 18\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 511,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                        size: 18\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 25\n                  }, this), expandedSections.handlingObjections && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-amber-700 mt-2\",\n                    children: selectedCondition.handlingObjections || 'No objection handling information available.'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border-b p-4 bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap items-center gap-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-shrink-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-medium text-gray-600\",\n                    children: \"Show Recommendations For:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-grow\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Root, {\n                    value: activePatientType,\n                    onValueChange: handlePatientTypeSelect,\n                    children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                      className: \"flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(Filter, {\n                          size: 16,\n                          className: \"mr-2 text-gray-500\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 538,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Select.Value, {\n                          placeholder: \"Select Patient Type\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                        children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                          size: 18\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 541,\n                          columnNumber: 40\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 541,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                      children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                        className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                        children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                          className: \"p-1\",\n                          children: patientTypes.map(type => /*#__PURE__*/_jsxDEV(Select.Item, {\n                            value: type,\n                            className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                            children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                              children: type === 'All' ? 'All Patient Types' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 552,\n                              columnNumber: 35\n                            }, this)\n                          }, type, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 547,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 545,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this), activePatientType !== 'All' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 text-sm text-blue-600 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Info, {\n                  size: 14,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this), \"Showing specific recommendations for:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium ml-1\",\n                  children: `Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n              value: activeTab,\n              onValueChange: setActiveTab,\n              children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n                className: \"flex border-b divide-x divide-gray-200\",\n                children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n                  value: phase,\n                  className: clsx(\"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\", activeTab === phase ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700 hover:border-gray-300\"),\n                  children: [phase, \" Phase\", hasProductsForPhase(phase) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\",\n                    children: selectedCondition.products[phase].length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 27\n                  }, this)]\n                }, phase, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Content, {\n                value: phase,\n                className: \"p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium mb-3\",\n                  children: [phase, \" Phase - Recommended Products\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 23\n                }, this), filteredProducts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-4\",\n                  children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 border rounded-lg p-4 hover:bg-gray-100\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-start\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-md font-medium\",\n                        children: product\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 611,\n                        columnNumber: 11\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleProductSelect(product),\n                        className: \"p-1 rounded-full hover:bg-gray-200\",\n                        title: \"View product details\",\n                        children: /*#__PURE__*/_jsxDEV(Info, {\n                          size: 18,\n                          className: \"text-blue-500\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 617,\n                          columnNumber: 13\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 612,\n                        columnNumber: 11\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 9\n                    }, this), selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-2 text-sm text-gray-600\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"font-medium\",\n                          children: \"Usage: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 623,\n                          columnNumber: 15\n                        }, this), selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')].usage]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 622,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 11\n                    }, this), product.includes('(Type 3/4 Only)') && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\",\n                        children: \"Recommended for Type 3/4 patients only\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 632,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 11\n                    }, this)]\n                  }, product, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 7\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 3\n                }, this) : activePatientType !== 'All' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 bg-gray-50 p-4 rounded-md border\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"No products recommended\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 7\n                    }, this), \" for \", phase, \" phase with patient Type \", activePatientType, \".\", /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mt-2\",\n                      children: \"Based on clinical guidelines, no product is necessary for this specific case.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 7\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 3\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500\",\n                  children: \"No products recommended for this phase.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 3\n                }, this)]\n              }, phase, true, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white shadow rounded-lg p-8 text-center text-gray-500\",\n            children: \"Select a condition to view details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n      open: modalOpen,\n      onOpenChange: setModalOpen,\n      children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n        children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n          className: \"fixed inset-0 bg-black/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n          className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n            className: \"text-xl font-semibold text-gray-900 mb-2\",\n            children: selectedProduct === null || selectedProduct === void 0 ? void 0 : selectedProduct.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Description, {\n            className: \"text-sm text-gray-500 mb-4\",\n            children: \"Product information and recommendation details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this), selectedProduct && selectedProduct.details && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-blue-800 mb-1\",\n                children: \"Usage Instructions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-blue-700\",\n                children: selectedProduct.details.usage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-green-800 mb-1\",\n                children: \"Clinical Rationale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-700\",\n                children: selectedProduct.details.rationale\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-purple-800 mb-1\",\n                children: \"Competitive Advantage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-purple-700\",\n                children: selectedProduct.details.competitive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-amber-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-amber-800 mb-1\",\n                children: \"Handling Objections\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-amber-700\",\n                children: selectedProduct.details.objection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 17\n            }, this), selectedProduct.details.factSheet && selectedProduct.details.factSheet !== '#' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: selectedProduct.details.factSheet,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n                children: \"View Fact Sheet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(Dialog.Close, {\n              asChild: true,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this), wizardOpen && /*#__PURE__*/_jsxDEV(DiagnosisWizard, {\n      conditions: conditions,\n      onClose: toggleWizard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 9\n    }, this), adminOpen && /*#__PURE__*/_jsxDEV(AdminPanel, {\n      conditions: conditions,\n      onConditionsUpdate: handleConditionsUpdate,\n      onClose: toggleAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(ClinicalChartMockup, \"2yV9Yo6w+hANNaUTnI8Dm9a1BOM=\");\n_c = ClinicalChartMockup;\nexport default ClinicalChartMockup;\nvar _c;\n$RefreshReg$(_c, \"ClinicalChartMockup\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Search","X","ChevronDown","Info","Stethoscope","Settings","Filter","ChevronRight","clsx","DiagnosisWizard","AdminPanel","conditionsDataImport","jsxDEV","_jsxDEV","PATIENT_TYPES","ClinicalChartMockup","_s","conditions","setConditions","filteredConditions","setFilteredConditions","selectedCondition","setSelectedCondition","categoryFilter","setCategoryFilter","ddsTypeFilter","setDdsTypeFilter","patientTypeFilter","setPatientTypeFilter","activePatientType","setActivePatientType","searchQuery","setSearchQuery","activeTab","setActiveTab","modalOpen","setModalOpen","selectedProduct","setSelectedProduct","wizardOpen","setWizardOpen","adminOpen","setAdminOpen","filteredProducts","setFilteredProducts","patientSpecificProducts","setPatientSpecificProducts","expandedSections","setExpandedSections","pitchPoints","competitiveAdvantage","handlingObjections","savedData","localStorage","getItem","parsedData","JSON","parse","length","phases","filtered","filter","condition","category","dds","includes","Array","isArray","patientType","name","toLowerCase","find","c","patientProducts","patientSpecificConfig","stringify","forEach","phase","products","phaseProducts","product","baseProduct","replace","push","categories","Set","map","ddsTypes","patientTypes","handleConditionSelect","handlePatientTypeSelect","type","handleProductSelect","details","productDetails","hasProductsForPhase","toggleWizard","toggleAdmin","handleConditionsUpdate","updatedConditions","updatedSelectedCondition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","htmlFor","Root","value","onValueChange","Trigger","id","Value","Icon","Portal","Content","Viewport","Item","ItemText","onChange","e","target","placeholder","join","prev","List","title","usage","open","onOpenChange","Overlay","Title","Description","rationale","competitive","objection","factSheet","href","rel","Close","asChild","onClose","onConditionsUpdate","_c","$RefreshReg$"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/ClinicalChartMockup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Search, X, ChevronDown, Info, Stethoscope, Settings, Filter, ChevronRight } from 'lucide-react';\nimport clsx from 'clsx';\nimport DiagnosisWizard from './DiagnosisWizard';\nimport AdminPanel from './AdminPanel';\nimport conditionsDataImport from '../conditions_complete.json';\n\n// PatientTypes definition based on project documentation\nconst PATIENT_TYPES = {\n  'Type 1': 'Healthy',\n  'Type 2': 'Mild inflammation, moderate risk',\n  'Type 3': 'Smoker, diabetic, immunocompromised',\n  'Type 4': 'Periodontal disease, chronic illness, poor healing'\n};\n\nfunction ClinicalChartMockup() {\n  // State management\n  const [conditions, setConditions] = useState([]);\n  const [filteredConditions, setFilteredConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categoryFilter, setCategoryFilter] = useState('All');\n  const [ddsTypeFilter, setDdsTypeFilter] = useState('All');\n  const [patientTypeFilter, setPatientTypeFilter] = useState('All');\n  const [activePatientType, setActivePatientType] = useState('All'); // Active patient type for product filtering\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [wizardOpen, setWizardOpen] = useState(false);\n  const [adminOpen, setAdminOpen] = useState(false);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Store filtered products\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({}); // Store patient-specific product recommendations\n  const [expandedSections, setExpandedSections] = useState({\n    pitchPoints: false,\n    competitiveAdvantage: false,\n    handlingObjections: false\n  });\n\n  // Load conditions on component mount\n  useEffect(() => {\n    // Check if saved data exists in localStorage\n    const savedData = localStorage.getItem('conditions_data');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setConditions(parsedData);\n      setFilteredConditions(parsedData);\n      \n      // Set default selected condition if data exists\n      if (parsedData.length > 0) {\n        setSelectedCondition(parsedData[0]);\n        setActiveTab(parsedData[0].phases[0]);\n      }\n    } else {\n      // Use imported data if no saved data exists\n      setConditions(conditionsDataImport);\n      setFilteredConditions(conditionsDataImport);\n      \n      // Set default selected condition if data exists\n      if (conditionsDataImport.length > 0) {\n        setSelectedCondition(conditionsDataImport[0]);\n        setActiveTab(conditionsDataImport[0].phases[0]);\n      }\n    }\n  }, []);\n\n  // Filter conditions based on selected filters and search query\n  useEffect(() => {\n    let filtered = [...conditions];\n    \n    // Filter by category\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.category === categoryFilter);\n    }\n    \n    // Filter by DDS type\n    if (ddsTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.dds.includes(ddsTypeFilter));\n    }\n    \n    // Filter by patient type\n    if (patientTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => {\n        // Check if condition's patientType includes the selected patient type\n        // This assumes patientType can be a string like \"Types 1 to 4\" or an array\n        if (Array.isArray(condition.patientType)) {\n          return condition.patientType.includes(`Type ${patientTypeFilter}`);\n        } else {\n          return condition.patientType.includes(patientTypeFilter);\n        }\n      });\n    }\n    \n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(condition => \n        condition.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    setFilteredConditions(filtered);\n    \n    // Update selected condition if it's no longer in filtered results\n    if (filtered.length > 0 && (!selectedCondition || \n        !filtered.find(c => c.name === selectedCondition.name))) {\n      setSelectedCondition(filtered[0]);\n      setActiveTab(filtered[0].phases[0]);\n    }\n  }, [conditions, categoryFilter, ddsTypeFilter, patientTypeFilter, searchQuery, selectedCondition]);\n\n  // Generate patient-specific product recommendations when selectedCondition changes\n  useEffect(() => {\n    if (!selectedCondition) return;\n    \n    // Create a map of phase -> patientType -> products\n    let patientProducts = {};\n    \n    // Check if condition has patientSpecificConfig from admin panel\n    if (selectedCondition.patientSpecificConfig) {\n      // Use the configuration directly\n      patientProducts = JSON.parse(JSON.stringify(selectedCondition.patientSpecificConfig));\n    } else {\n      // Fall back to the old method of inferring patient-specific products\n      // Process each phase\n      selectedCondition.phases.forEach(phase => {\n        patientProducts[phase] = {\n          'All': [...(selectedCondition.products[phase] || [])], // Default 'All' includes all products\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n        \n        // Extract patient-specific products from the condition's products\n        const phaseProducts = selectedCondition.products[phase] || [];\n        \n        // Process each product in this phase\n        phaseProducts.forEach(product => {\n          // Handle Type 3/4 Only products\n          if (product.includes('(Type 3/4 Only)')) {\n            const baseProduct = product.replace(' (Type 3/4 Only)', '');\n            patientProducts[phase]['3'].push(baseProduct);\n            patientProducts[phase]['4'].push(baseProduct);\n          } \n          // Regular products apply to all patient types\n          else {\n            patientProducts[phase]['1'].push(product);\n            patientProducts[phase]['2'].push(product);\n            patientProducts[phase]['3'].push(product);\n            patientProducts[phase]['4'].push(product);\n          }\n        });\n      });\n    }\n    \n    setPatientSpecificProducts(patientProducts);\n  }, [selectedCondition]);\n\n  // Filter products based on selected phase and patient type\n  useEffect(() => {\n    if (selectedCondition && activeTab && patientSpecificProducts[activeTab]) {\n      // If a specific patient type is selected, show that type's products\n      if (activePatientType !== 'All') {\n        setFilteredProducts(patientSpecificProducts[activeTab][activePatientType] || []);\n      } else {\n        // If 'All' is selected, show all products for this phase\n        setFilteredProducts(patientSpecificProducts[activeTab]['All'] || []);\n      }\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [selectedCondition, activeTab, activePatientType, patientSpecificProducts]);\n\n  // Extract unique categories for filter dropdown\n  const categories = ['All', ...new Set(conditions.map(condition => condition.category))];\n  \n  // Extract unique DDS types for filter dropdown\n  const ddsTypes = ['All'];\n  conditions.forEach(condition => {\n    condition.dds.forEach(dds => {\n      if (!ddsTypes.includes(dds)) {\n        ddsTypes.push(dds);\n      }\n    });\n  });\n\n  // Get patient types from PATIENT_TYPES constant\n  const patientTypes = ['All', '1', '2', '3', '4'];\n\n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActiveTab(condition.phases[0]);\n    setActivePatientType('All'); // Reset patient type filter when changing condition\n  };\n\n  // Handle patient type selection for product filtering\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n\n  // Handle product selection for modal\n  const handleProductSelect = (product) => {\n    setSelectedProduct({\n      name: product,\n      details: selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')]\n    });\n    setModalOpen(true);\n  };\n\n  // Determine if a phase has products for the selected condition\n  const hasProductsForPhase = (phase) => {\n    return selectedCondition && \n           selectedCondition.products && \n           selectedCondition.products[phase] && \n           selectedCondition.products[phase].length > 0;\n  };\n\n  // Toggle diagnosis wizard\n  const toggleWizard = () => {\n    setWizardOpen(!wizardOpen);\n  };\n  \n  // Toggle admin panel\n  const toggleAdmin = () => {\n    setAdminOpen(!adminOpen);\n  };\n  \n  // Handle conditions update from admin panel\n  const handleConditionsUpdate = (updatedConditions) => {\n    setConditions(updatedConditions);\n    \n    // If previously selected condition exists in updated data, keep it selected\n    if (selectedCondition) {\n      const updatedSelectedCondition = updatedConditions.find(c => c.name === selectedCondition.name);\n      if (updatedSelectedCondition) {\n        setSelectedCondition(updatedSelectedCondition);\n        \n        // Ensure active tab is valid for updated condition\n        if (updatedSelectedCondition.phases && !updatedSelectedCondition.phases.includes(activeTab)) {\n          setActiveTab(updatedSelectedCondition.phases[0]);\n        }\n      } else {\n        // If selected condition no longer exists, select the first condition\n        if (updatedConditions.length > 0) {\n          setSelectedCondition(updatedConditions[0]);\n          setActiveTab(updatedConditions[0].phases[0]);\n        } else {\n          setSelectedCondition(null);\n          setActiveTab('');\n        }\n      }\n    }\n  };\n\n  return (\n    \n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Clinical Chart Tool for Dental Sales Reps</h1>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={toggleWizard}\n              className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <Stethoscope size={18} className=\"mr-2\" />\n              Diagnosis Wizard\n            </button>\n            <button\n              onClick={toggleAdmin}\n              className=\"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n            >\n              <Settings size={18} className=\"mr-2\" />\n              Admin\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters Section */}\n        <div className=\"bg-white shadow rounded-lg p-4 mb-6\">\n          <h2 className=\"text-lg font-medium mb-4\">Filters</h2>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            {/* Category Filter */}\n            <div>\n              <label htmlFor=\"category-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Condition Category\n              </label>\n              <Select.Root value={categoryFilter} onValueChange={setCategoryFilter}>\n                <Select.Trigger id=\"category-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {categories.map((category) => (\n                        <Select.Item\n                          key={category}\n                          value={category}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{category}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* DDS Type Filter */}\n            <div>\n              <label htmlFor=\"dds-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                DDS Type\n              </label>\n              <Select.Root value={ddsTypeFilter} onValueChange={setDdsTypeFilter}>\n                <Select.Trigger id=\"dds-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {ddsTypes.map((dds) => (\n                        <Select.Item\n                          key={dds}\n                          value={dds}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{dds}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Patient Type Filter */}\n            <div>\n              <label htmlFor=\"patient-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Patient Type\n              </label>\n              <Select.Root value={patientTypeFilter} onValueChange={setPatientTypeFilter}>\n                <Select.Trigger id=\"patient-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {patientTypes.map((type) => (\n                        <Select.Item\n                          key={type}\n                          value={type}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>\n                            {type === 'All' ? 'All' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                          </Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Search */}\n            <div>\n              <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Search Condition\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search size={18} className=\"text-gray-400\" />\n                </div>\n                <input\n                  id=\"search\"\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  placeholder=\"Search conditions...\"\n                />\n                {searchQuery && (\n                  <button\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setSearchQuery('')}\n                  >\n                    <X size={18} className=\"text-gray-400 hover:text-gray-600\" />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n          {/* Conditions List */}\n          <div className=\"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\">\n            <h2 className=\"text-lg font-medium p-4 border-b\">Conditions</h2>\n            {filteredConditions.length === 0 ? (\n              <div className=\"p-4 text-gray-500\">No conditions match the selected filters.</div>\n            ) : (\n              <ul className=\"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\">\n                {filteredConditions.map((condition) => (\n                  <li \n                    key={condition.name}\n                    className={clsx(\n                      \"px-4 py-3 hover:bg-gray-50 cursor-pointer\",\n                      selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-50\" : \"\"\n                    )}\n                    onClick={() => handleConditionSelect(condition)}\n                  >\n                    <div className=\"font-medium\">{condition.name}</div>\n                    <div className=\"text-sm text-gray-500\">{condition.category}</div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {condition.dds.join(', ')} | {condition.patientType}\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n\n          {/* Selected Condition Details */}\n          <div className=\"lg:col-span-3\">\n            {selectedCondition ? (\n              <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n                <div className=\"p-4 border-b\">\n                  <h2 className=\"text-xl font-semibold\">{selectedCondition.name}</h2>\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    <span className=\"mr-2\">{selectedCondition.category}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.dds.join(', ')}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.patientType}</span>\n                  </div>\n                  {selectedCondition.pitchPoints && (\n                    <div className=\"mt-3\">\n                      {/* Key Pitch Points */}\n                      <div \n                        className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                          expandedSections.pitchPoints ? 'bg-blue-100' : 'bg-blue-50 hover:bg-blue-100'\n                        }`}\n                        onClick={() => setExpandedSections(prev => ({ \n                          ...prev, \n                          pitchPoints: !prev.pitchPoints \n                        }))}\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"font-medium text-blue-800\">Key Pitch Points</div>\n                          <div className=\"text-blue-600\">\n                            {expandedSections.pitchPoints ? \n                              <ChevronDown size={18} /> : \n                              <ChevronRight size={18} />\n                            }\n                          </div>\n                        </div>\n                        {expandedSections.pitchPoints && (\n                          <div className=\"text-blue-700 mt-2\">{selectedCondition.pitchPoints}</div>\n                        )}\n                      </div>\n                      \n                      {/* Competitive Advantage */}\n                      <div \n                        className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                          expandedSections.competitiveAdvantage ? 'bg-purple-100' : 'bg-purple-50 hover:bg-purple-100'\n                        }`}\n                        onClick={() => setExpandedSections(prev => ({ \n                          ...prev, \n                          competitiveAdvantage: !prev.competitiveAdvantage \n                        }))}\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"font-medium text-purple-800\">Competitive Advantage</div>\n                          <div className=\"text-purple-600\">\n                            {expandedSections.competitiveAdvantage ? \n                              <ChevronDown size={18} /> : \n                              <ChevronRight size={18} />\n                            }\n                          </div>\n                        </div>\n                        {expandedSections.competitiveAdvantage && (\n                          <div className=\"text-purple-700 mt-2\">\n                            {selectedCondition.competitiveAdvantage || 'No competitive advantage information available.'}\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Handling Objections */}\n                      <div \n                        className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                          expandedSections.handlingObjections ? 'bg-amber-100' : 'bg-amber-50 hover:bg-amber-100'\n                        }`}\n                        onClick={() => setExpandedSections(prev => ({ \n                          ...prev, \n                          handlingObjections: !prev.handlingObjections \n                        }))}\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"font-medium text-amber-800\">Handling Objections</div>\n                          <div className=\"text-amber-600\">\n                            {expandedSections.handlingObjections ? \n                              <ChevronDown size={18} /> : \n                              <ChevronRight size={18} />\n                            }\n                          </div>\n                        </div>\n                        {expandedSections.handlingObjections && (\n                          <div className=\"text-amber-700 mt-2\">\n                            {selectedCondition.handlingObjections || 'No objection handling information available.'}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Patient Type Filter for Products */}\n                <div className=\"border-b p-4 bg-gray-50\">\n                  <div className=\"flex flex-wrap items-center gap-4\">\n                    <div className=\"flex-shrink-0\">\n                      <span className=\"text-sm font-medium text-gray-600\">Show Recommendations For:</span>\n                    </div>\n                    \n                    {/* Patient Type Selection */}\n                    <div className=\"flex-grow\">\n                      <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n                        <Select.Trigger className=\"flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                          <div className=\"flex items-center\">\n                            <Filter size={16} className=\"mr-2 text-gray-500\" />\n                            <Select.Value placeholder=\"Select Patient Type\" />\n                          </div>\n                          <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                        </Select.Trigger>\n                        <Select.Portal>\n                          <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                            <Select.Viewport className=\"p-1\">\n                              {patientTypes.map((type) => (\n                                <Select.Item\n                                  key={type}\n                                  value={type}\n                                  className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                                >\n                                  <Select.ItemText>\n                                    {type === 'All' ? 'All Patient Types' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                                  </Select.ItemText>\n                                </Select.Item>\n                              ))}\n                            </Select.Viewport>\n                          </Select.Content>\n                        </Select.Portal>\n                      </Select.Root>\n                    </div>\n                  </div>\n                  \n                  {activePatientType !== 'All' && (\n                    <div className=\"mt-2 text-sm text-blue-600 flex items-center\">\n                      <Info size={14} className=\"mr-1\" />\n                      Showing specific recommendations for: \n                      <span className=\"font-medium ml-1\">\n                        {`Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`}\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                {/* Treatment Phases Tabs */}\n                <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n                  <Tabs.List className=\"flex border-b divide-x divide-gray-200\">\n                    {selectedCondition.phases.map((phase) => (\n                      <Tabs.Trigger\n                        key={phase}\n                        value={phase}\n                        className={clsx(\n                          \"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\",\n                          activeTab === phase \n                            ? \"text-blue-600 border-b-2 border-blue-600\"\n                            : \"text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                        )}\n                      >\n                        {phase} Phase\n                        {hasProductsForPhase(phase) && (\n                          <span className=\"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\">\n                            {selectedCondition.products[phase].length}\n                          </span>\n                        )}\n                      </Tabs.Trigger>\n                    ))}\n                  </Tabs.List>\n\n                  {selectedCondition.phases.map((phase) => (\n                    <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                      <h3 className=\"text-lg font-medium mb-3\">{phase} Phase - Recommended Products</h3>\n                      \n                      {filteredProducts.length > 0 ? (\n  <div className=\"space-y-4\">\n    {filteredProducts.map((product) => (\n      <div \n        key={product}\n        className=\"bg-gray-50 border rounded-lg p-4 hover:bg-gray-100\"\n      >\n        <div className=\"flex justify-between items-start\">\n          <h4 className=\"text-md font-medium\">{product}</h4>\n          <button\n            onClick={() => handleProductSelect(product)}\n            className=\"p-1 rounded-full hover:bg-gray-200\"\n            title=\"View product details\"\n          >\n            <Info size={18} className=\"text-blue-500\" />\n          </button>\n        </div>\n        {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')] && (\n          <div className=\"mt-2 text-sm text-gray-600\">\n            <div>\n              <span className=\"font-medium\">Usage: </span>\n              {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')].usage}\n            </div>\n          </div>\n        )}\n        \n        {/* Tag to show this is specific for Type 3/4 patients */}\n        {product.includes('(Type 3/4 Only)') && (\n          <div className=\"mt-2\">\n            <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\">\n              Recommended for Type 3/4 patients only\n            </span>\n          </div>\n        )}\n      </div>\n    ))}\n  </div>\n) : activePatientType !== 'All' ? (\n  <div className=\"text-gray-500 bg-gray-50 p-4 rounded-md border\">\n    <div>\n      <strong>No products recommended</strong> for {phase} phase with patient Type {activePatientType}.\n      <p className=\"mt-2\">Based on clinical guidelines, no product is necessary for this specific case.</p>\n    </div>\n  </div>\n) : (\n  <div className=\"text-gray-500\">No products recommended for this phase.</div>\n)}\n                    </Tabs.Content>\n                  ))}\n                </Tabs.Root>\n              </div>\n            ) : (\n              <div className=\"bg-white shadow rounded-lg p-8 text-center text-gray-500\">\n                Select a condition to view details\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n\n      {/* Product Details Modal */}\n      <Dialog.Root open={modalOpen} onOpenChange={setModalOpen}>\n        <Dialog.Portal>\n          <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\n          <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\">\n            <Dialog.Title className=\"text-xl font-semibold text-gray-900 mb-2\">\n              {selectedProduct?.name}\n            </Dialog.Title>\n            <Dialog.Description className=\"text-sm text-gray-500 mb-4\">\n              Product information and recommendation details\n            </Dialog.Description>\n            \n            {selectedProduct && selectedProduct.details && (\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-800 mb-1\">Usage Instructions</h4>\n                  <p className=\"text-blue-700\">{selectedProduct.details.usage}</p>\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-green-800 mb-1\">Clinical Rationale</h4>\n                  <p className=\"text-green-700\">{selectedProduct.details.rationale}</p>\n                </div>\n                \n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-purple-800 mb-1\">Competitive Advantage</h4>\n                  <p className=\"text-purple-700\">{selectedProduct.details.competitive}</p>\n                </div>\n                \n                <div className=\"bg-amber-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-amber-800 mb-1\">Handling Objections</h4>\n                  <p className=\"text-amber-700\">{selectedProduct.details.objection}</p>\n                </div>\n                \n                {selectedProduct.details.factSheet && selectedProduct.details.factSheet !== '#' && (\n                  <div className=\"mt-4\">\n                    <a \n                      href={selectedProduct.details.factSheet}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      View Fact Sheet\n                    </a>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            <div className=\"mt-6 flex justify-end\">\n              <Dialog.Close asChild>\n                <button\n                  className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                >\n                  Close\n                </button>\n              </Dialog.Close>\n            </div>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n\n      {/* Diagnosis Wizard */}\n      {wizardOpen && (\n        <DiagnosisWizard \n          conditions={conditions} \n          onClose={toggleWizard} \n        />\n      )}\n      \n      {/* Admin Panel */}\n      {adminOpen && (\n        <AdminPanel \n          conditions={conditions}\n          onConditionsUpdate={handleConditionsUpdate}\n          onClose={toggleAdmin}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ClinicalChartMockup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,KAAKC,IAAI,MAAM,sBAAsB;AAC5C,OAAO,KAAKC,MAAM,MAAM,wBAAwB;AAChD,OAAO,KAAKC,MAAM,MAAM,wBAAwB;AAChD,SAASC,MAAM,EAAEC,CAAC,EAAEC,WAAW,EAAEC,IAAI,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,YAAY,QAAQ,cAAc;AACxG,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,oBAAoB,MAAM,6BAA6B;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG;EACpB,QAAQ,EAAE,SAAS;EACnB,QAAQ,EAAE,kCAAkC;EAC5C,QAAQ,EAAE,qCAAqC;EAC/C,QAAQ,EAAE;AACZ,CAAC;AAED,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC0B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACgC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACkC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnE,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8C,SAAS,EAAEC,YAAY,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACkD,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,MAAM,CAACoD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrD,QAAQ,CAAC;IACvDsD,WAAW,EAAE,KAAK;IAClBC,oBAAoB,EAAE,KAAK;IAC3BC,kBAAkB,EAAE;EACtB,CAAC,CAAC;;EAEF;EACAvD,SAAS,CAAC,MAAM;IACd;IACA,MAAMwD,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACzD,IAAIF,SAAS,EAAE;MACb,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MACxClC,aAAa,CAACqC,UAAU,CAAC;MACzBnC,qBAAqB,CAACmC,UAAU,CAAC;;MAEjC;MACA,IAAIA,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE;QACzBpC,oBAAoB,CAACiC,UAAU,CAAC,CAAC,CAAC,CAAC;QACnCrB,YAAY,CAACqB,UAAU,CAAC,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;MACvC;IACF,CAAC,MAAM;MACL;MACAzC,aAAa,CAACP,oBAAoB,CAAC;MACnCS,qBAAqB,CAACT,oBAAoB,CAAC;;MAE3C;MACA,IAAIA,oBAAoB,CAAC+C,MAAM,GAAG,CAAC,EAAE;QACnCpC,oBAAoB,CAACX,oBAAoB,CAAC,CAAC,CAAC,CAAC;QAC7CuB,YAAY,CAACvB,oBAAoB,CAAC,CAAC,CAAC,CAACgD,MAAM,CAAC,CAAC,CAAC,CAAC;MACjD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/D,SAAS,CAAC,MAAM;IACd,IAAIgE,QAAQ,GAAG,CAAC,GAAG3C,UAAU,CAAC;;IAE9B;IACA,IAAIM,cAAc,KAAK,KAAK,EAAE;MAC5BqC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,QAAQ,KAAKxC,cAAc,CAAC;IAChF;;IAEA;IACA,IAAIE,aAAa,KAAK,KAAK,EAAE;MAC3BmC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACE,GAAG,CAACC,QAAQ,CAACxC,aAAa,CAAC,CAAC;IAChF;;IAEA;IACA,IAAIE,iBAAiB,KAAK,KAAK,EAAE;MAC/BiC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,SAAS,IAAI;QACtC;QACA;QACA,IAAII,KAAK,CAACC,OAAO,CAACL,SAAS,CAACM,WAAW,CAAC,EAAE;UACxC,OAAON,SAAS,CAACM,WAAW,CAACH,QAAQ,CAAC,QAAQtC,iBAAiB,EAAE,CAAC;QACpE,CAAC,MAAM;UACL,OAAOmC,SAAS,CAACM,WAAW,CAACH,QAAQ,CAACtC,iBAAiB,CAAC;QAC1D;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,IAAII,WAAW,EAAE;MACf6B,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,SAAS,IAClCA,SAAS,CAACO,IAAI,CAACC,WAAW,CAAC,CAAC,CAACL,QAAQ,CAAClC,WAAW,CAACuC,WAAW,CAAC,CAAC,CACjE,CAAC;IACH;IAEAlD,qBAAqB,CAACwC,QAAQ,CAAC;;IAE/B;IACA,IAAIA,QAAQ,CAACF,MAAM,GAAG,CAAC,KAAK,CAACrC,iBAAiB,IAC1C,CAACuC,QAAQ,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,IAAI,KAAKhD,iBAAiB,CAACgD,IAAI,CAAC,CAAC,EAAE;MAC3D/C,oBAAoB,CAACsC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACjC1B,YAAY,CAAC0B,QAAQ,CAAC,CAAC,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC;EACF,CAAC,EAAE,CAAC1C,UAAU,EAAEM,cAAc,EAAEE,aAAa,EAAEE,iBAAiB,EAAEI,WAAW,EAAEV,iBAAiB,CAAC,CAAC;;EAElG;EACAzB,SAAS,CAAC,MAAM;IACd,IAAI,CAACyB,iBAAiB,EAAE;;IAExB;IACA,IAAIoD,eAAe,GAAG,CAAC,CAAC;;IAExB;IACA,IAAIpD,iBAAiB,CAACqD,qBAAqB,EAAE;MAC3C;MACAD,eAAe,GAAGjB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACmB,SAAS,CAACtD,iBAAiB,CAACqD,qBAAqB,CAAC,CAAC;IACvF,CAAC,MAAM;MACL;MACA;MACArD,iBAAiB,CAACsC,MAAM,CAACiB,OAAO,CAACC,KAAK,IAAI;QACxCJ,eAAe,CAACI,KAAK,CAAC,GAAG;UACvB,KAAK,EAAE,CAAC,IAAIxD,iBAAiB,CAACyD,QAAQ,CAACD,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;UAAE;UACvD,GAAG,EAAE,EAAE;UACP,GAAG,EAAE,EAAE;UACP,GAAG,EAAE,EAAE;UACP,GAAG,EAAE;QACP,CAAC;;QAED;QACA,MAAME,aAAa,GAAG1D,iBAAiB,CAACyD,QAAQ,CAACD,KAAK,CAAC,IAAI,EAAE;;QAE7D;QACAE,aAAa,CAACH,OAAO,CAACI,OAAO,IAAI;UAC/B;UACA,IAAIA,OAAO,CAACf,QAAQ,CAAC,iBAAiB,CAAC,EAAE;YACvC,MAAMgB,WAAW,GAAGD,OAAO,CAACE,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;YAC3DT,eAAe,CAACI,KAAK,CAAC,CAAC,GAAG,CAAC,CAACM,IAAI,CAACF,WAAW,CAAC;YAC7CR,eAAe,CAACI,KAAK,CAAC,CAAC,GAAG,CAAC,CAACM,IAAI,CAACF,WAAW,CAAC;UAC/C;UACA;UAAA,KACK;YACHR,eAAe,CAACI,KAAK,CAAC,CAAC,GAAG,CAAC,CAACM,IAAI,CAACH,OAAO,CAAC;YACzCP,eAAe,CAACI,KAAK,CAAC,CAAC,GAAG,CAAC,CAACM,IAAI,CAACH,OAAO,CAAC;YACzCP,eAAe,CAACI,KAAK,CAAC,CAAC,GAAG,CAAC,CAACM,IAAI,CAACH,OAAO,CAAC;YACzCP,eAAe,CAACI,KAAK,CAAC,CAAC,GAAG,CAAC,CAACM,IAAI,CAACH,OAAO,CAAC;UAC3C;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEAlC,0BAA0B,CAAC2B,eAAe,CAAC;EAC7C,CAAC,EAAE,CAACpD,iBAAiB,CAAC,CAAC;;EAEvB;EACAzB,SAAS,CAAC,MAAM;IACd,IAAIyB,iBAAiB,IAAIY,SAAS,IAAIY,uBAAuB,CAACZ,SAAS,CAAC,EAAE;MACxE;MACA,IAAIJ,iBAAiB,KAAK,KAAK,EAAE;QAC/Be,mBAAmB,CAACC,uBAAuB,CAACZ,SAAS,CAAC,CAACJ,iBAAiB,CAAC,IAAI,EAAE,CAAC;MAClF,CAAC,MAAM;QACL;QACAe,mBAAmB,CAACC,uBAAuB,CAACZ,SAAS,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;MACtE;IACF,CAAC,MAAM;MACLW,mBAAmB,CAAC,EAAE,CAAC;IACzB;EACF,CAAC,EAAE,CAACvB,iBAAiB,EAAEY,SAAS,EAAEJ,iBAAiB,EAAEgB,uBAAuB,CAAC,CAAC;;EAE9E;EACA,MAAMuC,UAAU,GAAG,CAAC,KAAK,EAAE,GAAG,IAAIC,GAAG,CAACpE,UAAU,CAACqE,GAAG,CAACxB,SAAS,IAAIA,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC;;EAEvF;EACA,MAAMwB,QAAQ,GAAG,CAAC,KAAK,CAAC;EACxBtE,UAAU,CAAC2D,OAAO,CAACd,SAAS,IAAI;IAC9BA,SAAS,CAACE,GAAG,CAACY,OAAO,CAACZ,GAAG,IAAI;MAC3B,IAAI,CAACuB,QAAQ,CAACtB,QAAQ,CAACD,GAAG,CAAC,EAAE;QAC3BuB,QAAQ,CAACJ,IAAI,CAACnB,GAAG,CAAC;MACpB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMwB,YAAY,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;EAEhD;EACA,MAAMC,qBAAqB,GAAI3B,SAAS,IAAK;IAC3CxC,oBAAoB,CAACwC,SAAS,CAAC;IAC/B5B,YAAY,CAAC4B,SAAS,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC7B,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAM4D,uBAAuB,GAAIC,IAAI,IAAK;IACxC7D,oBAAoB,CAAC6D,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIZ,OAAO,IAAK;IACvC1C,kBAAkB,CAAC;MACjB+B,IAAI,EAAEW,OAAO;MACba,OAAO,EAAExE,iBAAiB,CAACyE,cAAc,CAACd,OAAO,CAACE,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;IACnF,CAAC,CAAC;IACF9C,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAM2D,mBAAmB,GAAIlB,KAAK,IAAK;IACrC,OAAOxD,iBAAiB,IACjBA,iBAAiB,CAACyD,QAAQ,IAC1BzD,iBAAiB,CAACyD,QAAQ,CAACD,KAAK,CAAC,IACjCxD,iBAAiB,CAACyD,QAAQ,CAACD,KAAK,CAAC,CAACnB,MAAM,GAAG,CAAC;EACrD,CAAC;;EAED;EACA,MAAMsC,YAAY,GAAGA,CAAA,KAAM;IACzBxD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM0D,WAAW,GAAGA,CAAA,KAAM;IACxBvD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMyD,sBAAsB,GAAIC,iBAAiB,IAAK;IACpDjF,aAAa,CAACiF,iBAAiB,CAAC;;IAEhC;IACA,IAAI9E,iBAAiB,EAAE;MACrB,MAAM+E,wBAAwB,GAAGD,iBAAiB,CAAC5B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,IAAI,KAAKhD,iBAAiB,CAACgD,IAAI,CAAC;MAC/F,IAAI+B,wBAAwB,EAAE;QAC5B9E,oBAAoB,CAAC8E,wBAAwB,CAAC;;QAE9C;QACA,IAAIA,wBAAwB,CAACzC,MAAM,IAAI,CAACyC,wBAAwB,CAACzC,MAAM,CAACM,QAAQ,CAAChC,SAAS,CAAC,EAAE;UAC3FC,YAAY,CAACkE,wBAAwB,CAACzC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClD;MACF,CAAC,MAAM;QACL;QACA,IAAIwC,iBAAiB,CAACzC,MAAM,GAAG,CAAC,EAAE;UAChCpC,oBAAoB,CAAC6E,iBAAiB,CAAC,CAAC,CAAC,CAAC;UAC1CjE,YAAY,CAACiE,iBAAiB,CAAC,CAAC,CAAC,CAACxC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,MAAM;UACLrC,oBAAoB,CAAC,IAAI,CAAC;UAC1BY,YAAY,CAAC,EAAE,CAAC;QAClB;MACF;IACF;EACF,CAAC;EAED,oBAEErB,OAAA;IAAKwF,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCzF,OAAA;MAAQwF,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACpCzF,OAAA;QAAKwF,SAAS,EAAC,+EAA+E;QAAAC,QAAA,gBAC5FzF,OAAA;UAAIwF,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAyC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/F7F,OAAA;UAAKwF,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BzF,OAAA;YACE8F,OAAO,EAAEX,YAAa;YACtBK,SAAS,EAAC,gKAAgK;YAAAC,QAAA,gBAE1KzF,OAAA,CAACT,WAAW;cAACwG,IAAI,EAAE,EAAG;cAACP,SAAS,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,oBAE5C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7F,OAAA;YACE8F,OAAO,EAAEV,WAAY;YACrBI,SAAS,EAAC,gKAAgK;YAAAC,QAAA,gBAE1KzF,OAAA,CAACR,QAAQ;cAACuG,IAAI,EAAE,EAAG;cAACP,SAAS,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,SAEzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAET7F,OAAA;MAAMwF,SAAS,EAAC,6CAA6C;MAAAC,QAAA,gBAE3DzF,OAAA;QAAKwF,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAClDzF,OAAA;UAAIwF,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrD7F,OAAA;UAAKwF,SAAS,EAAC,sDAAsD;UAAAC,QAAA,gBAEnEzF,OAAA;YAAAyF,QAAA,gBACEzF,OAAA;cAAOgG,OAAO,EAAC,iBAAiB;cAACR,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAE1F;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR7F,OAAA,CAACd,MAAM,CAAC+G,IAAI;cAACC,KAAK,EAAExF,cAAe;cAACyF,aAAa,EAAExF,iBAAkB;cAAA8E,QAAA,gBACnEzF,OAAA,CAACd,MAAM,CAACkH,OAAO;gBAACC,EAAE,EAAC,iBAAiB;gBAACb,SAAS,EAAC,2LAA2L;gBAAAC,QAAA,gBACxOzF,OAAA,CAACd,MAAM,CAACoH,KAAK;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAChB7F,OAAA,CAACd,MAAM,CAACqH,IAAI;kBAAAd,QAAA,eAACzF,OAAA,CAACX,WAAW;oBAAC0G,IAAI,EAAE;kBAAG;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC,eACjB7F,OAAA,CAACd,MAAM,CAACsH,MAAM;gBAAAf,QAAA,eACZzF,OAAA,CAACd,MAAM,CAACuH,OAAO;kBAACjB,SAAS,EAAC,sDAAsD;kBAAAC,QAAA,eAC9EzF,OAAA,CAACd,MAAM,CAACwH,QAAQ;oBAAClB,SAAS,EAAC,KAAK;oBAAAC,QAAA,EAC7BlB,UAAU,CAACE,GAAG,CAAEvB,QAAQ,iBACvBlD,OAAA,CAACd,MAAM,CAACyH,IAAI;sBAEVT,KAAK,EAAEhD,QAAS;sBAChBsC,SAAS,EAAC,6HAA6H;sBAAAC,QAAA,eAEvIzF,OAAA,CAACd,MAAM,CAAC0H,QAAQ;wBAAAnB,QAAA,EAAEvC;sBAAQ;wBAAAwC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAkB;oBAAC,GAJxC3C,QAAQ;sBAAAwC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAKF,CACd;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACa;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eAGN7F,OAAA;YAAAyF,QAAA,gBACEzF,OAAA;cAAOgG,OAAO,EAAC,YAAY;cAACR,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAErF;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR7F,OAAA,CAACd,MAAM,CAAC+G,IAAI;cAACC,KAAK,EAAEtF,aAAc;cAACuF,aAAa,EAAEtF,gBAAiB;cAAA4E,QAAA,gBACjEzF,OAAA,CAACd,MAAM,CAACkH,OAAO;gBAACC,EAAE,EAAC,YAAY;gBAACb,SAAS,EAAC,2LAA2L;gBAAAC,QAAA,gBACnOzF,OAAA,CAACd,MAAM,CAACoH,KAAK;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAChB7F,OAAA,CAACd,MAAM,CAACqH,IAAI;kBAAAd,QAAA,eAACzF,OAAA,CAACX,WAAW;oBAAC0G,IAAI,EAAE;kBAAG;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC,eACjB7F,OAAA,CAACd,MAAM,CAACsH,MAAM;gBAAAf,QAAA,eACZzF,OAAA,CAACd,MAAM,CAACuH,OAAO;kBAACjB,SAAS,EAAC,sDAAsD;kBAAAC,QAAA,eAC9EzF,OAAA,CAACd,MAAM,CAACwH,QAAQ;oBAAClB,SAAS,EAAC,KAAK;oBAAAC,QAAA,EAC7Bf,QAAQ,CAACD,GAAG,CAAEtB,GAAG,iBAChBnD,OAAA,CAACd,MAAM,CAACyH,IAAI;sBAEVT,KAAK,EAAE/C,GAAI;sBACXqC,SAAS,EAAC,6HAA6H;sBAAAC,QAAA,eAEvIzF,OAAA,CAACd,MAAM,CAAC0H,QAAQ;wBAAAnB,QAAA,EAAEtC;sBAAG;wBAAAuC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAkB;oBAAC,GAJnC1C,GAAG;sBAAAuC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAKG,CACd;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACa;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eAGN7F,OAAA;YAAAyF,QAAA,gBACEzF,OAAA;cAAOgG,OAAO,EAAC,gBAAgB;cAACR,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAEzF;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR7F,OAAA,CAACd,MAAM,CAAC+G,IAAI;cAACC,KAAK,EAAEpF,iBAAkB;cAACqF,aAAa,EAAEpF,oBAAqB;cAAA0E,QAAA,gBACzEzF,OAAA,CAACd,MAAM,CAACkH,OAAO;gBAACC,EAAE,EAAC,gBAAgB;gBAACb,SAAS,EAAC,2LAA2L;gBAAAC,QAAA,gBACvOzF,OAAA,CAACd,MAAM,CAACoH,KAAK;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAChB7F,OAAA,CAACd,MAAM,CAACqH,IAAI;kBAAAd,QAAA,eAACzF,OAAA,CAACX,WAAW;oBAAC0G,IAAI,EAAE;kBAAG;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC,eACjB7F,OAAA,CAACd,MAAM,CAACsH,MAAM;gBAAAf,QAAA,eACZzF,OAAA,CAACd,MAAM,CAACuH,OAAO;kBAACjB,SAAS,EAAC,sDAAsD;kBAAAC,QAAA,eAC9EzF,OAAA,CAACd,MAAM,CAACwH,QAAQ;oBAAClB,SAAS,EAAC,KAAK;oBAAAC,QAAA,EAC7Bd,YAAY,CAACF,GAAG,CAAEK,IAAI,iBACrB9E,OAAA,CAACd,MAAM,CAACyH,IAAI;sBAEVT,KAAK,EAAEpB,IAAK;sBACZU,SAAS,EAAC,6HAA6H;sBAAAC,QAAA,eAEvIzF,OAAA,CAACd,MAAM,CAAC0H,QAAQ;wBAAAnB,QAAA,EACbX,IAAI,KAAK,KAAK,GAAG,KAAK,GAAG,QAAQA,IAAI,KAAK7E,aAAa,CAAC,QAAQ6E,IAAI,EAAE,CAAC;sBAAE;wBAAAY,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC3D;oBAAC,GANbf,IAAI;sBAAAY,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAOE,CACd;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACa;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eAGN7F,OAAA;YAAAyF,QAAA,gBACEzF,OAAA;cAAOgG,OAAO,EAAC,QAAQ;cAACR,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAEjF;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR7F,OAAA;cAAKwF,SAAS,EAAC,UAAU;cAAAC,QAAA,gBACvBzF,OAAA;gBAAKwF,SAAS,EAAC,sEAAsE;gBAAAC,QAAA,eACnFzF,OAAA,CAACb,MAAM;kBAAC4G,IAAI,EAAE,EAAG;kBAACP,SAAS,EAAC;gBAAe;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C,CAAC,eACN7F,OAAA;gBACEqG,EAAE,EAAC,QAAQ;gBACXvB,IAAI,EAAC,MAAM;gBACXoB,KAAK,EAAEhF,WAAY;gBACnB2F,QAAQ,EAAGC,CAAC,IAAK3F,cAAc,CAAC2F,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;gBAChDV,SAAS,EAAC,4JAA4J;gBACtKwB,WAAW,EAAC;cAAsB;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC,EACD3E,WAAW,iBACVlB,OAAA;gBACEwF,SAAS,EAAC,mDAAmD;gBAC7DM,OAAO,EAAEA,CAAA,KAAM3E,cAAc,CAAC,EAAE,CAAE;gBAAAsE,QAAA,eAElCzF,OAAA,CAACZ,CAAC;kBAAC2G,IAAI,EAAE,EAAG;kBAACP,SAAS,EAAC;gBAAmC;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN7F,OAAA;QAAKwF,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBAEpDzF,OAAA;UAAKwF,SAAS,EAAC,0DAA0D;UAAAC,QAAA,gBACvEzF,OAAA;YAAIwF,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC/DvF,kBAAkB,CAACuC,MAAM,KAAK,CAAC,gBAC9B7C,OAAA;YAAKwF,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAyC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAElF7F,OAAA;YAAIwF,SAAS,EAAC,uDAAuD;YAAAC,QAAA,EAClEnF,kBAAkB,CAACmE,GAAG,CAAExB,SAAS,iBAChCjD,OAAA;cAEEwF,SAAS,EAAE7F,IAAI,CACb,2CAA2C,EAC3Ca,iBAAiB,IAAIA,iBAAiB,CAACgD,IAAI,KAAKP,SAAS,CAACO,IAAI,GAAG,YAAY,GAAG,EAClF,CAAE;cACFsC,OAAO,EAAEA,CAAA,KAAMlB,qBAAqB,CAAC3B,SAAS,CAAE;cAAAwC,QAAA,gBAEhDzF,OAAA;gBAAKwF,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAExC,SAAS,CAACO;cAAI;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACnD7F,OAAA;gBAAKwF,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAExC,SAAS,CAACC;cAAQ;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjE7F,OAAA;gBAAKwF,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,GACxCxC,SAAS,CAACE,GAAG,CAAC8D,IAAI,CAAC,IAAI,CAAC,EAAC,KAAG,EAAChE,SAAS,CAACM,WAAW;cAAA;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChD,CAAC;YAAA,GAXD5C,SAAS,CAACO,IAAI;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYjB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGN7F,OAAA;UAAKwF,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BjF,iBAAiB,gBAChBR,OAAA;YAAKwF,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBACzDzF,OAAA;cAAKwF,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BzF,OAAA;gBAAIwF,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAEjF,iBAAiB,CAACgD;cAAI;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnE7F,OAAA;gBAAKwF,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,gBACzCzF,OAAA;kBAAMwF,SAAS,EAAC,MAAM;kBAAAC,QAAA,EAAEjF,iBAAiB,CAAC0C;gBAAQ;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1D7F,OAAA;kBAAMwF,SAAS,EAAC,MAAM;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC/B7F,OAAA;kBAAAyF,QAAA,EAAOjF,iBAAiB,CAAC2C,GAAG,CAAC8D,IAAI,CAAC,IAAI;gBAAC;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC/C7F,OAAA;kBAAMwF,SAAS,EAAC,MAAM;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC/B7F,OAAA;kBAAAyF,QAAA,EAAOjF,iBAAiB,CAAC+C;gBAAW;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC,CAAC,EACLrF,iBAAiB,CAAC4B,WAAW,iBAC5BpC,OAAA;gBAAKwF,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAEnBzF,OAAA;kBACEwF,SAAS,EAAE,wDACTtD,gBAAgB,CAACE,WAAW,GAAG,aAAa,GAAG,8BAA8B,EAC5E;kBACH0D,OAAO,EAAEA,CAAA,KAAM3D,mBAAmB,CAAC+E,IAAI,KAAK;oBAC1C,GAAGA,IAAI;oBACP9E,WAAW,EAAE,CAAC8E,IAAI,CAAC9E;kBACrB,CAAC,CAAC,CAAE;kBAAAqD,QAAA,gBAEJzF,OAAA;oBAAKwF,SAAS,EAAC,mCAAmC;oBAAAC,QAAA,gBAChDzF,OAAA;sBAAKwF,SAAS,EAAC,2BAA2B;sBAAAC,QAAA,EAAC;oBAAgB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACjE7F,OAAA;sBAAKwF,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAC3BvD,gBAAgB,CAACE,WAAW,gBAC3BpC,OAAA,CAACX,WAAW;wBAAC0G,IAAI,EAAE;sBAAG;wBAAAL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,gBACzB7F,OAAA,CAACN,YAAY;wBAACqG,IAAI,EAAE;sBAAG;wBAAAL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEzB,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EACL3D,gBAAgB,CAACE,WAAW,iBAC3BpC,OAAA;oBAAKwF,SAAS,EAAC,oBAAoB;oBAAAC,QAAA,EAAEjF,iBAAiB,CAAC4B;kBAAW;oBAAAsD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CACzE;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eAGN7F,OAAA;kBACEwF,SAAS,EAAE,wDACTtD,gBAAgB,CAACG,oBAAoB,GAAG,eAAe,GAAG,kCAAkC,EAC3F;kBACHyD,OAAO,EAAEA,CAAA,KAAM3D,mBAAmB,CAAC+E,IAAI,KAAK;oBAC1C,GAAGA,IAAI;oBACP7E,oBAAoB,EAAE,CAAC6E,IAAI,CAAC7E;kBAC9B,CAAC,CAAC,CAAE;kBAAAoD,QAAA,gBAEJzF,OAAA;oBAAKwF,SAAS,EAAC,mCAAmC;oBAAAC,QAAA,gBAChDzF,OAAA;sBAAKwF,SAAS,EAAC,6BAA6B;sBAAAC,QAAA,EAAC;oBAAqB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACxE7F,OAAA;sBAAKwF,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,EAC7BvD,gBAAgB,CAACG,oBAAoB,gBACpCrC,OAAA,CAACX,WAAW;wBAAC0G,IAAI,EAAE;sBAAG;wBAAAL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,gBACzB7F,OAAA,CAACN,YAAY;wBAACqG,IAAI,EAAE;sBAAG;wBAAAL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEzB,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EACL3D,gBAAgB,CAACG,oBAAoB,iBACpCrC,OAAA;oBAAKwF,SAAS,EAAC,sBAAsB;oBAAAC,QAAA,EAClCjF,iBAAiB,CAAC6B,oBAAoB,IAAI;kBAAiD;oBAAAqD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzF,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eAGN7F,OAAA;kBACEwF,SAAS,EAAE,wDACTtD,gBAAgB,CAACI,kBAAkB,GAAG,cAAc,GAAG,gCAAgC,EACtF;kBACHwD,OAAO,EAAEA,CAAA,KAAM3D,mBAAmB,CAAC+E,IAAI,KAAK;oBAC1C,GAAGA,IAAI;oBACP5E,kBAAkB,EAAE,CAAC4E,IAAI,CAAC5E;kBAC5B,CAAC,CAAC,CAAE;kBAAAmD,QAAA,gBAEJzF,OAAA;oBAAKwF,SAAS,EAAC,mCAAmC;oBAAAC,QAAA,gBAChDzF,OAAA;sBAAKwF,SAAS,EAAC,4BAA4B;sBAAAC,QAAA,EAAC;oBAAmB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACrE7F,OAAA;sBAAKwF,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,EAC5BvD,gBAAgB,CAACI,kBAAkB,gBAClCtC,OAAA,CAACX,WAAW;wBAAC0G,IAAI,EAAE;sBAAG;wBAAAL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,gBACzB7F,OAAA,CAACN,YAAY;wBAACqG,IAAI,EAAE;sBAAG;wBAAAL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEzB,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EACL3D,gBAAgB,CAACI,kBAAkB,iBAClCtC,OAAA;oBAAKwF,SAAS,EAAC,qBAAqB;oBAAAC,QAAA,EACjCjF,iBAAiB,CAAC8B,kBAAkB,IAAI;kBAA8C;oBAAAoD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpF,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAGN7F,OAAA;cAAKwF,SAAS,EAAC,yBAAyB;cAAAC,QAAA,gBACtCzF,OAAA;gBAAKwF,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,gBAChDzF,OAAA;kBAAKwF,SAAS,EAAC,eAAe;kBAAAC,QAAA,eAC5BzF,OAAA;oBAAMwF,SAAS,EAAC,mCAAmC;oBAAAC,QAAA,EAAC;kBAAyB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjF,CAAC,eAGN7F,OAAA;kBAAKwF,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACxBzF,OAAA,CAACd,MAAM,CAAC+G,IAAI;oBAACC,KAAK,EAAElF,iBAAkB;oBAACmF,aAAa,EAAEtB,uBAAwB;oBAAAY,QAAA,gBAC5EzF,OAAA,CAACd,MAAM,CAACkH,OAAO;sBAACZ,SAAS,EAAC,oLAAoL;sBAAAC,QAAA,gBAC5MzF,OAAA;wBAAKwF,SAAS,EAAC,mBAAmB;wBAAAC,QAAA,gBAChCzF,OAAA,CAACP,MAAM;0BAACsG,IAAI,EAAE,EAAG;0BAACP,SAAS,EAAC;wBAAoB;0BAAAE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC,eACnD7F,OAAA,CAACd,MAAM,CAACoH,KAAK;0BAACU,WAAW,EAAC;wBAAqB;0BAAAtB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC/C,CAAC,eACN7F,OAAA,CAACd,MAAM,CAACqH,IAAI;wBAAAd,QAAA,eAACzF,OAAA,CAACX,WAAW;0BAAC0G,IAAI,EAAE;wBAAG;0BAAAL,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAa,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACtC,CAAC,eACjB7F,OAAA,CAACd,MAAM,CAACsH,MAAM;sBAAAf,QAAA,eACZzF,OAAA,CAACd,MAAM,CAACuH,OAAO;wBAACjB,SAAS,EAAC,sDAAsD;wBAAAC,QAAA,eAC9EzF,OAAA,CAACd,MAAM,CAACwH,QAAQ;0BAAClB,SAAS,EAAC,KAAK;0BAAAC,QAAA,EAC7Bd,YAAY,CAACF,GAAG,CAAEK,IAAI,iBACrB9E,OAAA,CAACd,MAAM,CAACyH,IAAI;4BAEVT,KAAK,EAAEpB,IAAK;4BACZU,SAAS,EAAC,6HAA6H;4BAAAC,QAAA,eAEvIzF,OAAA,CAACd,MAAM,CAAC0H,QAAQ;8BAAAnB,QAAA,EACbX,IAAI,KAAK,KAAK,GAAG,mBAAmB,GAAG,QAAQA,IAAI,KAAK7E,aAAa,CAAC,QAAQ6E,IAAI,EAAE,CAAC;4BAAE;8BAAAY,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACzE;0BAAC,GANbf,IAAI;4BAAAY,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAOE,CACd;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACa;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACJ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,EAEL7E,iBAAiB,KAAK,KAAK,iBAC1BhB,OAAA;gBAAKwF,SAAS,EAAC,8CAA8C;gBAAAC,QAAA,gBAC3DzF,OAAA,CAACV,IAAI;kBAACyG,IAAI,EAAE,EAAG;kBAACP,SAAS,EAAC;gBAAM;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,yCAEnC,eAAA7F,OAAA;kBAAMwF,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAC/B,QAAQzE,iBAAiB,KAAKf,aAAa,CAAC,QAAQe,iBAAiB,EAAE,CAAC;gBAAE;kBAAA0E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAGN7F,OAAA,CAAChB,IAAI,CAACiH,IAAI;cAACC,KAAK,EAAE9E,SAAU;cAAC+E,aAAa,EAAE9E,YAAa;cAAAoE,QAAA,gBACvDzF,OAAA,CAAChB,IAAI,CAACmI,IAAI;gBAAC3B,SAAS,EAAC,wCAAwC;gBAAAC,QAAA,EAC1DjF,iBAAiB,CAACsC,MAAM,CAAC2B,GAAG,CAAET,KAAK,iBAClChE,OAAA,CAAChB,IAAI,CAACoH,OAAO;kBAEXF,KAAK,EAAElC,KAAM;kBACbwB,SAAS,EAAE7F,IAAI,CACb,qEAAqE,EACrEyB,SAAS,KAAK4C,KAAK,GACf,0CAA0C,GAC1C,yDACN,CAAE;kBAAAyB,QAAA,GAEDzB,KAAK,EAAC,QACP,EAACkB,mBAAmB,CAAClB,KAAK,CAAC,iBACzBhE,OAAA;oBAAMwF,SAAS,EAAC,iEAAiE;oBAAAC,QAAA,EAC9EjF,iBAAiB,CAACyD,QAAQ,CAACD,KAAK,CAAC,CAACnB;kBAAM;oBAAA6C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrC,CACP;gBAAA,GAdI7B,KAAK;kBAAA0B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAeE,CACf;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACO,CAAC,EAEXrF,iBAAiB,CAACsC,MAAM,CAAC2B,GAAG,CAAET,KAAK,iBAClChE,OAAA,CAAChB,IAAI,CAACyH,OAAO;gBAAaP,KAAK,EAAElC,KAAM;gBAACwB,SAAS,EAAC,KAAK;gBAAAC,QAAA,gBACrDzF,OAAA;kBAAIwF,SAAS,EAAC,0BAA0B;kBAAAC,QAAA,GAAEzB,KAAK,EAAC,+BAA6B;gBAAA;kBAAA0B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,EAEjF/D,gBAAgB,CAACe,MAAM,GAAG,CAAC,gBAChD7C,OAAA;kBAAKwF,SAAS,EAAC,WAAW;kBAAAC,QAAA,EACvB3D,gBAAgB,CAAC2C,GAAG,CAAEN,OAAO,iBAC5BnE,OAAA;oBAEEwF,SAAS,EAAC,oDAAoD;oBAAAC,QAAA,gBAE9DzF,OAAA;sBAAKwF,SAAS,EAAC,kCAAkC;sBAAAC,QAAA,gBAC/CzF,OAAA;wBAAIwF,SAAS,EAAC,qBAAqB;wBAAAC,QAAA,EAAEtB;sBAAO;wBAAAuB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eAClD7F,OAAA;wBACE8F,OAAO,EAAEA,CAAA,KAAMf,mBAAmB,CAACZ,OAAO,CAAE;wBAC5CqB,SAAS,EAAC,oCAAoC;wBAC9C4B,KAAK,EAAC,sBAAsB;wBAAA3B,QAAA,eAE5BzF,OAAA,CAACV,IAAI;0BAACyG,IAAI,EAAE,EAAG;0BAACP,SAAS,EAAC;wBAAe;0BAAAE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACtC,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN,CAAC,EACLrF,iBAAiB,CAACyE,cAAc,CAACd,OAAO,CAACE,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,iBACxErE,OAAA;sBAAKwF,SAAS,EAAC,4BAA4B;sBAAAC,QAAA,eACzCzF,OAAA;wBAAAyF,QAAA,gBACEzF,OAAA;0BAAMwF,SAAS,EAAC,aAAa;0BAAAC,QAAA,EAAC;wBAAO;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,EAC3CrF,iBAAiB,CAACyE,cAAc,CAACd,OAAO,CAACE,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAACgD,KAAK;sBAAA;wBAAA3B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC7E;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CACN,EAGA1B,OAAO,CAACf,QAAQ,CAAC,iBAAiB,CAAC,iBAClCpD,OAAA;sBAAKwF,SAAS,EAAC,MAAM;sBAAAC,QAAA,eACnBzF,OAAA;wBAAMwF,SAAS,EAAC,8FAA8F;wBAAAC,QAAA,EAAC;sBAE/G;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CACN;kBAAA,GA7BI1B,OAAO;oBAAAuB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OA8BT,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,GACJ7E,iBAAiB,KAAK,KAAK,gBAC7BhB,OAAA;kBAAKwF,SAAS,EAAC,gDAAgD;kBAAAC,QAAA,eAC7DzF,OAAA;oBAAAyF,QAAA,gBACEzF,OAAA;sBAAAyF,QAAA,EAAQ;oBAAuB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,SAAK,EAAC7B,KAAK,EAAC,2BAAyB,EAAChD,iBAAiB,EAAC,GAChG,eAAAhB,OAAA;sBAAGwF,SAAS,EAAC,MAAM;sBAAAC,QAAA,EAAC;oBAA6E;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,gBAEN7F,OAAA;kBAAKwF,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAuC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAC5E;cAAA,GAjDsC7B,KAAK;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkDV,CACf,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,gBAEN7F,OAAA;YAAKwF,SAAS,EAAC,0DAA0D;YAAAC,QAAA,EAAC;UAE1E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGP7F,OAAA,CAACf,MAAM,CAACgH,IAAI;MAACqB,IAAI,EAAEhG,SAAU;MAACiG,YAAY,EAAEhG,YAAa;MAAAkE,QAAA,eACvDzF,OAAA,CAACf,MAAM,CAACuH,MAAM;QAAAf,QAAA,gBACZzF,OAAA,CAACf,MAAM,CAACuI,OAAO;UAAChC,SAAS,EAAC;QAA2B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxD7F,OAAA,CAACf,MAAM,CAACwH,OAAO;UAACjB,SAAS,EAAC,qJAAqJ;UAAAC,QAAA,gBAC7KzF,OAAA,CAACf,MAAM,CAACwI,KAAK;YAACjC,SAAS,EAAC,0CAA0C;YAAAC,QAAA,EAC/DjE,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgC;UAAI;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACf7F,OAAA,CAACf,MAAM,CAACyI,WAAW;YAAClC,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAE3D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoB,CAAC,EAEpBrE,eAAe,IAAIA,eAAe,CAACwD,OAAO,iBACzChF,OAAA;YAAKwF,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzF,OAAA;cAAKwF,SAAS,EAAC,2BAA2B;cAAAC,QAAA,gBACxCzF,OAAA;gBAAIwF,SAAS,EAAC,gCAAgC;gBAAAC,QAAA,EAAC;cAAkB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtE7F,OAAA;gBAAGwF,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAEjE,eAAe,CAACwD,OAAO,CAACqC;cAAK;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC,eAEN7F,OAAA;cAAKwF,SAAS,EAAC,4BAA4B;cAAAC,QAAA,gBACzCzF,OAAA;gBAAIwF,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,EAAC;cAAkB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvE7F,OAAA;gBAAGwF,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAEjE,eAAe,CAACwD,OAAO,CAAC2C;cAAS;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC,eAEN7F,OAAA;cAAKwF,SAAS,EAAC,6BAA6B;cAAAC,QAAA,gBAC1CzF,OAAA;gBAAIwF,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,EAAC;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3E7F,OAAA;gBAAGwF,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAEjE,eAAe,CAACwD,OAAO,CAAC4C;cAAW;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,eAEN7F,OAAA;cAAKwF,SAAS,EAAC,4BAA4B;cAAAC,QAAA,gBACzCzF,OAAA;gBAAIwF,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,EAAC;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxE7F,OAAA;gBAAGwF,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAEjE,eAAe,CAACwD,OAAO,CAAC6C;cAAS;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC,EAELrE,eAAe,CAACwD,OAAO,CAAC8C,SAAS,IAAItG,eAAe,CAACwD,OAAO,CAAC8C,SAAS,KAAK,GAAG,iBAC7E9H,OAAA;cAAKwF,SAAS,EAAC,MAAM;cAAAC,QAAA,eACnBzF,OAAA;gBACE+H,IAAI,EAAEvG,eAAe,CAACwD,OAAO,CAAC8C,SAAU;gBACxCf,MAAM,EAAC,QAAQ;gBACfiB,GAAG,EAAC,qBAAqB;gBACzBxC,SAAS,EAAC,wNAAwN;gBAAAC,QAAA,EACnO;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,eAED7F,OAAA;YAAKwF,SAAS,EAAC,uBAAuB;YAAAC,QAAA,eACpCzF,OAAA,CAACf,MAAM,CAACgJ,KAAK;cAACC,OAAO;cAAAzC,QAAA,eACnBzF,OAAA;gBACEwF,SAAS,EAAC,2OAA2O;gBAAAC,QAAA,EACtP;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGbnE,UAAU,iBACT1B,OAAA,CAACJ,eAAe;MACdQ,UAAU,EAAEA,UAAW;MACvB+H,OAAO,EAAEhD;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACF,EAGAjE,SAAS,iBACR5B,OAAA,CAACH,UAAU;MACTO,UAAU,EAAEA,UAAW;MACvBgI,kBAAkB,EAAE/C,sBAAuB;MAC3C8C,OAAO,EAAE/C;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1F,EAAA,CAptBQD,mBAAmB;AAAAmI,EAAA,GAAnBnI,mBAAmB;AAstB5B,eAAeA,mBAAmB;AAAC,IAAAmI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}