{"ast":null,"code":"var _jsxFileName = \"/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data, categoriesList, ddsTypesList, productsList) => {\n  // Simulate API call\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      console.log('Categories saved:', categoriesList);\n      console.log('DDS Types saved:', ddsTypesList);\n      console.log('Products saved:', productsList);\n\n      // Save everything to localStorage\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      localStorage.setItem('categories_data', JSON.stringify(categoriesList));\n      localStorage.setItem('dds_types_data', JSON.stringify(ddsTypesList));\n      localStorage.setItem('products_data', JSON.stringify(productsList));\n      resolve({\n        success: true\n      });\n    }, 1500);\n  });\n};\nfunction AdminPanel({\n  conditions,\n  onConditionsUpdate,\n  onClose\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n\n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n\n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n\n      // Try to load saved categories, DDS types, and products from localStorage first\n      const savedCategories = localStorage.getItem('categories_data');\n      const savedDdsTypes = localStorage.getItem('dds_types_data');\n      const savedProducts = localStorage.getItem('products_data');\n      let categoriesFromStorage = [];\n      let ddsTypesFromStorage = [];\n      let productsFromStorage = [];\n\n      // Parse saved categories if available\n      if (savedCategories) {\n        try {\n          categoriesFromStorage = JSON.parse(savedCategories);\n          if (!Array.isArray(categoriesFromStorage)) {\n            categoriesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved categories:', e);\n        }\n      }\n\n      // Parse saved DDS types if available\n      if (savedDdsTypes) {\n        try {\n          ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n          if (!Array.isArray(ddsTypesFromStorage)) {\n            ddsTypesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved DDS types:', e);\n        }\n      }\n\n      // Parse saved products if available\n      if (savedProducts) {\n        try {\n          productsFromStorage = JSON.parse(savedProducts);\n          if (!Array.isArray(productsFromStorage)) {\n            productsFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved products:', e);\n        }\n      }\n\n      // Extract unique categories from conditions\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n\n      // Extract unique DDS types from conditions\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n\n      // Extract all products from conditions\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      const productsFromConditions = Array.from(productsSet);\n\n      // Merge saved categories with ones from conditions and remove duplicates\n      const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n\n      // Merge saved DDS types with ones from conditions and remove duplicates\n      const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n\n      // Merge saved products with ones from conditions and remove duplicates\n      const mergedProducts = [...new Set([...productsFromStorage, ...productsFromConditions])];\n\n      // Set the merged lists\n      setCategories(mergedCategories);\n      setDdsTypes(mergedDdsTypes);\n      setAllProducts(mergedProducts);\n\n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n\n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = condition => {\n    if (!condition) return;\n    const patientProducts = {};\n\n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n\n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n\n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        }\n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n\n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n\n      // For conditions where Type 3/4 get additional products\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Acute' || condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute') {\n        if (patientProducts[phase]['3'].includes('Synvaza') && !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    setPatientSpecificProducts(patientProducts);\n  };\n  const handleEditProduct = product => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = {\n      name: product,\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#',\n      researchArticles: [] // Initialize with empty array\n    };\n\n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#',\n          researchArticles: condition.productDetails[product].researchArticles || [] // Load existing research articles\n        };\n        break;\n      }\n    }\n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n\n      // Save all data: conditions, categories, and DDS types, and products\n      const result = await saveToBackend(updatedConditions, categories, ddsTypes, allProducts);\n      if (result.success) {\n        // Pass the updated data back to parent component\n        onConditionsUpdate(updatedConditions, categories, ddsTypes, allProducts);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n\n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n\n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n\n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n\n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n\n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n\n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n\n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n\n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n\n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => (patientTypesForPhase[patientType] || []).includes(product));\n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n\n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n\n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if ((patientTypesForPhase['4'] || []).includes(product) && !(patientTypesForPhase['1'] || []).includes(product) && !(patientTypesForPhase['2'] || []).includes(product) && !product.includes('(Type')) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n\n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n\n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n\n      // Ensure all products have product details\n      const allProductsToCheck = [...commonProducts, ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n      // Add products that are only in some patient types\n      ...[...productsInAllTypes].filter(p => !commonProducts.has(p))];\n\n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n\n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n\n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#',\n            researchArticles: [] // Initialize with empty array\n          };\n\n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName] // This will include researchArticles if they exist\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    return updatedConditions;\n  };\n\n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n\n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n\n  // Handle condition selection\n  const handleConditionSelect = condition => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n\n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => condition.name === conditionId ? {\n      ...condition,\n      [field]: value\n    } : condition));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => {\n      if (condition.name === conditionId) {\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        if (!updatedProductDetails[productName]) {\n          updatedProductDetails[productName] = {};\n        }\n        updatedProductDetails[productName][field] = value;\n        return {\n          ...condition,\n          productDetails: updatedProductDetails\n        };\n      }\n      return condition;\n    }));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = {\n        ...selectedCondition.productDetails\n      };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({\n        ...prev,\n        productDetails: updatedProductDetails\n      }));\n    }\n  };\n\n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = type => {\n    setActivePatientType(type);\n  };\n\n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n\n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n\n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => updated[phase][type].includes(productName));\n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      return updated;\n    });\n  };\n\n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n\n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#',\n      researchArticles: [] // Initialize with empty array\n    });\n    setShowAddModal(true);\n  };\n\n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    if (modalType === 'product') {\n      const productName = newItemData.name;\n      if (editingProductId && editingProductId !== productName) {\n        // Product name was changed - need to update all references\n        setEditedConditions(prev => prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = {\n            ...condition.products\n          };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => p === editingProductId ? productName : p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p);\n          });\n\n          // Update product details\n          const updatedProductDetails = {\n            ...condition.productDetails\n          };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#',\n              researchArticles: newItemData.researchArticles || [] // Preserve research articles\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          return {\n            ...condition,\n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        }));\n\n        // Update allProducts list\n        setAllProducts(prev => {\n          const index = prev.indexOf(editingProductId);\n          if (index !== -1) {\n            const updated = [...prev];\n            updated[index] = productName;\n            return updated;\n          }\n          return [...prev, productName];\n        });\n\n        // Update patient-specific products if currently editing\n        if (selectedCondition) {\n          setPatientSpecificProducts(prev => {\n            const updated = {\n              ...prev\n            };\n            Object.keys(updated).forEach(phase => {\n              Object.keys(updated[phase]).forEach(type => {\n                updated[phase][type] = updated[phase][type].map(p => p === editingProductId ? productName : p);\n              });\n            });\n            return updated;\n          });\n        }\n      } else if (editingProductId) {\n        // Only details changed, not the name\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              ...updatedProductDetails[productName],\n              // Keep any existing fields\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#',\n              researchArticles: newItemData.researchArticles || [] // Add research articles\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }\n          return condition;\n        }));\n      } else {\n        // This is a new product\n        if (!allProducts.includes(productName)) {\n          setAllProducts(prev => [...prev, productName]);\n\n          // Add product details to all conditions that use it\n          setEditedConditions(prev => prev.map(condition => {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#',\n              researchArticles: newItemData.researchArticles || [] // Add research articles for new products\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }));\n        }\n      }\n    } else if (modalType === 'condition') {\n      // Add new condition\n      if (newItemData.name && !editedConditions.find(c => c.name === newItemData.name)) {\n        const newCondition = {\n          name: newItemData.name,\n          category: newItemData.category || categories[0] || '',\n          phases: newItemData.phases || ['Prep', 'Acute', 'Maintenance'],\n          dds: newItemData.dds || [],\n          patientType: newItemData.patientType || 'Types 1 to 4',\n          products: newItemData.products || {\n            Prep: [],\n            Acute: [],\n            Maintenance: []\n          },\n          pitchPoints: newItemData.pitchPoints || '',\n          productDetails: {}\n        };\n        setEditedConditions(prev => [...prev, newCondition]);\n        setSelectedCondition(newCondition);\n      }\n    } else if (modalType === 'category') {\n      // Add new category\n      if (newItemData.name && !categories.includes(newItemData.name)) {\n        // Update categories list\n        setCategories(prev => [...prev, newItemData.name]);\n\n        // Add new category to all conditions that need it\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.category === '') {\n            return {\n              ...condition,\n              category: newItemData.name\n            };\n          }\n          return condition;\n        }));\n      }\n    } else if (modalType === 'ddsType') {\n      // Add new DDS type\n      if (newItemData.name && !ddsTypes.includes(newItemData.name)) {\n        setDdsTypes(prev => [...prev, newItemData.name]);\n      }\n    }\n    setShowAddModal(false);\n    setNewItemData({});\n    setEditingProductId(null);\n  };\n\n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({\n      type,\n      item\n    });\n    setShowDeleteModal(true);\n  };\n\n  // Handle delete\n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const {\n      type,\n      item\n    } = itemToDelete;\n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n\n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => prev.map(condition => {\n        const updatedProducts = {\n          ...condition.products\n        };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => p !== item && p !== `${item} (Type 3/4 Only)`);\n        });\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        delete updatedProductDetails[item];\n        return {\n          ...condition,\n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      }));\n\n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n\n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    } else if (type === 'category') {\n      // Don't allow deleting the 'All' category\n      if (item === 'All') {\n        setShowDeleteModal(false);\n        setItemToDelete(null);\n        return;\n      }\n\n      // Remove the category from the list\n      setCategories(prev => prev.filter(c => c !== item));\n\n      // Update conditions that use this category (set to first available category or empty string)\n      setEditedConditions(prev => prev.map(condition => {\n        if (condition.category === item) {\n          const newCategory = categories.find(c => c !== item && c !== 'All') || '';\n          return {\n            ...condition,\n            category: newCategory\n          };\n        }\n        return condition;\n      }));\n    } else if (type === 'ddsType') {\n      // Don't allow deleting the 'All' DDS type\n      if (item === 'All') {\n        setShowDeleteModal(false);\n        setItemToDelete(null);\n        return;\n      }\n\n      // Remove the DDS type from the list\n      setDdsTypes(prev => prev.filter(d => d !== item));\n\n      // Update conditions that use this DDS type (remove it from their dds array)\n      setEditedConditions(prev => prev.map(condition => {\n        if (condition.dds.includes(item)) {\n          return {\n            ...condition,\n            dds: condition.dds.filter(d => d !== item)\n          };\n        }\n        return condition;\n      }));\n    }\n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n\n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = phase => {\n    var _patientSpecificProdu2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border rounded-lg p-4 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Patient-Specific Product Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Filter by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n            value: activePatientType,\n            onValueChange: handlePatientTypeSelect,\n            children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n              className: \"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 15,\n                className: \"mr-1 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 870,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n              children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                className: \"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\",\n                children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                  className: \"p-1\",\n                  children: Object.entries(PATIENT_TYPES).map(([type, label]) => /*#__PURE__*/_jsxDEV(Select.Item, {\n                    value: type,\n                    className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 881,\n                      columnNumber: 25\n                    }, this)\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 9\n      }, this), activePatientType !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          size: 15,\n          className: \"mr-1 flex-shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Configuring products specifically for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: PATIENT_TYPES[activePatientType]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 53\n          }, this), \". Products added here will only be recommended for this patient type.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: [\"Products for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            if (e.target.value) {\n              addProductToPatientType(phase, activePatientType, e.target.value);\n              e.target.value = ''; // Reset select\n            }\n          },\n          className: \"px-3 py-1 border border-gray-300 rounded-md text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Add product...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 13\n          }, this), allProducts.filter(product => {\n            var _patientSpecificProdu;\n            // Only show products that aren't already added for this patient type\n            if (!patientSpecificProducts[phase]) return true;\n            return !((_patientSpecificProdu = patientSpecificProducts[phase][activePatientType]) !== null && _patientSpecificProdu !== void 0 && _patientSpecificProdu.includes(product));\n          }).map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product,\n            children: product\n          }, product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 9\n      }, this), patientSpecificProducts[phase] && ((_patientSpecificProdu2 = patientSpecificProducts[phase][activePatientType]) === null || _patientSpecificProdu2 === void 0 ? void 0 : _patientSpecificProdu2.length) > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2 max-h-60 overflow-y-auto\",\n        children: patientSpecificProducts[phase][activePatientType].map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"bg-white border rounded-md p-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProductFromPatientType(phase, activePatientType, product),\n            className: \"text-red-500 hover:text-red-700 p-1\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 17\n          }, this)]\n        }, product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center text-gray-500 bg-gray-100 rounded-md\",\n        children: [\"No products configured for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-gray-500\",\n      children: \"No conditions data available to edit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Knowledge Base Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResetChanges,\n              className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n              disabled: isSaving,\n              children: \"Reset Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveChanges,\n              className: `px-3 py-1.5 rounded-md text-white text-sm flex items-center ${isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'}`,\n              disabled: isSaving,\n              children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Saving...\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Save, {\n                  size: 16,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 23\n                }, this), \"Save Changes\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-500 hover:text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 9\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(Check, {\n          size: 20,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this), \"Changes saved successfully!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n        value: activeTab,\n        onValueChange: setActiveTab,\n        children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n          className: \"flex border-b\",\n          children: [/*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"importExport\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"importExport\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Import/Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"conditions\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"conditions\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"products\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"products\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"categories\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"categories\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Categories & DDS Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"importExport\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-2\",\n              children: \"Knowledge Base Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Import and export your knowledge base data for backup purposes or to transfer between environments.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataImportExport, {\n            conditions: editedConditions,\n            onImport: importedData => {\n              setEditedConditions(importedData);\n              setIsEditing(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"conditions\",\n          className: \"flex-grow overflow-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/3 border-r p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-medium\",\n                  children: \"All Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCondition,\n                  className: \"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 21\n                  }, this), \"Add New\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1084,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-1\",\n                children: editedConditions.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: clsx(\"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\", selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-100\" : \"hover:bg-gray-100\"),\n                  onClick: () => handleConditionSelect(condition),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-sm\",\n                      children: condition.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1106,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: condition.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1107,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1105,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      confirmDelete('condition', condition);\n                    },\n                    className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1116,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1109,\n                    columnNumber: 23\n                  }, this)]\n                }, condition.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2/3 p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: selectedCondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Condition Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1130,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: selectedCondition.name,\n                      onChange: e => updateConditionField(selectedCondition.name, 'name', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1133,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1129,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1143,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedCondition.category,\n                      onChange: e => updateConditionField(selectedCondition.name, 'category', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: category,\n                        children: category\n                      }, category, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1152,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1146,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1142,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Patient Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1162,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: selectedCondition.patientType,\n                    onChange: e => updateConditionField(selectedCondition.name, 'patientType', e.target.value),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1165,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mt-1 text-xs text-gray-500\",\n                    children: \"Format: \\\"Types 1 to 4\\\" or \\\"Types 3 to 4\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1171,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"DDS Types\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1176,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.dds.map(dds => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [dds, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          },\n                          className: \"ml-1 text-blue-700 hover:text-blue-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1194,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1187,\n                          columnNumber: 31\n                        }, this)]\n                      }, dds, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1182,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1180,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => {\n                      if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                        const updatedDds = [...selectedCondition.dds, e.target.value];\n                        updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                      }\n                      e.target.value = ''; // Reset select\n                    },\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Add DDS Type...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1210,\n                      columnNumber: 25\n                    }, this), ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map(dds => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dds,\n                      children: dds\n                    }, dds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1212,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1200,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1221,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.pitchPoints,\n                    onChange: e => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1224,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1234,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.competitiveAdvantage || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1237,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1233,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Handling Objections\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1247,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.handlingObjections || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1250,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Scientific Rationale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1260,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.scientificRationale || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'scientificRationale', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1263,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Clinical Evidence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1273,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.clinicalEvidence || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'clinicalEvidence', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1276,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Treatment Phases\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1286,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [phase, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                            updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          },\n                          className: \"ml-1 text-purple-700 hover:text-purple-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1304,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1297,\n                          columnNumber: 31\n                        }, this)]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1292,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1290,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1289,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"New phase name...\",\n                      className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      onKeyDown: e => {\n                        if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                          const updatedPhases = [...selectedCondition.phases, e.target.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          e.target.value = '';\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1311,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        const input = e.target.previousElementSibling;\n                        if (input.value && !selectedCondition.phases.includes(input.value)) {\n                          const updatedPhases = [...selectedCondition.phases, input.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          input.value = '';\n                        }\n                      },\n                      className: \"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\",\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1323,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1310,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Products by Phase\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1340,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n                    defaultValue: selectedCondition.phases[0],\n                    className: \"border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n                      className: \"flex border-b bg-gray-50\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n                        value: phase,\n                        className: clsx(\"flex-1 px-4 py-2 text-sm font-medium\", \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\", \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"),\n                        children: [phase, \" Phase\"]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1345,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1343,\n                      columnNumber: 25\n                    }, this), selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Content, {\n                      value: phase,\n                      className: \"p-4\",\n                      children: renderPatientTypeProductConfig(phase)\n                    }, phase, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1360,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1342,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1339,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Product Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1370,\n                    columnNumber: 23\n                  }, this), Object.keys(selectedCondition.productDetails || {}).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-6\",\n                    children: Object.keys(selectedCondition.productDetails).map(productName => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border rounded-md p-4 bg-gray-50\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-md mb-3\",\n                        children: productName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1376,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Supporting Research Articles\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1383,\n                            columnNumber: 35\n                          }, this), selectedCondition.productDetails[productName].researchArticles && selectedCondition.productDetails[productName].researchArticles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex space-x-2 mb-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"flex-grow space-y-2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Article title\",\n                                value: article.title || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].title = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1391,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Author/Source\",\n                                value: article.author || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].author = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1408,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                                placeholder: \"Abstract (optional)\",\n                                value: article.abstract || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].abstract = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                rows: 3,\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1425,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"URL (optional)\",\n                                value: article.url || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].url = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1442,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1390,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => {\n                                const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                updatedArticles.splice(index, 1);\n                                updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                              },\n                              className: \"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",\n                              children: /*#__PURE__*/_jsxDEV(X, {\n                                size: 16\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1473,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1460,\n                              columnNumber: 39\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1389,\n                            columnNumber: 37\n                          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                              const updatedArticles = [...currentArticles, {\n                                title: '',\n                                author: '',\n                                url: ''\n                              }];\n                              updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                            },\n                            className: \"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",\n                            children: [/*#__PURE__*/_jsxDEV(Plus, {\n                              size: 16,\n                              className: \"mr-1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1491,\n                              columnNumber: 37\n                            }, this), \"Add Research Article\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1478,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1382,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1378,\n                        columnNumber: 31\n                      }, this)]\n                    }, productName, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1375,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1373,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm italic\",\n                    children: \"No product details available. Add products to phases first.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1500,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1369,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-10 text-gray-500\",\n                children: \"Select a condition to edit or create a new one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1507,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"products\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium\",\n              children: \"Product Library\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddProduct,\n              className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1523,\n                columnNumber: 17\n              }, this), \"Add New Product\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1519,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n            children: allProducts.map(product => {\n              var _editedConditions$, _editedConditions$$pr;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4 hover:bg-gray-50 group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-md\",\n                    children: product\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1532,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEditProduct(product),\n                      className: \"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\",\n                      title: \"Edit product details\",\n                      children: /*#__PURE__*/_jsxDEV(Edit, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1539,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1534,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => confirmDelete('product', product),\n                      className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                      title: \"Delete product\",\n                      children: /*#__PURE__*/_jsxDEV(Trash2, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1546,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1541,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1533,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1531,\n                  columnNumber: 17\n                }, this), ((_editedConditions$ = editedConditions[0]) === null || _editedConditions$ === void 0 ? void 0 : (_editedConditions$$pr = _editedConditions$.productDetails) === null || _editedConditions$$pr === void 0 ? void 0 : _editedConditions$$pr[product]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-sm text-gray-600 space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Usage: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1554,\n                      columnNumber: 23\n                    }, this), editedConditions[0].productDetails[product].usage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1553,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Conditions: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1558,\n                      columnNumber: 23\n                    }, this), editedConditions.filter(c => Object.values(c.products || {}).some(products => products.includes(product) || products.includes(`${product} (Type 3/4 Only)`))).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1557,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1552,\n                  columnNumber: 19\n                }, this)]\n              }, product, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1530,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"categories\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1578,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCategory,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1583,\n                    columnNumber: 21\n                  }, this), \"Add Category\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1579,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1577,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-h-[60vh] overflow-y-auto pr-1\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-2\",\n                  children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1595,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-500 mr-3\",\n                        children: [editedConditions.filter(c => c.category === category).length, \" conditions\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1597,\n                        columnNumber: 27\n                      }, this), category !== 'All' && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => confirmDelete('category', category),\n                        className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                        title: \"Delete category\",\n                        children: /*#__PURE__*/_jsxDEV(Trash2, {\n                          size: 16\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1606,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1601,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1596,\n                      columnNumber: 25\n                    }, this)]\n                  }, category, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1591,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1589,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1588,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1576,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"DDS Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1619,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddDdsType,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1624,\n                    columnNumber: 21\n                  }, this), \"Add DDS Type\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1620,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1618,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-h-[60vh] overflow-y-auto pr-1\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-2\",\n                  children: ddsTypes.map(ddsType => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: ddsType\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1636,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-500 mr-3\",\n                        children: [editedConditions.filter(c => c.dds.includes(ddsType)).length, \" conditions\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1638,\n                        columnNumber: 27\n                      }, this), ddsType !== 'All' && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => confirmDelete('ddsType', ddsType),\n                        className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                        title: \"Delete DDS type\",\n                        children: /*#__PURE__*/_jsxDEV(Trash2, {\n                          size: 16\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1647,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1642,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1637,\n                      columnNumber: 25\n                    }, this)]\n                  }, ddsType, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1632,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1630,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1629,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1617,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1574,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showAddModal,\n        onOpenChange: setShowAddModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-4\",\n              children: [modalType === 'condition' && 'Add New Condition', modalType === 'category' && 'Add New Category', modalType === 'ddsType' && 'Add New DDS Type', modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1665,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [modalType === 'condition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Condition Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1677,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1680,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1676,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1689,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newItemData.category || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      category: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: category,\n                      children: category\n                    }, category, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1698,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1692,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1688,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Key Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1705,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.pitchPoints || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      pitchPoints: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1708,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1704,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1717,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitiveAdvantage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitiveAdvantage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1720,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1716,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Handling Objections\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1729,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.handlingObjections || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      handlingObjections: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1732,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1728,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), modalType === 'category' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"Category Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1744,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1747,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1743,\n                columnNumber: 19\n              }, this), modalType === 'ddsType' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"DDS Type Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1758,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1761,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1757,\n                columnNumber: 19\n              }, this), modalType === 'product' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Product Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1773,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1776,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1772,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Usage Instructions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1785,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.usage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      usage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1788,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1784,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Clinical Rationale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1797,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.rationale || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      rationale: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1800,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1796,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1809,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitive || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitive: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1812,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1808,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Objection Handling\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1821,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.objection || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      objection: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1824,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1820,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Supporting Research Articles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1834,\n                    columnNumber: 23\n                  }, this), newItemData.researchArticles && newItemData.researchArticles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2 mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow space-y-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Article title\",\n                        value: article.title || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].title = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1841,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Author/Source\",\n                        value: article.author || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].author = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1853,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        placeholder: \"Abstract (optional)\",\n                        value: article.abstract || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].abstract = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        rows: 3,\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1865,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"URL (optional)\",\n                        value: article.url || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].url = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1877,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1840,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        const updatedArticles = [...newItemData.researchArticles];\n                        updatedArticles.splice(index, 1);\n                        setNewItemData({\n                          ...newItemData,\n                          researchArticles: updatedArticles\n                        });\n                      },\n                      className: \"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",\n                      children: /*#__PURE__*/_jsxDEV(X, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1898,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1890,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1839,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const updatedArticles = [...(newItemData.researchArticles || []), {\n                        title: '',\n                        author: '',\n                        url: ''\n                      }];\n                      setNewItemData({\n                        ...newItemData,\n                        researchArticles: updatedArticles\n                      });\n                    },\n                    className: \"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Plus, {\n                      size: 16,\n                      className: \"mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1910,\n                      columnNumber: 25\n                    }, this), \"Add Research Article\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1903,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1833,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1673,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1920,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1919,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmitNewItem,\n                disabled: !newItemData.name,\n                className: `px-3 py-1.5 rounded-md text-white text-sm ${newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'}`,\n                children: editingProductId ? 'Save Changes' : 'Add'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1925,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1918,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1664,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1662,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showDeleteModal,\n        onOpenChange: setShowDeleteModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1942,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-2 flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1945,\n                columnNumber: 17\n              }, this), \"Confirm Deletion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1944,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dialog.Description, {\n              className: \"text-gray-600 mb-4\",\n              children: [(itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'condition' && `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`, (itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'product' && `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1949,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1959,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1958,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDelete,\n                className: \"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1964,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1957,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1943,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1941,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1940,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 962,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"xZdfQKuwjBuI/kMmcPtCdhp06sI=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Save","Plus","Edit","Trash2","X","ChevronDown","Info","AlertTriangle","Lock","Check","User","Filter","clsx","DataImportExport","jsxDEV","_jsxDEV","Fragment","_Fragment","PATIENT_TYPES","saveToBackend","data","categoriesList","ddsTypesList","productsList","Promise","resolve","setTimeout","console","log","localStorage","setItem","JSON","stringify","success","AdminPanel","conditions","onConditionsUpdate","onClose","_s","activeTab","setActiveTab","editedConditions","setEditedConditions","selectedCondition","setSelectedCondition","editingProductId","setEditingProductId","categories","setCategories","ddsTypes","setDdsTypes","allProducts","setAllProducts","isEditing","setIsEditing","isSaving","setIsSaving","showSuccess","setShowSuccess","activePatientType","setActivePatientType","patientSpecificProducts","setPatientSpecificProducts","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showAddModal","setShowAddModal","modalType","setModalType","newItemData","setNewItemData","savedCategories","getItem","savedDdsTypes","savedProducts","categoriesFromStorage","ddsTypesFromStorage","productsFromStorage","parse","Array","isArray","e","error","uniqueCategories","Set","map","c","category","allDdsTypes","forEach","condition","dds","includes","push","productsSet","productDetails","Object","keys","product","add","productsFromConditions","from","mergedCategories","mergedDdsTypes","mergedProducts","length","firstCondition","initializePatientSpecificProducts","patientProducts","phases","phase","products","baseProduct","replace","name","handleEditProduct","usage","rationale","competitive","objection","factSheet","researchArticles","handleSaveChanges","updatedConditions","applyPatientSpecificProducts","result","conditionIndex","findIndex","patientSpecificConfig","phaseProducts","patientTypesForPhase","commonProducts","allPatientTypes","productsInAllTypes","patientType","isInAllTypes","every","type34Products","allProductsToCheck","p","filter","has","cleanProductName","handleResetChanges","handleConditionSelect","updateConditionField","conditionId","field","value","prev","updateProductDetail","productName","updatedProductDetails","handlePatientTypeSelect","type","addProductToPatientType","updated","removeProductFromPatientType","handleAddCondition","Prep","Acute","Maintenance","pitchPoints","competitiveAdvantage","handlingObjections","handleAddCategory","handleAddDdsType","handleAddProduct","handleSubmitNewItem","updatedProducts","index","indexOf","find","newCondition","confirmDelete","item","handleDelete","remainingConditions","newCategory","d","renderPatientTypeProductConfig","_patientSpecificProdu2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Root","onValueChange","Trigger","size","Value","Icon","Portal","Content","Viewport","entries","label","Item","ItemText","onChange","target","_patientSpecificProdu","onClick","disabled","List","style","maxHeight","overflowY","onImport","importedData","stopPropagation","updatedDds","rows","scientificRationale","clinicalEvidence","updatedPhases","placeholder","onKeyDown","key","input","previousElementSibling","defaultValue","article","title","updatedArticles","author","abstract","url","splice","currentArticles","_editedConditions$","_editedConditions$$pr","values","some","ddsType","open","onOpenChange","Overlay","Title","Close","asChild","Description","_c","$RefreshReg$"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data, categoriesList, ddsTypesList, productsList) => {\n  // Simulate API call\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      console.log('Categories saved:', categoriesList);\n      console.log('DDS Types saved:', ddsTypesList);\n      console.log('Products saved:', productsList);\n      \n      // Save everything to localStorage\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      localStorage.setItem('categories_data', JSON.stringify(categoriesList));\n      localStorage.setItem('dds_types_data', JSON.stringify(ddsTypesList));\n      localStorage.setItem('products_data', JSON.stringify(productsList));\n      \n      resolve({ success: true });\n    }, 1500);\n  });\n};\n\nfunction AdminPanel({ conditions, onConditionsUpdate, onClose }) {\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  \n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n  \n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n  \n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n      \n      // Try to load saved categories, DDS types, and products from localStorage first\n      const savedCategories = localStorage.getItem('categories_data');\n      const savedDdsTypes = localStorage.getItem('dds_types_data');\n      const savedProducts = localStorage.getItem('products_data');\n      \n      let categoriesFromStorage = [];\n      let ddsTypesFromStorage = [];\n      let productsFromStorage = [];\n      \n      // Parse saved categories if available\n      if (savedCategories) {\n        try {\n          categoriesFromStorage = JSON.parse(savedCategories);\n          if (!Array.isArray(categoriesFromStorage)) {\n            categoriesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved categories:', e);\n        }\n      }\n      \n      // Parse saved DDS types if available\n      if (savedDdsTypes) {\n        try {\n          ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n          if (!Array.isArray(ddsTypesFromStorage)) {\n            ddsTypesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved DDS types:', e);\n        }\n      }\n      \n      // Parse saved products if available\n      if (savedProducts) {\n        try {\n          productsFromStorage = JSON.parse(savedProducts);\n          if (!Array.isArray(productsFromStorage)) {\n            productsFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved products:', e);\n        }\n      }\n      \n      // Extract unique categories from conditions\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      \n      // Extract unique DDS types from conditions\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      \n      // Extract all products from conditions\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      const productsFromConditions = Array.from(productsSet);\n      \n      // Merge saved categories with ones from conditions and remove duplicates\n      const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n      \n      // Merge saved DDS types with ones from conditions and remove duplicates\n      const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n      \n      // Merge saved products with ones from conditions and remove duplicates\n      const mergedProducts = [...new Set([...productsFromStorage, ...productsFromConditions])];\n      \n      // Set the merged lists\n      setCategories(mergedCategories);\n      setDdsTypes(mergedDdsTypes);\n      setAllProducts(mergedProducts);\n      \n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n        \n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = (condition) => {\n    if (!condition) return;\n    \n    const patientProducts = {};\n    \n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n      \n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        } \n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n      \n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n      \n      // For conditions where Type 3/4 get additional products\n      if (\n        (condition.name === 'Gingival Recession Surgery' && phase === 'Acute') ||\n        (condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute')\n      ) {\n        if (patientProducts[phase]['3'].includes('Synvaza') && \n            !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  };\n\n  const handleEditProduct = (product) => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = { \n      name: product, \n      usage: '', \n      rationale: '', \n      competitive: '', \n      objection: '', \n      factSheet: '#',\n      researchArticles: [] // Initialize with empty array\n    };\n    \n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#',\n          researchArticles: condition.productDetails[product].researchArticles || [] // Load existing research articles\n        };\n        break;\n      }\n    }\n    \n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n      \n      // Save all data: conditions, categories, and DDS types, and products\n      const result = await saveToBackend(updatedConditions, categories, ddsTypes, allProducts);\n      \n      if (result.success) {\n        // Pass the updated data back to parent component\n        onConditionsUpdate(updatedConditions, categories, ddsTypes, allProducts);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n    \n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n    \n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n    \n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n    \n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n    \n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n      \n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      \n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n      \n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n      \n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => \n          (patientTypesForPhase[patientType] || []).includes(product)\n        );\n        \n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n      \n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n      \n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      \n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if (\n          (patientTypesForPhase['4'] || []).includes(product) && \n          !(patientTypesForPhase['1'] || []).includes(product) && \n          !(patientTypesForPhase['2'] || []).includes(product) &&\n          !product.includes('(Type')\n        ) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n      \n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n      \n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n      \n      // Ensure all products have product details\n      const allProductsToCheck = [\n        ...commonProducts, \n        ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n        // Add products that are only in some patient types\n        ...[...productsInAllTypes].filter(p => !commonProducts.has(p))\n      ];\n      \n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n      \n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n        \n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#',\n            researchArticles: [] // Initialize with empty array\n          };\n          \n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName] // This will include researchArticles if they exist\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    \n    return updatedConditions;\n  };\n  \n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n    \n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n  \n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n  \n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => \n        condition.name === conditionId\n          ? { ...condition, [field]: value }\n          : condition\n      )\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({ ...prev, [field]: value }));\n    }\n  };\n  \n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.name === conditionId) {\n          const updatedProductDetails = { ...condition.productDetails };\n          if (!updatedProductDetails[productName]) {\n            updatedProductDetails[productName] = {};\n          }\n          updatedProductDetails[productName][field] = value;\n          return { ...condition, productDetails: updatedProductDetails };\n        }\n        return condition;\n      })\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = { ...selectedCondition.productDetails };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({ \n        ...prev, \n        productDetails: updatedProductDetails \n      }));\n    }\n  };\n  \n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n  \n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n      \n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n        \n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => \n          updated[phase][type].includes(productName)\n        );\n        \n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      \n      return updated;\n    });\n  };\n  \n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n        \n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      \n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n  \n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#',\n      researchArticles: [] // Initialize with empty array\n    });\n    setShowAddModal(true);\n  };\n  \n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    \n    if (modalType === 'product') {\n      const productName = newItemData.name;\n      \n      if (editingProductId && editingProductId !== productName) {\n        // Product name was changed - need to update all references\n        setEditedConditions(prev => \n          prev.map(condition => {\n            // Update product references in all phases\n            const updatedProducts = { ...condition.products };\n            Object.keys(updatedProducts).forEach(phase => {\n              updatedProducts[phase] = updatedProducts[phase].map(p => \n                p === editingProductId ? productName : \n                p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p\n              );\n            });\n            \n            // Update product details\n            const updatedProductDetails = { ...condition.productDetails };\n            if (updatedProductDetails[editingProductId]) {\n              updatedProductDetails[productName] = {\n                usage: newItemData.usage,\n                rationale: newItemData.rationale,\n                competitive: newItemData.competitive,\n                objection: newItemData.objection,\n                factSheet: newItemData.factSheet || '#',\n                researchArticles: newItemData.researchArticles || [] // Preserve research articles\n              };\n              delete updatedProductDetails[editingProductId];\n            }\n            \n            return { \n              ...condition, \n              products: updatedProducts,\n              productDetails: updatedProductDetails\n            };\n          })\n        );\n        \n        // Update allProducts list\n        setAllProducts(prev => {\n          const index = prev.indexOf(editingProductId);\n          if (index !== -1) {\n            const updated = [...prev];\n            updated[index] = productName;\n            return updated;\n          }\n          return [...prev, productName];\n        });\n        \n        // Update patient-specific products if currently editing\n        if (selectedCondition) {\n          setPatientSpecificProducts(prev => {\n            const updated = { ...prev };\n            Object.keys(updated).forEach(phase => {\n              Object.keys(updated[phase]).forEach(type => {\n                updated[phase][type] = updated[phase][type].map(p => \n                  p === editingProductId ? productName : p\n                );\n              });\n            });\n            return updated;\n          });\n        }\n      } else if (editingProductId) {\n        // Only details changed, not the name\n        setEditedConditions(prev => \n          prev.map(condition => {\n            if (condition.productDetails && condition.productDetails[productName]) {\n              const updatedProductDetails = { ...condition.productDetails };\n              updatedProductDetails[productName] = {\n                ...updatedProductDetails[productName], // Keep any existing fields\n                usage: newItemData.usage,\n                rationale: newItemData.rationale,\n                competitive: newItemData.competitive,\n                objection: newItemData.objection,\n                factSheet: newItemData.factSheet || '#',\n                researchArticles: newItemData.researchArticles || [] // Add research articles\n              };\n              return { ...condition, productDetails: updatedProductDetails };\n            }\n            return condition;\n          })\n        );\n      } else {\n        // This is a new product\n        if (!allProducts.includes(productName)) {\n          setAllProducts(prev => [...prev, productName]);\n          \n          // Add product details to all conditions that use it\n          setEditedConditions(prev => \n            prev.map(condition => {\n              const updatedProductDetails = { ...condition.productDetails };\n              updatedProductDetails[productName] = {\n                usage: newItemData.usage,\n                rationale: newItemData.rationale,\n                competitive: newItemData.competitive,\n                objection: newItemData.objection,\n                factSheet: newItemData.factSheet || '#',\n                researchArticles: newItemData.researchArticles || [] // Add research articles for new products\n              };\n              return { ...condition, productDetails: updatedProductDetails };\n            })\n          );\n        }\n      }\n  } else if (modalType === 'condition') {\n    // Add new condition\n    if (newItemData.name && !editedConditions.find(c => c.name === newItemData.name)) {\n      const newCondition = {\n        name: newItemData.name,\n        category: newItemData.category || categories[0] || '',\n        phases: newItemData.phases || ['Prep', 'Acute', 'Maintenance'],\n        dds: newItemData.dds || [],\n        patientType: newItemData.patientType || 'Types 1 to 4',\n        products: newItemData.products || {\n          Prep: [],\n          Acute: [],\n          Maintenance: []\n        },\n        pitchPoints: newItemData.pitchPoints || '',\n        productDetails: {}\n      };\n      \n      setEditedConditions(prev => [...prev, newCondition]);\n      setSelectedCondition(newCondition);\n    }\n  } else if (modalType === 'category') {\n    // Add new category\n    if (newItemData.name && !categories.includes(newItemData.name)) {\n      // Update categories list\n      setCategories(prev => [...prev, newItemData.name]);\n      \n      // Add new category to all conditions that need it\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.category === '') {\n            return { ...condition, category: newItemData.name };\n          }\n          return condition;\n        })\n      );\n    }\n  } else if (modalType === 'ddsType') {\n    // Add new DDS type\n    if (newItemData.name && !ddsTypes.includes(newItemData.name)) {\n      setDdsTypes(prev => [...prev, newItemData.name]);\n    }\n  }\n  \n  setShowAddModal(false);\n  setNewItemData({});\n  setEditingProductId(null);\n};\n  \n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({ type, item });\n    setShowDeleteModal(true);\n  };\n  \n  // Handle delete\n  // Handle delete\nconst handleDelete = () => {\n  setIsEditing(true);\n  const { type, item } = itemToDelete;\n  \n  if (type === 'condition') {\n    setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n    \n    // Select a new condition if the deleted one was selected\n    if (selectedCondition && selectedCondition.name === item.name) {\n      const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n      setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n    }\n  } else if (type === 'product') {\n    // Remove product from all conditions\n    setEditedConditions(prev => \n      prev.map(condition => {\n        const updatedProducts = { ...condition.products };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => \n            p !== item && p !== `${item} (Type 3/4 Only)`\n          );\n        });\n        \n        const updatedProductDetails = { ...condition.productDetails };\n        delete updatedProductDetails[item];\n        \n        return { \n          ...condition, \n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      })\n    );\n    \n    // Update allProducts list\n    setAllProducts(prev => prev.filter(p => p !== item));\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      Object.keys(updated).forEach(phase => {\n        Object.keys(updated[phase]).forEach(type => {\n          updated[phase][type] = updated[phase][type].filter(p => p !== item);\n        });\n      });\n      return updated;\n    });\n  } else if (type === 'category') {\n    // Don't allow deleting the 'All' category\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the category from the list\n    setCategories(prev => prev.filter(c => c !== item));\n    \n    // Update conditions that use this category (set to first available category or empty string)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.category === item) {\n          const newCategory = categories.find(c => c !== item && c !== 'All') || '';\n          return { ...condition, category: newCategory };\n        }\n        return condition;\n      })\n    );\n  } else if (type === 'ddsType') {\n    // Don't allow deleting the 'All' DDS type\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the DDS type from the list\n    setDdsTypes(prev => prev.filter(d => d !== item));\n    \n    // Update conditions that use this DDS type (remove it from their dds array)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.dds.includes(item)) {\n          return { \n            ...condition, \n            dds: condition.dds.filter(d => d !== item)\n          };\n        }\n        return condition;\n      })\n    );\n  }\n  \n  setShowDeleteModal(false);\n  setItemToDelete(null);\n};\n  \n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = (phase) => {\n    return (\n      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-medium\">Patient-Specific Product Configuration</h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Filter by:</span>\n            <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n              <Select.Trigger className=\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\">\n                <User size={15} className=\"mr-1 text-gray-500\" />\n                <Select.Value />\n                <Select.Icon><ChevronDown size={15} /></Select.Icon>\n              </Select.Trigger>\n              <Select.Portal>\n                <Select.Content className=\"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\">\n                  <Select.Viewport className=\"p-1\">\n                    {Object.entries(PATIENT_TYPES).map(([type, label]) => (\n                      <Select.Item\n                        key={type}\n                        value={type}\n                        className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        <Select.ItemText>{label}</Select.ItemText>\n                      </Select.Item>\n                    ))}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Portal>\n            </Select.Root>\n          </div>\n        </div>\n        \n        {activePatientType !== 'all' && (\n          <div className=\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\">\n            <Info size={15} className=\"mr-1 flex-shrink-0\" />\n            <span>\n              Configuring products specifically for <strong>{PATIENT_TYPES[activePatientType]}</strong>.\n              Products added here will only be recommended for this patient type.\n            </span>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Products for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}</span>\n          <select\n            onChange={(e) => {\n              if (e.target.value) {\n                addProductToPatientType(phase, activePatientType, e.target.value);\n                e.target.value = ''; // Reset select\n              }\n            }}\n            className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n          >\n            <option value=\"\">Add product...</option>\n            {allProducts\n              .filter(product => {\n                // Only show products that aren't already added for this patient type\n                if (!patientSpecificProducts[phase]) return true;\n                return !patientSpecificProducts[phase][activePatientType]?.includes(product);\n              })\n              .map((product) => (\n                <option key={product} value={product}>\n                  {product}\n                </option>\n              ))}\n          </select>\n        </div>\n        \n        {patientSpecificProducts[phase] && patientSpecificProducts[phase][activePatientType]?.length > 0 ? (\n          <ul className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {patientSpecificProducts[phase][activePatientType].map((product) => (\n              <li \n                key={product}\n                className=\"bg-white border rounded-md p-2 flex justify-between items-center\"\n              >\n                <span>{product}</span>\n                <button\n                  onClick={() => removeProductFromPatientType(phase, activePatientType, product)}\n                  className=\"text-red-500 hover:text-red-700 p-1\"\n                >\n                  <Trash2 size={15} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\">\n            No products configured for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}.\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-gray-500\">\n        No conditions data available to edit.\n      </div>\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h2 className=\"text-xl font-bold\">Knowledge Base Administrator</h2>\n          <div className=\"flex items-center space-x-2\">\n            {/* Action buttons */}\n            {isEditing && (\n              <>\n                <button\n                  onClick={handleResetChanges}\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\"\n                  disabled={isSaving}\n                >\n                  Reset Changes\n                </button>\n                <button\n                  onClick={handleSaveChanges}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${\n                    isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>Saving...</>\n                  ) : (\n                    <>\n                      <Save size={16} className=\"mr-1\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Save success notification */}\n        {showSuccess && (\n          <div className=\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\">\n            <Check size={20} className=\"mr-2\" />\n            Changes saved successfully!\n          </div>\n        )}\n        \n        {/* Tabs */}\n        <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n          <Tabs.List className=\"flex border-b\">\n            <Tabs.Trigger\n              value=\"importExport\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"importExport\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Import/Export\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"conditions\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"conditions\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Conditions\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"products\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"products\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Products\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"categories\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"categories\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Categories & DDS Types\n            </Tabs.Trigger>\n          </Tabs.List>\n          \n          {/* Import/Export Tab */}\n          <Tabs.Content value=\"importExport\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2\">Knowledge Base Management</h3>\n              <p className=\"text-gray-600\">\n                Import and export your knowledge base data for backup purposes or to transfer between environments.\n              </p>\n            </div>\n            \n            <DataImportExport \n              conditions={editedConditions} \n              onImport={(importedData) => {\n                setEditedConditions(importedData);\n                setIsEditing(true);\n              }} \n            />\n          </Tabs.Content>\n          \n          {/* Conditions Tab */}\n          <Tabs.Content value=\"conditions\" className=\"flex-grow overflow-auto\">\n            <div className=\"flex h-full\">\n              {/* Conditions List */}\n              <div className=\"w-1/3 border-r p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">All Conditions</h3>\n                  <button\n                    onClick={handleAddCondition}\n                    className=\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add New\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-1\">\n                  {editedConditions.map((condition) => (\n                    <li \n                      key={condition.name}\n                      className={clsx(\n                        \"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",\n                        selectedCondition && selectedCondition.name === condition.name\n                          ? \"bg-blue-100\"\n                          : \"hover:bg-gray-100\"\n                      )}\n                      onClick={() => handleConditionSelect(condition)}\n                    >\n                      <div>\n                        <div className=\"font-medium text-sm\">{condition.name}</div>\n                        <div className=\"text-xs text-gray-500\">{condition.category}</div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          confirmDelete('condition', condition);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* Condition Editor */}\n              <div className=\"w-2/3 p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                {selectedCondition ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {/* Condition Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Condition Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={selectedCondition.name}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n                      \n                      {/* Category */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Category\n                        </label>\n                        <select\n                          value={selectedCondition.category}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'category', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          {categories.map((category) => (\n                            <option key={category} value={category}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    \n                    {/* Patient Type */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Patient Type\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={selectedCondition.patientType}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'patientType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Format: \"Types 1 to 4\" or \"Types 3 to 4\"</p>\n                    </div>\n                    \n                    {/* DDS Types */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        DDS Types\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.dds.map((dds) => (\n                            <span \n                              key={dds} \n                              className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {dds}\n                              <button\n                                onClick={() => {\n                                  const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                                  updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                                }}\n                                className=\"ml-1 text-blue-700 hover:text-blue-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <select\n                        onChange={(e) => {\n                          if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                            const updatedDds = [...selectedCondition.dds, e.target.value];\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          }\n                          e.target.value = ''; // Reset select\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Add DDS Type...</option>\n                        {ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map((dds) => (\n                          <option key={dds} value={dds}>\n                            {dds}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Pitch Points */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Pitch Points\n                      </label>\n                      <textarea\n                        value={selectedCondition.pitchPoints}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    \n                    {/* Competitive Advantage */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={selectedCondition.competitiveAdvantage || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Handling Objections */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={selectedCondition.handlingObjections || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Scientific Rationale */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Scientific Rationale\n                      </label>\n                      <textarea\n                        value={selectedCondition.scientificRationale || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'scientificRationale', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Clinical Evidence */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Evidence\n                      </label>\n                      <textarea\n                        value={selectedCondition.clinicalEvidence || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'clinicalEvidence', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Phases */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Treatment Phases\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.phases.map((phase) => (\n                            <span \n                              key={phase} \n                              className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {phase}\n                              <button\n                                onClick={() => {\n                                  const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                                  updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                                }}\n                                className=\"ml-1 text-purple-700 hover:text-purple-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"New phase name...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                              const updatedPhases = [...selectedCondition.phases, e.target.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              e.target.value = '';\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={(e) => {\n                            const input = e.target.previousElementSibling;\n                            if (input.value && !selectedCondition.phases.includes(input.value)) {\n                              const updatedPhases = [...selectedCondition.phases, input.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              input.value = '';\n                            }\n                          }}\n                          className=\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                    {/* Products by Phase with Patient Type Filtering */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Products by Phase</h3>\n                      \n                      <Tabs.Root defaultValue={selectedCondition.phases[0]} className=\"border rounded-md\">\n                        <Tabs.List className=\"flex border-b bg-gray-50\">\n                          {selectedCondition.phases.map((phase) => (\n                            <Tabs.Trigger\n                              key={phase}\n                              value={phase}\n                              className={clsx(\n                                \"flex-1 px-4 py-2 text-sm font-medium\",\n                                \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\n                                \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"\n                              )}\n                            >\n                              {phase} Phase\n                            </Tabs.Trigger>\n                          ))}\n                        </Tabs.List>\n                        \n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                            {/* Patient-specific product configuration */}\n                            {renderPatientTypeProductConfig(phase)}\n                          </Tabs.Content>\n                        ))}\n                      </Tabs.Root>\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Product Details</h3>\n                      \n                      {Object.keys(selectedCondition.productDetails || {}).length > 0 ? (\n                        <div className=\"space-y-6\">\n                          {Object.keys(selectedCondition.productDetails).map((productName) => (\n                            <div key={productName} className=\"border rounded-md p-4 bg-gray-50\">\n                              <h4 className=\"font-medium text-md mb-3\">{productName}</h4>\n                              \n                              <div className=\"space-y-3\">\n                                {/* ...existing fields... */}\n                                \n                                {/* Research Articles Section */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Supporting Research Articles\n                                  </label>\n                                  \n                                  {selectedCondition.productDetails[productName].researchArticles && \n                                    selectedCondition.productDetails[productName].researchArticles.map((article, index) => (\n                                    <div key={index} className=\"flex space-x-2 mb-2\">\n                                      <div className=\"flex-grow space-y-2\">\n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Article title\"\n                                          value={article.title || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].title = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Author/Source\"\n                                          value={article.author || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].author = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <textarea\n                                          placeholder=\"Abstract (optional)\"\n                                          value={article.abstract || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].abstract = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          rows={3}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"URL (optional)\"\n                                          value={article.url || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].url = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                      </div>\n                                      \n                                      <button\n                                        onClick={() => {\n                                          const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                          updatedArticles.splice(index, 1);\n                                          updateProductDetail(\n                                            selectedCondition.name, \n                                            productName, \n                                            'researchArticles', \n                                            updatedArticles\n                                          );\n                                        }}\n                                        className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                                      >\n                                        <X size={16} />\n                                      </button>\n                                    </div>\n                                  ))}\n                                  \n                                  <button\n                                    onClick={() => {\n                                      const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                                      const updatedArticles = [...currentArticles, { title: '', author: '', url: '' }];\n                                      updateProductDetail(\n                                        selectedCondition.name, \n                                        productName, \n                                        'researchArticles', \n                                        updatedArticles\n                                      );\n                                    }}\n                                    className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                                  >\n                                    <Plus size={16} className=\"mr-1\" />\n                                    Add Research Article\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-gray-500 text-sm italic\">\n                          No product details available. Add products to phases first.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-10 text-gray-500\">\n                    Select a condition to edit or create a new one\n                  </div>\n                )}\n              </div>\n            </div>\n          </Tabs.Content>\n          \n          {/* Products Tab */}\n          <Tabs.Content value=\"products\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-medium\">Product Library</h3>\n              <button\n                onClick={handleAddProduct}\n                className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n              >\n                <Plus size={16} className=\"mr-1\" />\n                Add New Product\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {allProducts.map((product) => (\n                <div key={product} className=\"border rounded-lg p-4 hover:bg-gray-50 group\">\n                <div className=\"flex justify-between items-start\">\n                  <h4 className=\"font-medium text-md\">{product}</h4>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => handleEditProduct(product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\"\n                      title=\"Edit product details\"\n                    >\n                      <Edit size={16} />\n                    </button>\n                    <button\n                      onClick={() => confirmDelete('product', product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      title=\"Delete product\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                </div>\n                  \n                {editedConditions[0]?.productDetails?.[product] && (\n                  <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Usage: </span>\n                      {editedConditions[0].productDetails[product].usage}\n                    </div>\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Conditions: </span>\n                      {editedConditions.filter(c => \n                        Object.values(c.products || {}).some(products => \n                          products.includes(product) || products.includes(`${product} (Type 3/4 Only)`)\n                        )\n                      ).length} conditions\n                    </div>\n                  </div>\n                )}\n              </div>\n              ))}\n            </div>\n          </Tabs.Content>\n          \n          {/* Categories & DDS Types Tab */}\n          <Tabs.Content value=\"categories\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {/* Categories */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">Categories</h3>\n                  <button\n                    onClick={handleAddCategory}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add Category\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {categories.map((category) => (\n                      <li \n                        key={category}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{category}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.category === category).length} conditions\n                          </div>\n                          {category !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('category', category)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete category\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              \n              {/* DDS Types */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">DDS Types</h3>\n                  <button\n                    onClick={handleAddDdsType}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add DDS Type\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {ddsTypes.map((ddsType) => (\n                      <li \n                        key={ddsType}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{ddsType}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.dds.includes(ddsType)).length} conditions\n                          </div>\n                          {ddsType !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('ddsType', ddsType)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete DDS type\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </Tabs.Content>\n        </Tabs.Root>\n\n        {/* Add New Item Modal */}\n        <Dialog.Root open={showAddModal} onOpenChange={setShowAddModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n            <Dialog.Title className=\"text-lg font-semibold mb-4\">\n              {modalType === 'condition' && 'Add New Condition'}\n              {modalType === 'category' && 'Add New Category'}\n              {modalType === 'ddsType' && 'Add New DDS Type'}\n              {modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')}\n            </Dialog.Title>\n\n              \n              <div className=\"space-y-4\">\n                {modalType === 'condition' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Condition Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Category\n                      </label>\n                      <select\n                        value={newItemData.category || ''}\n                        onChange={(e) => setNewItemData({...newItemData, category: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      >\n                        {categories.map((category) => (\n                          <option key={category} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Key Pitch Points\n                      </label>\n                      <textarea\n                        value={newItemData.pitchPoints || ''}\n                        onChange={(e) => setNewItemData({...newItemData, pitchPoints: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitiveAdvantage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitiveAdvantage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={newItemData.handlingObjections || ''}\n                        onChange={(e) => setNewItemData({...newItemData, handlingObjections: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </>\n                )}\n                \n                {modalType === 'category' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'ddsType' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      DDS Type Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'product' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Product Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Usage Instructions\n                      </label>\n                      <textarea\n                        value={newItemData.usage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, usage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, rationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitive || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitive: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Objection Handling\n                      </label>\n                      <textarea\n                        value={newItemData.objection || ''}\n                        onChange={(e) => setNewItemData({...newItemData, objection: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    {/* New Research Articles Section */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Supporting Research Articles\n                      </label>\n                      \n                      {newItemData.researchArticles && newItemData.researchArticles.map((article, index) => (\n                        <div key={index} className=\"flex space-x-2 mb-2\">\n                          <div className=\"flex-grow space-y-2\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Article title\"\n                              value={article.title || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].title = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"Author/Source\"\n                              value={article.author || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].author = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <textarea\n                              placeholder=\"Abstract (optional)\"\n                              value={article.abstract || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].abstract = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              rows={3}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"URL (optional)\"\n                              value={article.url || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].url = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                          </div>\n                          \n                          <button\n                            onClick={() => {\n                              const updatedArticles = [...newItemData.researchArticles];\n                              updatedArticles.splice(index, 1);\n                              setNewItemData({...newItemData, researchArticles: updatedArticles});\n                            }}\n                            className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                          >\n                            <X size={16} />\n                          </button>\n                        </div>\n                      ))}\n                      \n                      <button\n                        onClick={() => {\n                          const updatedArticles = [...(newItemData.researchArticles || []), { title: '', author: '', url: '' }];\n                          setNewItemData({...newItemData, researchArticles: updatedArticles});\n                        }}\n                        className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                      >\n                        <Plus size={16} className=\"mr-1\" />\n                        Add Research Article\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleSubmitNewItem}\n                  disabled={!newItemData.name}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm ${\n                    newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'\n                  }`}\n                >\n                  {editingProductId ? 'Save Changes' : 'Add'}\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n        \n        {/* Delete Confirmation Modal */}\n        <Dialog.Root open={showDeleteModal} onOpenChange={setShowDeleteModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-2 flex items-center text-red-600\">\n                <AlertTriangle size={20} className=\"mr-2\" />\n                Confirm Deletion\n              </Dialog.Title>\n              \n              <Dialog.Description className=\"text-gray-600 mb-4\">\n                {itemToDelete?.type === 'condition' && \n                  `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`}\n                \n                {itemToDelete?.type === 'product' && \n                  `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`}\n              </Dialog.Description>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}