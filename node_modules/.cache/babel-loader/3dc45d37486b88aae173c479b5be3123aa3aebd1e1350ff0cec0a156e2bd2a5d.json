{"ast":null,"code":"var _jsxFileName = \"/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data, categoriesList, ddsTypesList, productsList) => {\n  // Simulate API call\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      console.log('Categories saved:', categoriesList);\n      console.log('DDS Types saved:', ddsTypesList);\n      console.log('Products saved:', productsList);\n\n      // Save everything to localStorage\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      localStorage.setItem('categories_data', JSON.stringify(categoriesList));\n      localStorage.setItem('dds_types_data', JSON.stringify(ddsTypesList));\n      localStorage.setItem('products_data', JSON.stringify(productsList));\n      resolve({\n        success: true\n      });\n    }, 1500);\n  });\n};\nfunction AdminPanel({\n  conditions,\n  onConditionsUpdate,\n  onClose\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n\n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n\n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n\n      // Try to load saved categories and DDS types from localStorage first\n      const savedCategories = localStorage.getItem('categories_data');\n      const savedDdsTypes = localStorage.getItem('dds_types_data');\n      let categoriesFromStorage = [];\n      let ddsTypesFromStorage = [];\n\n      // Parse saved categories if available\n      if (savedCategories) {\n        try {\n          categoriesFromStorage = JSON.parse(savedCategories);\n          if (!Array.isArray(categoriesFromStorage)) {\n            categoriesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved categories:', e);\n        }\n      }\n\n      // Parse saved DDS types if available\n      if (savedDdsTypes) {\n        try {\n          ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n          if (!Array.isArray(ddsTypesFromStorage)) {\n            ddsTypesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved DDS types:', e);\n        }\n      }\n\n      // Extract unique categories from conditions\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n\n      // Extract unique DDS types from conditions\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n\n      // Merge saved categories with ones from conditions and remove duplicates\n      const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n\n      // Merge saved DDS types with ones from conditions and remove duplicates\n      const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n\n      // Set the merged lists\n      setCategories(mergedCategories);\n      setDdsTypes(mergedDdsTypes);\n\n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n\n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = condition => {\n    if (!condition) return;\n    const patientProducts = {};\n\n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n\n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n\n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        }\n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n\n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n\n      // For conditions where Type 3/4 get additional products\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Acute' || condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute') {\n        if (patientProducts[phase]['3'].includes('Synvaza') && !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    setPatientSpecificProducts(patientProducts);\n  };\n  const handleEditProduct = product => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = {\n      name: product,\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    };\n\n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#'\n        };\n        break;\n      }\n    }\n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n\n      // Save all data: conditions, categories, and DDS types\n      const result = await saveToBackend(updatedConditions, categories, ddsTypes);\n      if (result.success) {\n        // Pass the updated data back to parent component\n        onConditionsUpdate(updatedConditions, categories, ddsTypes);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n\n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n\n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n\n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n\n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n\n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n\n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n\n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n\n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n\n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => (patientTypesForPhase[patientType] || []).includes(product));\n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n\n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n\n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if ((patientTypesForPhase['4'] || []).includes(product) && !(patientTypesForPhase['1'] || []).includes(product) && !(patientTypesForPhase['2'] || []).includes(product) && !product.includes('(Type')) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n\n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n\n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n\n      // Ensure all products have product details\n      const allProductsToCheck = [...commonProducts, ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n      // Add products that are only in some patient types\n      ...[...productsInAllTypes].filter(p => !commonProducts.has(p))];\n\n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n\n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n\n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#'\n          };\n\n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName]\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    return updatedConditions;\n  };\n\n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n\n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n\n  // Handle condition selection\n  const handleConditionSelect = condition => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n\n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => condition.name === conditionId ? {\n      ...condition,\n      [field]: value\n    } : condition));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => {\n      if (condition.name === conditionId) {\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        if (!updatedProductDetails[productName]) {\n          updatedProductDetails[productName] = {};\n        }\n        updatedProductDetails[productName][field] = value;\n        return {\n          ...condition,\n          productDetails: updatedProductDetails\n        };\n      }\n      return condition;\n    }));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = {\n        ...selectedCondition.productDetails\n      };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({\n        ...prev,\n        productDetails: updatedProductDetails\n      }));\n    }\n  };\n\n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = type => {\n    setActivePatientType(type);\n  };\n\n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n\n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n\n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => updated[phase][type].includes(productName));\n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      return updated;\n    });\n  };\n\n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n\n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n\n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    if (modalType === 'product') {\n      const productName = newItemData.name;\n      if (editingProductId && editingProductId !== productName) {\n        // Product name was changed - need to update all references\n        setEditedConditions(prev => prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = {\n            ...condition.products\n          };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => p === editingProductId ? productName : p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p);\n          });\n\n          // Update product details\n          const updatedProductDetails = {\n            ...condition.productDetails\n          };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          return {\n            ...condition,\n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        }));\n\n        // Update allProducts list\n        setAllProducts(prev => {\n          const index = prev.indexOf(editingProductId);\n          if (index !== -1) {\n            const updated = [...prev];\n            updated[index] = productName;\n            return updated;\n          }\n          return [...prev, productName];\n        });\n\n        // Update patient-specific products if currently editing\n        if (selectedCondition) {\n          setPatientSpecificProducts(prev => {\n            const updated = {\n              ...prev\n            };\n            Object.keys(updated).forEach(phase => {\n              Object.keys(updated[phase]).forEach(type => {\n                updated[phase][type] = updated[phase][type].map(p => p === editingProductId ? productName : p);\n              });\n            });\n            return updated;\n          });\n        }\n      } else if (editingProductId) {\n        // Only details changed, not the name\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }\n          return condition;\n        }));\n      } else {\n        // This is a new product\n        if (!allProducts.includes(productName)) {\n          setAllProducts(prev => [...prev, productName]);\n\n          // Add product details to all conditions that use it\n          setEditedConditions(prev => prev.map(condition => {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }));\n        }\n      }\n    } else if (modalType === 'condition') {\n      // Add new condition\n      if (newItemData.name && !editedConditions.find(c => c.name === newItemData.name)) {\n        const newCondition = {\n          name: newItemData.name,\n          category: newItemData.category || categories[0] || '',\n          phases: newItemData.phases || ['Prep', 'Acute', 'Maintenance'],\n          dds: newItemData.dds || [],\n          patientType: newItemData.patientType || 'Types 1 to 4',\n          products: newItemData.products || {\n            Prep: [],\n            Acute: [],\n            Maintenance: []\n          },\n          pitchPoints: newItemData.pitchPoints || '',\n          productDetails: {}\n        };\n        setEditedConditions(prev => [...prev, newCondition]);\n        setSelectedCondition(newCondition);\n      }\n    } else if (modalType === 'category') {\n      // Add new category\n      if (newItemData.name && !categories.includes(newItemData.name)) {\n        // Update categories list\n        setCategories(prev => [...prev, newItemData.name]);\n\n        // Add new category to all conditions that need it\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.category === '') {\n            return {\n              ...condition,\n              category: newItemData.name\n            };\n          }\n          return condition;\n        }));\n      }\n    } else if (modalType === 'ddsType') {\n      // Add new DDS type\n      if (newItemData.name && !ddsTypes.includes(newItemData.name)) {\n        setDdsTypes(prev => [...prev, newItemData.name]);\n      }\n    }\n    setShowAddModal(false);\n    setNewItemData({});\n    setEditingProductId(null);\n  };\n\n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({\n      type,\n      item\n    });\n    setShowDeleteModal(true);\n  };\n\n  // Handle delete\n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const {\n      type,\n      item\n    } = itemToDelete;\n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n\n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => prev.map(condition => {\n        const updatedProducts = {\n          ...condition.products\n        };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => p !== item && p !== `${item} (Type 3/4 Only)`);\n        });\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        delete updatedProductDetails[item];\n        return {\n          ...condition,\n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      }));\n\n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n\n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    } else if (type === 'category') {\n      // Don't allow deleting the 'All' category\n      if (item === 'All') {\n        setShowDeleteModal(false);\n        setItemToDelete(null);\n        return;\n      }\n\n      // Remove the category from the list\n      setCategories(prev => prev.filter(c => c !== item));\n\n      // Update conditions that use this category (set to first available category or empty string)\n      setEditedConditions(prev => prev.map(condition => {\n        if (condition.category === item) {\n          const newCategory = categories.find(c => c !== item && c !== 'All') || '';\n          return {\n            ...condition,\n            category: newCategory\n          };\n        }\n        return condition;\n      }));\n    } else if (type === 'ddsType') {\n      // Don't allow deleting the 'All' DDS type\n      if (item === 'All') {\n        setShowDeleteModal(false);\n        setItemToDelete(null);\n        return;\n      }\n\n      // Remove the DDS type from the list\n      setDdsTypes(prev => prev.filter(d => d !== item));\n\n      // Update conditions that use this DDS type (remove it from their dds array)\n      setEditedConditions(prev => prev.map(condition => {\n        if (condition.dds.includes(item)) {\n          return {\n            ...condition,\n            dds: condition.dds.filter(d => d !== item)\n          };\n        }\n        return condition;\n      }));\n    }\n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n\n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = phase => {\n    var _patientSpecificProdu2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border rounded-lg p-4 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Patient-Specific Product Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Filter by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n            value: activePatientType,\n            onValueChange: handlePatientTypeSelect,\n            children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n              className: \"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 15,\n                className: \"mr-1 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n              children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                className: \"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\",\n                children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                  className: \"p-1\",\n                  children: Object.entries(PATIENT_TYPES).map(([type, label]) => /*#__PURE__*/_jsxDEV(Select.Item, {\n                    value: type,\n                    className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 837,\n                      columnNumber: 25\n                    }, this)\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 832,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 9\n      }, this), activePatientType !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          size: 15,\n          className: \"mr-1 flex-shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Configuring products specifically for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: PATIENT_TYPES[activePatientType]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 53\n          }, this), \". Products added here will only be recommended for this patient type.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: [\"Products for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            if (e.target.value) {\n              addProductToPatientType(phase, activePatientType, e.target.value);\n              e.target.value = ''; // Reset select\n            }\n          },\n          className: \"px-3 py-1 border border-gray-300 rounded-md text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Add product...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }, this), allProducts.filter(product => {\n            var _patientSpecificProdu;\n            // Only show products that aren't already added for this patient type\n            if (!patientSpecificProducts[phase]) return true;\n            return !((_patientSpecificProdu = patientSpecificProducts[phase][activePatientType]) !== null && _patientSpecificProdu !== void 0 && _patientSpecificProdu.includes(product));\n          }).map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product,\n            children: product\n          }, product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this), patientSpecificProducts[phase] && ((_patientSpecificProdu2 = patientSpecificProducts[phase][activePatientType]) === null || _patientSpecificProdu2 === void 0 ? void 0 : _patientSpecificProdu2.length) > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2 max-h-60 overflow-y-auto\",\n        children: patientSpecificProducts[phase][activePatientType].map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"bg-white border rounded-md p-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProductFromPatientType(phase, activePatientType, product),\n            className: \"text-red-500 hover:text-red-700 p-1\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 17\n          }, this)]\n        }, product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center text-gray-500 bg-gray-100 rounded-md\",\n        children: [\"No products configured for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-gray-500\",\n      children: \"No conditions data available to edit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Knowledge Base Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResetChanges,\n              className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n              disabled: isSaving,\n              children: \"Reset Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveChanges,\n              className: `px-3 py-1.5 rounded-md text-white text-sm flex items-center ${isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'}`,\n              disabled: isSaving,\n              children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Saving...\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Save, {\n                  size: 16,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 23\n                }, this), \"Save Changes\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-500 hover:text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 9\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(Check, {\n          size: 20,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this), \"Changes saved successfully!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n        value: activeTab,\n        onValueChange: setActiveTab,\n        children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n          className: \"flex border-b\",\n          children: [/*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"importExport\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"importExport\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Import/Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"conditions\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"conditions\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"products\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"products\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"categories\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"categories\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Categories & DDS Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"importExport\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-2\",\n              children: \"Knowledge Base Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Import and export your knowledge base data for backup purposes or to transfer between environments.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataImportExport, {\n            conditions: editedConditions,\n            onImport: importedData => {\n              setEditedConditions(importedData);\n              setIsEditing(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"conditions\",\n          className: \"flex-grow overflow-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/3 border-r p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-medium\",\n                  children: \"All Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCondition,\n                  className: \"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 21\n                  }, this), \"Add New\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-1\",\n                children: editedConditions.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: clsx(\"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\", selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-100\" : \"hover:bg-gray-100\"),\n                  onClick: () => handleConditionSelect(condition),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-sm\",\n                      children: condition.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1062,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: condition.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1063,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1061,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      confirmDelete('condition', condition);\n                    },\n                    className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1072,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1065,\n                    columnNumber: 23\n                  }, this)]\n                }, condition.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2/3 p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: selectedCondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Condition Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1086,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: selectedCondition.name,\n                      onChange: e => updateConditionField(selectedCondition.name, 'name', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1089,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1085,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1099,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedCondition.category,\n                      onChange: e => updateConditionField(selectedCondition.name, 'category', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: category,\n                        children: category\n                      }, category, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1108,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1102,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1098,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Patient Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1118,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: selectedCondition.patientType,\n                    onChange: e => updateConditionField(selectedCondition.name, 'patientType', e.target.value),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1121,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mt-1 text-xs text-gray-500\",\n                    children: \"Format: \\\"Types 1 to 4\\\" or \\\"Types 3 to 4\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1127,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"DDS Types\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1132,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.dds.map(dds => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [dds, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          },\n                          className: \"ml-1 text-blue-700 hover:text-blue-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1150,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1143,\n                          columnNumber: 31\n                        }, this)]\n                      }, dds, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1138,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1136,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1135,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => {\n                      if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                        const updatedDds = [...selectedCondition.dds, e.target.value];\n                        updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                      }\n                      e.target.value = ''; // Reset select\n                    },\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Add DDS Type...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1166,\n                      columnNumber: 25\n                    }, this), ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map(dds => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dds,\n                      children: dds\n                    }, dds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1168,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1156,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1177,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.pitchPoints,\n                    onChange: e => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1180,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1176,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1190,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.competitiveAdvantage || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1193,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1189,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Handling Objections\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1203,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.handlingObjections || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1206,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Treatment Phases\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1215,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [phase, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                            updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          },\n                          className: \"ml-1 text-purple-700 hover:text-purple-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1233,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1226,\n                          columnNumber: 31\n                        }, this)]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1221,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1219,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1218,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"New phase name...\",\n                      className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      onKeyDown: e => {\n                        if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                          const updatedPhases = [...selectedCondition.phases, e.target.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          e.target.value = '';\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1240,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        const input = e.target.previousElementSibling;\n                        if (input.value && !selectedCondition.phases.includes(input.value)) {\n                          const updatedPhases = [...selectedCondition.phases, input.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          input.value = '';\n                        }\n                      },\n                      className: \"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\",\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1252,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1239,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Products by Phase\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1269,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n                    defaultValue: selectedCondition.phases[0],\n                    className: \"border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n                      className: \"flex border-b bg-gray-50\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n                        value: phase,\n                        className: clsx(\"flex-1 px-4 py-2 text-sm font-medium\", \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\", \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"),\n                        children: [phase, \" Phase\"]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1274,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1272,\n                      columnNumber: 25\n                    }, this), selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Content, {\n                      value: phase,\n                      className: \"p-4\",\n                      children: renderPatientTypeProductConfig(phase)\n                    }, phase, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1289,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1271,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Product Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1299,\n                    columnNumber: 23\n                  }, this), Object.keys(selectedCondition.productDetails || {}).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-6\",\n                    children: Object.keys(selectedCondition.productDetails).map(productName => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border rounded-md p-4 bg-gray-50\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-md mb-3\",\n                        children: productName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1305,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Supporting Research Articles\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1312,\n                            columnNumber: 35\n                          }, this), selectedCondition.productDetails[productName].researchArticles && selectedCondition.productDetails[productName].researchArticles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex space-x-2 mb-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"flex-grow space-y-2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Article title\",\n                                value: article.title || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].title = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1320,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Author/Source\",\n                                value: article.author || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].author = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1337,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                                placeholder: \"Abstract (optional)\",\n                                value: article.abstract || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].abstract = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                rows: 3,\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1354,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"URL (optional)\",\n                                value: article.url || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].url = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1371,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1319,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => {\n                                const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                updatedArticles.splice(index, 1);\n                                updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                              },\n                              className: \"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",\n                              children: /*#__PURE__*/_jsxDEV(X, {\n                                size: 16\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1402,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1389,\n                              columnNumber: 39\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1318,\n                            columnNumber: 37\n                          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                              const updatedArticles = [...currentArticles, {\n                                title: '',\n                                author: '',\n                                url: ''\n                              }];\n                              updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                            },\n                            className: \"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",\n                            children: [/*#__PURE__*/_jsxDEV(Plus, {\n                              size: 16,\n                              className: \"mr-1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1420,\n                              columnNumber: 37\n                            }, this), \"Add Research Article\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1407,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1311,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1307,\n                        columnNumber: 31\n                      }, this)]\n                    }, productName, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1304,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm italic\",\n                    children: \"No product details available. Add products to phases first.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1429,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1298,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-10 text-gray-500\",\n                children: \"Select a condition to edit or create a new one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1436,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"products\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium\",\n              children: \"Product Library\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddProduct,\n              className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1452,\n                columnNumber: 17\n              }, this), \"Add New Product\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1448,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n            children: allProducts.map(product => {\n              var _editedConditions$, _editedConditions$$pr;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4 hover:bg-gray-50 group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-md\",\n                    children: product\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1461,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEditProduct(product),\n                      className: \"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\",\n                      title: \"Edit product details\",\n                      children: /*#__PURE__*/_jsxDEV(Edit, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1468,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1463,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => confirmDelete('product', product),\n                      className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                      title: \"Delete product\",\n                      children: /*#__PURE__*/_jsxDEV(Trash2, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1475,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1470,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1462,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1460,\n                  columnNumber: 17\n                }, this), ((_editedConditions$ = editedConditions[0]) === null || _editedConditions$ === void 0 ? void 0 : (_editedConditions$$pr = _editedConditions$.productDetails) === null || _editedConditions$$pr === void 0 ? void 0 : _editedConditions$$pr[product]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-sm text-gray-600 space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Usage: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1483,\n                      columnNumber: 23\n                    }, this), editedConditions[0].productDetails[product].usage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1482,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Conditions: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1487,\n                      columnNumber: 23\n                    }, this), editedConditions.filter(c => Object.values(c.products || {}).some(products => products.includes(product) || products.includes(`${product} (Type 3/4 Only)`))).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1486,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1481,\n                  columnNumber: 19\n                }, this)]\n              }, product, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1459,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"categories\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1507,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCategory,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1512,\n                    columnNumber: 21\n                  }, this), \"Add Category\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1508,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-h-[60vh] overflow-y-auto pr-1\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-2\",\n                  children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1524,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-500 mr-3\",\n                        children: [editedConditions.filter(c => c.category === category).length, \" conditions\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1526,\n                        columnNumber: 27\n                      }, this), category !== 'All' && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => confirmDelete('category', category),\n                        className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                        title: \"Delete category\",\n                        children: /*#__PURE__*/_jsxDEV(Trash2, {\n                          size: 16\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1535,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1530,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1525,\n                      columnNumber: 25\n                    }, this)]\n                  }, category, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1520,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1518,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1517,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1505,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"DDS Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1548,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddDdsType,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1553,\n                    columnNumber: 21\n                  }, this), \"Add DDS Type\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1549,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1547,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-h-[60vh] overflow-y-auto pr-1\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-2\",\n                  children: ddsTypes.map(ddsType => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: ddsType\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1565,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-500 mr-3\",\n                        children: [editedConditions.filter(c => c.dds.includes(ddsType)).length, \" conditions\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1567,\n                        columnNumber: 27\n                      }, this), ddsType !== 'All' && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => confirmDelete('ddsType', ddsType),\n                        className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                        title: \"Delete DDS type\",\n                        children: /*#__PURE__*/_jsxDEV(Trash2, {\n                          size: 16\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1576,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1571,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1566,\n                      columnNumber: 25\n                    }, this)]\n                  }, ddsType, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1561,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1559,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1558,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showAddModal,\n        onOpenChange: setShowAddModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-4\",\n              children: [modalType === 'condition' && 'Add New Condition', modalType === 'category' && 'Add New Category', modalType === 'ddsType' && 'Add New DDS Type', modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1594,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [modalType === 'condition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Condition Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1606,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1609,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1605,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1618,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newItemData.category || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      category: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: category,\n                      children: category\n                    }, category, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1627,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1621,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1617,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Key Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1634,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.pitchPoints || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      pitchPoints: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1637,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1633,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1646,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitiveAdvantage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitiveAdvantage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1649,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1645,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Handling Objections\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1658,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.handlingObjections || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      handlingObjections: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1661,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1657,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), modalType === 'category' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"Category Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1673,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1676,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1672,\n                columnNumber: 19\n              }, this), modalType === 'ddsType' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"DDS Type Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1687,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1690,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1686,\n                columnNumber: 19\n              }, this), modalType === 'product' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Product Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1702,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1705,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1701,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Usage Instructions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1714,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.usage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      usage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1717,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1713,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Clinical Rationale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1726,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.rationale || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      rationale: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1729,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1725,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1738,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitive || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitive: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1741,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1737,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Objection Handling\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1750,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.objection || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      objection: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1753,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1749,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Supporting Research Articles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1763,\n                    columnNumber: 23\n                  }, this), newItemData.researchArticles && newItemData.researchArticles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2 mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow space-y-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Article title\",\n                        value: article.title || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].title = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1770,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Author/Source\",\n                        value: article.author || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].author = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1782,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        placeholder: \"Abstract (optional)\",\n                        value: article.abstract || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].abstract = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        rows: 3,\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1794,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"URL (optional)\",\n                        value: article.url || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].url = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1806,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1769,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        const updatedArticles = [...newItemData.researchArticles];\n                        updatedArticles.splice(index, 1);\n                        setNewItemData({\n                          ...newItemData,\n                          researchArticles: updatedArticles\n                        });\n                      },\n                      className: \"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",\n                      children: /*#__PURE__*/_jsxDEV(X, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1827,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1819,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1768,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const updatedArticles = [...(newItemData.researchArticles || []), {\n                        title: '',\n                        author: '',\n                        url: ''\n                      }];\n                      setNewItemData({\n                        ...newItemData,\n                        researchArticles: updatedArticles\n                      });\n                    },\n                    className: \"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Plus, {\n                      size: 16,\n                      className: \"mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1839,\n                      columnNumber: 25\n                    }, this), \"Add Research Article\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1832,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1762,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1849,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1848,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmitNewItem,\n                disabled: !newItemData.name,\n                className: `px-3 py-1.5 rounded-md text-white text-sm ${newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'}`,\n                children: editingProductId ? 'Save Changes' : 'Add'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1854,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1847,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1591,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showDeleteModal,\n        onOpenChange: setShowDeleteModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1871,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-2 flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1874,\n                columnNumber: 17\n              }, this), \"Confirm Deletion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1873,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dialog.Description, {\n              className: \"text-gray-600 mb-4\",\n              children: [(itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'condition' && `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`, (itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'product' && `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1878,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1888,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1887,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDelete,\n                className: \"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1893,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1886,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1872,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1870,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1869,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 918,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"xZdfQKuwjBuI/kMmcPtCdhp06sI=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Save","Plus","Edit","Trash2","X","ChevronDown","Info","AlertTriangle","Lock","Check","User","Filter","clsx","DataImportExport","jsxDEV","_jsxDEV","Fragment","_Fragment","PATIENT_TYPES","saveToBackend","data","categoriesList","ddsTypesList","productsList","Promise","resolve","setTimeout","console","log","localStorage","setItem","JSON","stringify","success","AdminPanel","conditions","onConditionsUpdate","onClose","_s","activeTab","setActiveTab","editedConditions","setEditedConditions","selectedCondition","setSelectedCondition","editingProductId","setEditingProductId","categories","setCategories","ddsTypes","setDdsTypes","allProducts","setAllProducts","isEditing","setIsEditing","isSaving","setIsSaving","showSuccess","setShowSuccess","activePatientType","setActivePatientType","patientSpecificProducts","setPatientSpecificProducts","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showAddModal","setShowAddModal","modalType","setModalType","newItemData","setNewItemData","savedCategories","getItem","savedDdsTypes","categoriesFromStorage","ddsTypesFromStorage","parse","Array","isArray","e","error","uniqueCategories","Set","map","c","category","allDdsTypes","forEach","condition","dds","includes","push","mergedCategories","mergedDdsTypes","length","firstCondition","initializePatientSpecificProducts","patientProducts","phases","phase","products","product","baseProduct","replace","name","handleEditProduct","productDetails","usage","rationale","competitive","objection","factSheet","handleSaveChanges","updatedConditions","applyPatientSpecificProducts","result","conditionIndex","findIndex","patientSpecificConfig","Object","keys","phaseProducts","patientTypesForPhase","commonProducts","allPatientTypes","productsInAllTypes","patientType","add","isInAllTypes","every","from","type34Products","allProductsToCheck","p","filter","has","cleanProductName","handleResetChanges","handleConditionSelect","updateConditionField","conditionId","field","value","prev","updateProductDetail","productName","updatedProductDetails","handlePatientTypeSelect","type","addProductToPatientType","updated","removeProductFromPatientType","handleAddCondition","Prep","Acute","Maintenance","pitchPoints","competitiveAdvantage","handlingObjections","handleAddCategory","handleAddDdsType","handleAddProduct","handleSubmitNewItem","updatedProducts","index","indexOf","find","newCondition","confirmDelete","item","handleDelete","remainingConditions","newCategory","d","renderPatientTypeProductConfig","_patientSpecificProdu2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Root","onValueChange","Trigger","size","Value","Icon","Portal","Content","Viewport","entries","label","Item","ItemText","onChange","target","_patientSpecificProdu","onClick","disabled","List","style","maxHeight","overflowY","onImport","importedData","stopPropagation","updatedDds","rows","updatedPhases","placeholder","onKeyDown","key","input","previousElementSibling","defaultValue","researchArticles","article","title","updatedArticles","author","abstract","url","splice","currentArticles","_editedConditions$","_editedConditions$$pr","values","some","ddsType","open","onOpenChange","Overlay","Title","Close","asChild","Description","_c","$RefreshReg$"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data, categoriesList, ddsTypesList, productsList) => {\n  // Simulate API call\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      console.log('Categories saved:', categoriesList);\n      console.log('DDS Types saved:', ddsTypesList);\n      console.log('Products saved:', productsList);\n      \n      // Save everything to localStorage\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      localStorage.setItem('categories_data', JSON.stringify(categoriesList));\n      localStorage.setItem('dds_types_data', JSON.stringify(ddsTypesList));\n      localStorage.setItem('products_data', JSON.stringify(productsList));\n      \n      resolve({ success: true });\n    }, 1500);\n  });\n};\n\nfunction AdminPanel({ conditions, onConditionsUpdate, onClose }) {\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  \n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n  \n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n  \n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n      \n      // Try to load saved categories and DDS types from localStorage first\n      const savedCategories = localStorage.getItem('categories_data');\n      const savedDdsTypes = localStorage.getItem('dds_types_data');\n      \n      let categoriesFromStorage = [];\n      let ddsTypesFromStorage = [];\n      \n      // Parse saved categories if available\n      if (savedCategories) {\n        try {\n          categoriesFromStorage = JSON.parse(savedCategories);\n          if (!Array.isArray(categoriesFromStorage)) {\n            categoriesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved categories:', e);\n        }\n      }\n      \n      // Parse saved DDS types if available\n      if (savedDdsTypes) {\n        try {\n          ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n          if (!Array.isArray(ddsTypesFromStorage)) {\n            ddsTypesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved DDS types:', e);\n        }\n      }\n      \n      // Extract unique categories from conditions\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      \n      // Extract unique DDS types from conditions\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      \n      // Merge saved categories with ones from conditions and remove duplicates\n      const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n      \n      // Merge saved DDS types with ones from conditions and remove duplicates\n      const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n      \n      // Set the merged lists\n      setCategories(mergedCategories);\n      setDdsTypes(mergedDdsTypes);\n      \n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n        \n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = (condition) => {\n    if (!condition) return;\n    \n    const patientProducts = {};\n    \n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n      \n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        } \n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n      \n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n      \n      // For conditions where Type 3/4 get additional products\n      if (\n        (condition.name === 'Gingival Recession Surgery' && phase === 'Acute') ||\n        (condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute')\n      ) {\n        if (patientProducts[phase]['3'].includes('Synvaza') && \n            !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  };\n\n  const handleEditProduct = (product) => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = { name: product, usage: '', rationale: '', competitive: '', objection: '', factSheet: '#' };\n    \n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#'\n        };\n        break;\n      }\n    }\n    \n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\nconst handleSaveChanges = async () => {\n  setIsSaving(true);\n  try {\n    // Apply patient-specific products to condition\n    const updatedConditions = applyPatientSpecificProducts();\n    \n    // Save all data: conditions, categories, and DDS types\n    const result = await saveToBackend(updatedConditions, categories, ddsTypes);\n    \n    if (result.success) {\n      // Pass the updated data back to parent component\n      onConditionsUpdate(updatedConditions, categories, ddsTypes);\n      setShowSuccess(true);\n      setTimeout(() => setShowSuccess(false), 3000);\n    }\n  } catch (error) {\n    console.error('Error saving changes:', error);\n    // Handle error (show error notification, etc.)\n  } finally {\n    setIsSaving(false);\n  }\n};\n  \n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n    \n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n    \n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n    \n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n    \n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n    \n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n      \n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      \n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n      \n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n      \n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => \n          (patientTypesForPhase[patientType] || []).includes(product)\n        );\n        \n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n      \n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n      \n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      \n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if (\n          (patientTypesForPhase['4'] || []).includes(product) && \n          !(patientTypesForPhase['1'] || []).includes(product) && \n          !(patientTypesForPhase['2'] || []).includes(product) &&\n          !product.includes('(Type')\n        ) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n      \n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n      \n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n      \n      // Ensure all products have product details\n      const allProductsToCheck = [\n        ...commonProducts, \n        ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n        // Add products that are only in some patient types\n        ...[...productsInAllTypes].filter(p => !commonProducts.has(p))\n      ];\n      \n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n      \n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n        \n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#'\n          };\n          \n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName]\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    \n    return updatedConditions;\n  };\n  \n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n    \n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n  \n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n  \n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => \n        condition.name === conditionId\n          ? { ...condition, [field]: value }\n          : condition\n      )\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({ ...prev, [field]: value }));\n    }\n  };\n  \n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.name === conditionId) {\n          const updatedProductDetails = { ...condition.productDetails };\n          if (!updatedProductDetails[productName]) {\n            updatedProductDetails[productName] = {};\n          }\n          updatedProductDetails[productName][field] = value;\n          return { ...condition, productDetails: updatedProductDetails };\n        }\n        return condition;\n      })\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = { ...selectedCondition.productDetails };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({ \n        ...prev, \n        productDetails: updatedProductDetails \n      }));\n    }\n  };\n  \n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n  \n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n      \n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n        \n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => \n          updated[phase][type].includes(productName)\n        );\n        \n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      \n      return updated;\n    });\n  };\n  \n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n        \n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      \n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n  \n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n  \n  // Submit new item from modal\nconst handleSubmitNewItem = () => {\n  setIsEditing(true);\n  \n  if (modalType === 'product') {\n    const productName = newItemData.name;\n    \n    if (editingProductId && editingProductId !== productName) {\n      // Product name was changed - need to update all references\n      setEditedConditions(prev => \n        prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = { ...condition.products };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => \n              p === editingProductId ? productName : \n              p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p\n            );\n          });\n          \n          // Update product details\n          const updatedProductDetails = { ...condition.productDetails };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          \n          return { \n            ...condition, \n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        })\n      );\n      \n      // Update allProducts list\n      setAllProducts(prev => {\n        const index = prev.indexOf(editingProductId);\n        if (index !== -1) {\n          const updated = [...prev];\n          updated[index] = productName;\n          return updated;\n        }\n        return [...prev, productName];\n      });\n      \n      // Update patient-specific products if currently editing\n      if (selectedCondition) {\n        setPatientSpecificProducts(prev => {\n          const updated = { ...prev };\n          Object.keys(updated).forEach(phase => {\n            Object.keys(updated[phase]).forEach(type => {\n              updated[phase][type] = updated[phase][type].map(p => \n                p === editingProductId ? productName : p\n              );\n            });\n          });\n          return updated;\n        });\n      }\n    } else if (editingProductId) {\n      // Only details changed, not the name\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          }\n          return condition;\n        })\n      );\n    } else {\n      // This is a new product\n      if (!allProducts.includes(productName)) {\n        setAllProducts(prev => [...prev, productName]);\n        \n        // Add product details to all conditions that use it\n        setEditedConditions(prev => \n          prev.map(condition => {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          })\n        );\n      }\n    }\n  } else if (modalType === 'condition') {\n    // Add new condition\n    if (newItemData.name && !editedConditions.find(c => c.name === newItemData.name)) {\n      const newCondition = {\n        name: newItemData.name,\n        category: newItemData.category || categories[0] || '',\n        phases: newItemData.phases || ['Prep', 'Acute', 'Maintenance'],\n        dds: newItemData.dds || [],\n        patientType: newItemData.patientType || 'Types 1 to 4',\n        products: newItemData.products || {\n          Prep: [],\n          Acute: [],\n          Maintenance: []\n        },\n        pitchPoints: newItemData.pitchPoints || '',\n        productDetails: {}\n      };\n      \n      setEditedConditions(prev => [...prev, newCondition]);\n      setSelectedCondition(newCondition);\n    }\n  } else if (modalType === 'category') {\n    // Add new category\n    if (newItemData.name && !categories.includes(newItemData.name)) {\n      // Update categories list\n      setCategories(prev => [...prev, newItemData.name]);\n      \n      // Add new category to all conditions that need it\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.category === '') {\n            return { ...condition, category: newItemData.name };\n          }\n          return condition;\n        })\n      );\n    }\n  } else if (modalType === 'ddsType') {\n    // Add new DDS type\n    if (newItemData.name && !ddsTypes.includes(newItemData.name)) {\n      setDdsTypes(prev => [...prev, newItemData.name]);\n    }\n  }\n  \n  setShowAddModal(false);\n  setNewItemData({});\n  setEditingProductId(null);\n};\n  \n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({ type, item });\n    setShowDeleteModal(true);\n  };\n  \n  // Handle delete\n  // Handle delete\nconst handleDelete = () => {\n  setIsEditing(true);\n  const { type, item } = itemToDelete;\n  \n  if (type === 'condition') {\n    setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n    \n    // Select a new condition if the deleted one was selected\n    if (selectedCondition && selectedCondition.name === item.name) {\n      const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n      setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n    }\n  } else if (type === 'product') {\n    // Remove product from all conditions\n    setEditedConditions(prev => \n      prev.map(condition => {\n        const updatedProducts = { ...condition.products };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => \n            p !== item && p !== `${item} (Type 3/4 Only)`\n          );\n        });\n        \n        const updatedProductDetails = { ...condition.productDetails };\n        delete updatedProductDetails[item];\n        \n        return { \n          ...condition, \n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      })\n    );\n    \n    // Update allProducts list\n    setAllProducts(prev => prev.filter(p => p !== item));\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      Object.keys(updated).forEach(phase => {\n        Object.keys(updated[phase]).forEach(type => {\n          updated[phase][type] = updated[phase][type].filter(p => p !== item);\n        });\n      });\n      return updated;\n    });\n  } else if (type === 'category') {\n    // Don't allow deleting the 'All' category\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the category from the list\n    setCategories(prev => prev.filter(c => c !== item));\n    \n    // Update conditions that use this category (set to first available category or empty string)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.category === item) {\n          const newCategory = categories.find(c => c !== item && c !== 'All') || '';\n          return { ...condition, category: newCategory };\n        }\n        return condition;\n      })\n    );\n  } else if (type === 'ddsType') {\n    // Don't allow deleting the 'All' DDS type\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the DDS type from the list\n    setDdsTypes(prev => prev.filter(d => d !== item));\n    \n    // Update conditions that use this DDS type (remove it from their dds array)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.dds.includes(item)) {\n          return { \n            ...condition, \n            dds: condition.dds.filter(d => d !== item)\n          };\n        }\n        return condition;\n      })\n    );\n  }\n  \n  setShowDeleteModal(false);\n  setItemToDelete(null);\n};\n  \n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = (phase) => {\n    return (\n      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-medium\">Patient-Specific Product Configuration</h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Filter by:</span>\n            <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n              <Select.Trigger className=\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\">\n                <User size={15} className=\"mr-1 text-gray-500\" />\n                <Select.Value />\n                <Select.Icon><ChevronDown size={15} /></Select.Icon>\n              </Select.Trigger>\n              <Select.Portal>\n                <Select.Content className=\"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\">\n                  <Select.Viewport className=\"p-1\">\n                    {Object.entries(PATIENT_TYPES).map(([type, label]) => (\n                      <Select.Item\n                        key={type}\n                        value={type}\n                        className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        <Select.ItemText>{label}</Select.ItemText>\n                      </Select.Item>\n                    ))}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Portal>\n            </Select.Root>\n          </div>\n        </div>\n        \n        {activePatientType !== 'all' && (\n          <div className=\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\">\n            <Info size={15} className=\"mr-1 flex-shrink-0\" />\n            <span>\n              Configuring products specifically for <strong>{PATIENT_TYPES[activePatientType]}</strong>.\n              Products added here will only be recommended for this patient type.\n            </span>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Products for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}</span>\n          <select\n            onChange={(e) => {\n              if (e.target.value) {\n                addProductToPatientType(phase, activePatientType, e.target.value);\n                e.target.value = ''; // Reset select\n              }\n            }}\n            className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n          >\n            <option value=\"\">Add product...</option>\n            {allProducts\n              .filter(product => {\n                // Only show products that aren't already added for this patient type\n                if (!patientSpecificProducts[phase]) return true;\n                return !patientSpecificProducts[phase][activePatientType]?.includes(product);\n              })\n              .map((product) => (\n                <option key={product} value={product}>\n                  {product}\n                </option>\n              ))}\n          </select>\n        </div>\n        \n        {patientSpecificProducts[phase] && patientSpecificProducts[phase][activePatientType]?.length > 0 ? (\n          <ul className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {patientSpecificProducts[phase][activePatientType].map((product) => (\n              <li \n                key={product}\n                className=\"bg-white border rounded-md p-2 flex justify-between items-center\"\n              >\n                <span>{product}</span>\n                <button\n                  onClick={() => removeProductFromPatientType(phase, activePatientType, product)}\n                  className=\"text-red-500 hover:text-red-700 p-1\"\n                >\n                  <Trash2 size={15} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\">\n            No products configured for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}.\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-gray-500\">\n        No conditions data available to edit.\n      </div>\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h2 className=\"text-xl font-bold\">Knowledge Base Administrator</h2>\n          <div className=\"flex items-center space-x-2\">\n            {/* Action buttons */}\n            {isEditing && (\n              <>\n                <button\n                  onClick={handleResetChanges}\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\"\n                  disabled={isSaving}\n                >\n                  Reset Changes\n                </button>\n                <button\n                  onClick={handleSaveChanges}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${\n                    isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>Saving...</>\n                  ) : (\n                    <>\n                      <Save size={16} className=\"mr-1\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Save success notification */}\n        {showSuccess && (\n          <div className=\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\">\n            <Check size={20} className=\"mr-2\" />\n            Changes saved successfully!\n          </div>\n        )}\n        \n        {/* Tabs */}\n        <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n          <Tabs.List className=\"flex border-b\">\n            <Tabs.Trigger\n              value=\"importExport\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"importExport\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Import/Export\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"conditions\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"conditions\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Conditions\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"products\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"products\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Products\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"categories\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"categories\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Categories & DDS Types\n            </Tabs.Trigger>\n          </Tabs.List>\n          \n          {/* Import/Export Tab */}\n          <Tabs.Content value=\"importExport\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2\">Knowledge Base Management</h3>\n              <p className=\"text-gray-600\">\n                Import and export your knowledge base data for backup purposes or to transfer between environments.\n              </p>\n            </div>\n            \n            <DataImportExport \n              conditions={editedConditions} \n              onImport={(importedData) => {\n                setEditedConditions(importedData);\n                setIsEditing(true);\n              }} \n            />\n          </Tabs.Content>\n          \n          {/* Conditions Tab */}\n          <Tabs.Content value=\"conditions\" className=\"flex-grow overflow-auto\">\n            <div className=\"flex h-full\">\n              {/* Conditions List */}\n              <div className=\"w-1/3 border-r p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">All Conditions</h3>\n                  <button\n                    onClick={handleAddCondition}\n                    className=\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add New\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-1\">\n                  {editedConditions.map((condition) => (\n                    <li \n                      key={condition.name}\n                      className={clsx(\n                        \"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",\n                        selectedCondition && selectedCondition.name === condition.name\n                          ? \"bg-blue-100\"\n                          : \"hover:bg-gray-100\"\n                      )}\n                      onClick={() => handleConditionSelect(condition)}\n                    >\n                      <div>\n                        <div className=\"font-medium text-sm\">{condition.name}</div>\n                        <div className=\"text-xs text-gray-500\">{condition.category}</div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          confirmDelete('condition', condition);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* Condition Editor */}\n              <div className=\"w-2/3 p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                {selectedCondition ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {/* Condition Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Condition Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={selectedCondition.name}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n                      \n                      {/* Category */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Category\n                        </label>\n                        <select\n                          value={selectedCondition.category}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'category', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          {categories.map((category) => (\n                            <option key={category} value={category}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    \n                    {/* Patient Type */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Patient Type\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={selectedCondition.patientType}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'patientType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Format: \"Types 1 to 4\" or \"Types 3 to 4\"</p>\n                    </div>\n                    \n                    {/* DDS Types */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        DDS Types\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.dds.map((dds) => (\n                            <span \n                              key={dds} \n                              className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {dds}\n                              <button\n                                onClick={() => {\n                                  const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                                  updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                                }}\n                                className=\"ml-1 text-blue-700 hover:text-blue-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <select\n                        onChange={(e) => {\n                          if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                            const updatedDds = [...selectedCondition.dds, e.target.value];\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          }\n                          e.target.value = ''; // Reset select\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Add DDS Type...</option>\n                        {ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map((dds) => (\n                          <option key={dds} value={dds}>\n                            {dds}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Pitch Points */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Pitch Points\n                      </label>\n                      <textarea\n                        value={selectedCondition.pitchPoints}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    \n                    {/* Competitive Advantage */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={selectedCondition.competitiveAdvantage || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Handling Objections */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={selectedCondition.handlingObjections || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    {/* Phases */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Treatment Phases\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.phases.map((phase) => (\n                            <span \n                              key={phase} \n                              className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {phase}\n                              <button\n                                onClick={() => {\n                                  const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                                  updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                                }}\n                                className=\"ml-1 text-purple-700 hover:text-purple-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"New phase name...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                              const updatedPhases = [...selectedCondition.phases, e.target.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              e.target.value = '';\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={(e) => {\n                            const input = e.target.previousElementSibling;\n                            if (input.value && !selectedCondition.phases.includes(input.value)) {\n                              const updatedPhases = [...selectedCondition.phases, input.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              input.value = '';\n                            }\n                          }}\n                          className=\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                    {/* Products by Phase with Patient Type Filtering */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Products by Phase</h3>\n                      \n                      <Tabs.Root defaultValue={selectedCondition.phases[0]} className=\"border rounded-md\">\n                        <Tabs.List className=\"flex border-b bg-gray-50\">\n                          {selectedCondition.phases.map((phase) => (\n                            <Tabs.Trigger\n                              key={phase}\n                              value={phase}\n                              className={clsx(\n                                \"flex-1 px-4 py-2 text-sm font-medium\",\n                                \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\n                                \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"\n                              )}\n                            >\n                              {phase} Phase\n                            </Tabs.Trigger>\n                          ))}\n                        </Tabs.List>\n                        \n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                            {/* Patient-specific product configuration */}\n                            {renderPatientTypeProductConfig(phase)}\n                          </Tabs.Content>\n                        ))}\n                      </Tabs.Root>\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Product Details</h3>\n                      \n                      {Object.keys(selectedCondition.productDetails || {}).length > 0 ? (\n                        <div className=\"space-y-6\">\n                          {Object.keys(selectedCondition.productDetails).map((productName) => (\n                            <div key={productName} className=\"border rounded-md p-4 bg-gray-50\">\n                              <h4 className=\"font-medium text-md mb-3\">{productName}</h4>\n                              \n                              <div className=\"space-y-3\">\n                                {/* ...existing fields... */}\n                                \n                                {/* Research Articles Section */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Supporting Research Articles\n                                  </label>\n                                  \n                                  {selectedCondition.productDetails[productName].researchArticles && \n                                    selectedCondition.productDetails[productName].researchArticles.map((article, index) => (\n                                    <div key={index} className=\"flex space-x-2 mb-2\">\n                                      <div className=\"flex-grow space-y-2\">\n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Article title\"\n                                          value={article.title || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].title = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Author/Source\"\n                                          value={article.author || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].author = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <textarea\n                                          placeholder=\"Abstract (optional)\"\n                                          value={article.abstract || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].abstract = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          rows={3}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"URL (optional)\"\n                                          value={article.url || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].url = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                      </div>\n                                      \n                                      <button\n                                        onClick={() => {\n                                          const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                          updatedArticles.splice(index, 1);\n                                          updateProductDetail(\n                                            selectedCondition.name, \n                                            productName, \n                                            'researchArticles', \n                                            updatedArticles\n                                          );\n                                        }}\n                                        className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                                      >\n                                        <X size={16} />\n                                      </button>\n                                    </div>\n                                  ))}\n                                  \n                                  <button\n                                    onClick={() => {\n                                      const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                                      const updatedArticles = [...currentArticles, { title: '', author: '', url: '' }];\n                                      updateProductDetail(\n                                        selectedCondition.name, \n                                        productName, \n                                        'researchArticles', \n                                        updatedArticles\n                                      );\n                                    }}\n                                    className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                                  >\n                                    <Plus size={16} className=\"mr-1\" />\n                                    Add Research Article\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-gray-500 text-sm italic\">\n                          No product details available. Add products to phases first.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-10 text-gray-500\">\n                    Select a condition to edit or create a new one\n                  </div>\n                )}\n              </div>\n            </div>\n          </Tabs.Content>\n          \n          {/* Products Tab */}\n          <Tabs.Content value=\"products\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-medium\">Product Library</h3>\n              <button\n                onClick={handleAddProduct}\n                className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n              >\n                <Plus size={16} className=\"mr-1\" />\n                Add New Product\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {allProducts.map((product) => (\n                <div key={product} className=\"border rounded-lg p-4 hover:bg-gray-50 group\">\n                <div className=\"flex justify-between items-start\">\n                  <h4 className=\"font-medium text-md\">{product}</h4>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => handleEditProduct(product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\"\n                      title=\"Edit product details\"\n                    >\n                      <Edit size={16} />\n                    </button>\n                    <button\n                      onClick={() => confirmDelete('product', product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      title=\"Delete product\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                </div>\n                  \n                {editedConditions[0]?.productDetails?.[product] && (\n                  <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Usage: </span>\n                      {editedConditions[0].productDetails[product].usage}\n                    </div>\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Conditions: </span>\n                      {editedConditions.filter(c => \n                        Object.values(c.products || {}).some(products => \n                          products.includes(product) || products.includes(`${product} (Type 3/4 Only)`)\n                        )\n                      ).length} conditions\n                    </div>\n                  </div>\n                )}\n              </div>\n              ))}\n            </div>\n          </Tabs.Content>\n          \n          {/* Categories & DDS Types Tab */}\n          <Tabs.Content value=\"categories\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {/* Categories */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">Categories</h3>\n                  <button\n                    onClick={handleAddCategory}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add Category\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {categories.map((category) => (\n                      <li \n                        key={category}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{category}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.category === category).length} conditions\n                          </div>\n                          {category !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('category', category)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete category\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              \n              {/* DDS Types */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">DDS Types</h3>\n                  <button\n                    onClick={handleAddDdsType}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add DDS Type\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {ddsTypes.map((ddsType) => (\n                      <li \n                        key={ddsType}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{ddsType}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.dds.includes(ddsType)).length} conditions\n                          </div>\n                          {ddsType !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('ddsType', ddsType)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete DDS type\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </Tabs.Content>\n        </Tabs.Root>\n\n        {/* Add New Item Modal */}\n        <Dialog.Root open={showAddModal} onOpenChange={setShowAddModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n            <Dialog.Title className=\"text-lg font-semibold mb-4\">\n              {modalType === 'condition' && 'Add New Condition'}\n              {modalType === 'category' && 'Add New Category'}\n              {modalType === 'ddsType' && 'Add New DDS Type'}\n              {modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')}\n            </Dialog.Title>\n\n              \n              <div className=\"space-y-4\">\n                {modalType === 'condition' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Condition Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Category\n                      </label>\n                      <select\n                        value={newItemData.category || ''}\n                        onChange={(e) => setNewItemData({...newItemData, category: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      >\n                        {categories.map((category) => (\n                          <option key={category} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Key Pitch Points\n                      </label>\n                      <textarea\n                        value={newItemData.pitchPoints || ''}\n                        onChange={(e) => setNewItemData({...newItemData, pitchPoints: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitiveAdvantage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitiveAdvantage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={newItemData.handlingObjections || ''}\n                        onChange={(e) => setNewItemData({...newItemData, handlingObjections: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </>\n                )}\n                \n                {modalType === 'category' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'ddsType' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      DDS Type Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'product' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Product Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Usage Instructions\n                      </label>\n                      <textarea\n                        value={newItemData.usage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, usage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, rationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitive || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitive: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Objection Handling\n                      </label>\n                      <textarea\n                        value={newItemData.objection || ''}\n                        onChange={(e) => setNewItemData({...newItemData, objection: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    {/* New Research Articles Section */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Supporting Research Articles\n                      </label>\n                      \n                      {newItemData.researchArticles && newItemData.researchArticles.map((article, index) => (\n                        <div key={index} className=\"flex space-x-2 mb-2\">\n                          <div className=\"flex-grow space-y-2\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Article title\"\n                              value={article.title || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].title = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"Author/Source\"\n                              value={article.author || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].author = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <textarea\n                              placeholder=\"Abstract (optional)\"\n                              value={article.abstract || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].abstract = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              rows={3}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"URL (optional)\"\n                              value={article.url || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].url = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                          </div>\n                          \n                          <button\n                            onClick={() => {\n                              const updatedArticles = [...newItemData.researchArticles];\n                              updatedArticles.splice(index, 1);\n                              setNewItemData({...newItemData, researchArticles: updatedArticles});\n                            }}\n                            className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                          >\n                            <X size={16} />\n                          </button>\n                        </div>\n                      ))}\n                      \n                      <button\n                        onClick={() => {\n                          const updatedArticles = [...(newItemData.researchArticles || []), { title: '', author: '', url: '' }];\n                          setNewItemData({...newItemData, researchArticles: updatedArticles});\n                        }}\n                        className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                      >\n                        <Plus size={16} className=\"mr-1\" />\n                        Add Research Article\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleSubmitNewItem}\n                  disabled={!newItemData.name}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm ${\n                    newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'\n                  }`}\n                >\n                  {editingProductId ? 'Save Changes' : 'Add'}\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n        \n        {/* Delete Confirmation Modal */}\n        <Dialog.Root open={showDeleteModal} onOpenChange={setShowDeleteModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-2 flex items-center text-red-600\">\n                <AlertTriangle size={20} className=\"mr-2\" />\n                Confirm Deletion\n              </Dialog.Title>\n              \n              <Dialog.Description className=\"text-gray-600 mb-4\">\n                {itemToDelete?.type === 'condition' && \n                  `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`}\n                \n                {itemToDelete?.type === 'product' && \n                  `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`}\n              </Dialog.Description>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}