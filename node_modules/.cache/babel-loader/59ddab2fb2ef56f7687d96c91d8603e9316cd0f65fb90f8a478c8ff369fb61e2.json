{"ast":null,"code":"var _jsxFileName = \"/Users/austincopps/Projects/RusselProject/Build/src/components/ClinicalChartMockup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Search, X, ChevronDown, Info, Stethoscope, Settings, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DiagnosisWizard from './DiagnosisWizard';\nimport AdminPanel from './AdminPanel';\nimport conditionsDataImport from '../conditions_complete.json';\n\n// PatientTypes definition based on project documentation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PATIENT_TYPES = {\n  'Type 1': 'Healthy',\n  'Type 2': 'Mild inflammation, moderate risk',\n  'Type 3': 'Smoker, diabetic, immunocompromised',\n  'Type 4': 'Periodontal disease, chronic illness, poor healing'\n};\nfunction ClinicalChartMockup() {\n  _s();\n  // State management\n  const [conditions, setConditions] = useState([]);\n  const [filteredConditions, setFilteredConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categoryFilter, setCategoryFilter] = useState('All');\n  const [ddsTypeFilter, setDdsTypeFilter] = useState('All');\n  const [patientTypeFilter, setPatientTypeFilter] = useState('All');\n  const [activePatientType, setActivePatientType] = useState('All'); // Active patient type for product filtering\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [wizardOpen, setWizardOpen] = useState(false);\n  const [adminOpen, setAdminOpen] = useState(false);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Store filtered products\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({}); // Store patient-specific product recommendations\n\n  // Load conditions on component mount\n  useEffect(() => {\n    // Check if saved data exists in localStorage\n    const savedData = localStorage.getItem('conditions_data');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setConditions(parsedData);\n      setFilteredConditions(parsedData);\n\n      // Set default selected condition if data exists\n      if (parsedData.length > 0) {\n        setSelectedCondition(parsedData[0]);\n        setActiveTab(parsedData[0].phases[0]);\n      }\n    } else {\n      // Use imported data if no saved data exists\n      setConditions(conditionsDataImport);\n      setFilteredConditions(conditionsDataImport);\n\n      // Set default selected condition if data exists\n      if (conditionsDataImport.length > 0) {\n        setSelectedCondition(conditionsDataImport[0]);\n        setActiveTab(conditionsDataImport[0].phases[0]);\n      }\n    }\n  }, []);\n\n  // Filter conditions based on selected filters and search query\n  useEffect(() => {\n    let filtered = [...conditions];\n\n    // Filter by category\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.category === categoryFilter);\n    }\n\n    // Filter by DDS type\n    if (ddsTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.dds.includes(ddsTypeFilter));\n    }\n\n    // Filter by patient type\n    if (patientTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => {\n        // Check if condition's patientType includes the selected patient type\n        // This assumes patientType can be a string like \"Types 1 to 4\" or an array\n        if (Array.isArray(condition.patientType)) {\n          return condition.patientType.includes(`Type ${patientTypeFilter}`);\n        } else {\n          return condition.patientType.includes(patientTypeFilter);\n        }\n      });\n    }\n\n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(condition => condition.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n    setFilteredConditions(filtered);\n\n    // Update selected condition if it's no longer in filtered results\n    if (filtered.length > 0 && (!selectedCondition || !filtered.find(c => c.name === selectedCondition.name))) {\n      setSelectedCondition(filtered[0]);\n      setActiveTab(filtered[0].phases[0]);\n    }\n  }, [conditions, categoryFilter, ddsTypeFilter, patientTypeFilter, searchQuery, selectedCondition]);\n\n  // Generate patient-specific product recommendations when selectedCondition changes\n  useEffect(() => {\n    if (!selectedCondition) return;\n\n    // Create a map of phase -> patientType -> products\n    const patientProducts = {};\n\n    // Process each phase\n    selectedCondition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'All': [...(selectedCondition.products[phase] || [])],\n        // Default 'All' includes all products\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n\n      // Extract patient-specific products based on the Excel data pattern\n      const phaseProducts = selectedCondition.products[phase] || [];\n\n      // Special case handling for different conditions\n      if (selectedCondition.name === \"Gingival Recession Surgery\") {\n        if (phase === \"Prep\") {\n          // Type 1 gets nothing (N/A in Excel)\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        } else if (phase === \"Acute\") {\n          // All types get Synvaza\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          // Types 3-4 get Synvaza + AO ProVantage Gel\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        } else if (phase === \"Maintenance\") {\n          // All types get the same\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Scaling and Root Planing (SRP)\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Oral Lichen Planus\") {\n        if (phase === \"Slight\" || phase === \"Moderate\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Severe\") {\n          patientProducts[phase]['1'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Dry Mouth (Radiation/Chemo/Extreme Sensitivity)\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Laser Gingivectomy\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Gingivitis\" || selectedCondition.name === \"Denture Stomatitis\" || selectedCondition.name === \"Nicotine Stomatitis\") {\n        // These all follow the same pattern with AO ProVantage Gel for all patient types\n        patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n        patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n        patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n        patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n      } else if (selectedCondition.name === \"Implant Placement\" || selectedCondition.name === \"Soft Tissue Grafting\") {\n        if (phase === \"Prep\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        } else if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Extractions\" || selectedCondition.name === \"Laser Perio Debridement\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Periodontal Disease\") {\n        if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n        }\n      } else if (selectedCondition.name === \"Xerostomia (Dry Mouth)\") {\n        if (phase === \"Slight\") {\n          patientProducts[phase]['1'] = [\"AO ProRinse Hydrating\"];\n          patientProducts[phase]['2'] = [\"AO ProRinse Hydrating\"];\n          patientProducts[phase]['3'] = [\"AO ProRinse Hydrating\"];\n          patientProducts[phase]['4'] = [\"AO ProRinse Hydrating\"];\n        } else if (phase === \"Mild\" || phase === \"Moderate\") {\n          patientProducts[phase]['1'] = [\"Moisyn\"];\n          patientProducts[phase]['2'] = [\"Moisyn\"];\n          patientProducts[phase]['3'] = [\"Moisyn\"];\n          patientProducts[phase]['4'] = [\"Moisyn\"];\n        } else if (phase === \"Severe\") {\n          patientProducts[phase]['1'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n        }\n      } else if (selectedCondition.name === \"Tongue Disorders (Geographic, Black Hairy)\") {\n        if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n        }\n      } else if (selectedCondition.name === \"Daily Oral Hygiene (Brushing, Flossing, Rinse)\") {\n        if (phase === \"Daily Use\") {\n          patientProducts[phase]['1'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n          patientProducts[phase]['2'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n          patientProducts[phase]['3'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n          patientProducts[phase]['4'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n        }\n      } else {\n        // For any other condition not specifically mapped, use the default patterns\n        // Common pattern: Type 1-2 get base products, Type 3-4 may get additional products\n        phaseProducts.forEach(product => {\n          // If the product doesn't specify a patient type\n          if (!product.includes('Type')) {\n            patientProducts[phase]['1'].push(product);\n            patientProducts[phase]['2'].push(product);\n            patientProducts[phase]['3'].push(product);\n            patientProducts[phase]['4'].push(product);\n          }\n          // If it's marked for Type 3/4 only\n          else if (product.includes('Type 3/4 Only')) {\n            const baseProduct = product.replace(' (Type 3/4 Only)', '');\n            patientProducts[phase]['3'].push(baseProduct);\n            patientProducts[phase]['4'].push(baseProduct);\n          }\n        });\n      }\n    });\n    setPatientSpecificProducts(patientProducts);\n  }, [selectedCondition]);\n\n  // Filter products based on selected phase and patient type\n  useEffect(() => {\n    if (selectedCondition && activeTab && patientSpecificProducts[activeTab]) {\n      // If a specific patient type is selected, show that type's products\n      if (activePatientType !== 'All') {\n        setFilteredProducts(patientSpecificProducts[activeTab][activePatientType] || []);\n      } else {\n        // If 'All' is selected, show all products for this phase\n        setFilteredProducts(patientSpecificProducts[activeTab]['All'] || []);\n      }\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [selectedCondition, activeTab, activePatientType, patientSpecificProducts]);\n\n  // Extract unique categories for filter dropdown\n  const categories = ['All', ...new Set(conditions.map(condition => condition.category))];\n\n  // Extract unique DDS types for filter dropdown\n  const ddsTypes = ['All'];\n  conditions.forEach(condition => {\n    condition.dds.forEach(dds => {\n      if (!ddsTypes.includes(dds)) {\n        ddsTypes.push(dds);\n      }\n    });\n  });\n\n  // Get patient types from PATIENT_TYPES constant\n  const patientTypes = ['All', '1', '2', '3', '4'];\n\n  // Handle condition selection\n  const handleConditionSelect = condition => {\n    setSelectedCondition(condition);\n    setActiveTab(condition.phases[0]);\n    setActivePatientType('All'); // Reset patient type filter when changing condition\n  };\n\n  // Handle patient type selection for product filtering\n  const handlePatientTypeSelect = type => {\n    setActivePatientType(type);\n  };\n\n  // Handle product selection for modal\n  const handleProductSelect = product => {\n    setSelectedProduct({\n      name: product,\n      details: selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')]\n    });\n    setModalOpen(true);\n  };\n\n  // Determine if a phase has products for the selected condition\n  const hasProductsForPhase = phase => {\n    return selectedCondition && selectedCondition.products && selectedCondition.products[phase] && selectedCondition.products[phase].length > 0;\n  };\n\n  // Toggle diagnosis wizard\n  const toggleWizard = () => {\n    setWizardOpen(!wizardOpen);\n  };\n\n  // Toggle admin panel\n  const toggleAdmin = () => {\n    setAdminOpen(!adminOpen);\n  };\n\n  // Handle conditions update from admin panel\n  const handleConditionsUpdate = updatedConditions => {\n    setConditions(updatedConditions);\n\n    // If previously selected condition exists in updated data, keep it selected\n    if (selectedCondition) {\n      const updatedSelectedCondition = updatedConditions.find(c => c.name === selectedCondition.name);\n      if (updatedSelectedCondition) {\n        setSelectedCondition(updatedSelectedCondition);\n\n        // Ensure active tab is valid for updated condition\n        if (updatedSelectedCondition.phases && !updatedSelectedCondition.phases.includes(activeTab)) {\n          setActiveTab(updatedSelectedCondition.phases[0]);\n        }\n      } else {\n        // If selected condition no longer exists, select the first condition\n        if (updatedConditions.length > 0) {\n          setSelectedCondition(updatedConditions[0]);\n          setActiveTab(updatedConditions[0].phases[0]);\n        } else {\n          setSelectedCondition(null);\n          setActiveTab('');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Clinical Chart Tool for Dental Sales Reps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleWizard,\n            className: \"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n            children: [/*#__PURE__*/_jsxDEV(Stethoscope, {\n              size: 18,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), \"Diagnosis Wizard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleAdmin,\n            className: \"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\",\n            children: [/*#__PURE__*/_jsxDEV(Settings, {\n              size: 18,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), \"Admin\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category-filter\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Condition Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n              value: categoryFilter,\n              onValueChange: setCategoryFilter,\n              children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                id: \"category-filter\",\n                className: \"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                  children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                  className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                    className: \"p-1\",\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(Select.Item, {\n                      value: category,\n                      className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                      children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                        children: category\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 27\n                      }, this)\n                    }, category, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dds-filter\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"DDS Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n              value: ddsTypeFilter,\n              onValueChange: setDdsTypeFilter,\n              children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                id: \"dds-filter\",\n                className: \"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                  children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                  className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                    className: \"p-1\",\n                    children: ddsTypes.map(dds => /*#__PURE__*/_jsxDEV(Select.Item, {\n                      value: dds,\n                      className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                      children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                        children: dds\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 27\n                      }, this)\n                    }, dds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"patient-filter\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Patient Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n              value: patientTypeFilter,\n              onValueChange: setPatientTypeFilter,\n              children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                id: \"patient-filter\",\n                className: \"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                  children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                  className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                    className: \"p-1\",\n                    children: patientTypes.map(type => /*#__PURE__*/_jsxDEV(Select.Item, {\n                      value: type,\n                      className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                      children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                        children: type === 'All' ? 'All' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 27\n                      }, this)\n                    }, type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Search Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",\n                children: /*#__PURE__*/_jsxDEV(Search, {\n                  size: 18,\n                  className: \"text-gray-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"search\",\n                type: \"text\",\n                value: searchQuery,\n                onChange: e => setSearchQuery(e.target.value),\n                className: \"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                placeholder: \"Search conditions...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this), searchQuery && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"absolute inset-y-0 right-0 pr-3 flex items-center\",\n                onClick: () => setSearchQuery(''),\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 18,\n                  className: \"text-gray-400 hover:text-gray-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-6 lg:grid-cols-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-medium p-4 border-b\",\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), filteredConditions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 text-gray-500\",\n            children: \"No conditions match the selected filters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\",\n            children: filteredConditions.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: clsx(\"px-4 py-3 hover:bg-gray-50 cursor-pointer\", selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-50\" : \"\"),\n              onClick: () => handleConditionSelect(condition),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: condition.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: condition.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400 mt-1\",\n                children: [condition.dds.join(', '), \" | \", condition.patientType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this)]\n            }, condition.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-3\",\n          children: selectedCondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white shadow rounded-lg overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 border-b\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: selectedCondition.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500 mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: selectedCondition.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedCondition.dds.join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedCondition.patientType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this), selectedCondition.pitchPoints && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3 p-3 bg-blue-50 rounded-md text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-blue-800 mb-1\",\n                  children: \"Key Pitch Points:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-blue-700\",\n                  children: selectedCondition.pitchPoints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border-b p-4 bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap items-center gap-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-shrink-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-medium text-gray-600\",\n                    children: \"Show Recommendations For:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-grow\",\n                  children: /*#__PURE__*/_jsxDEV(Select.Root, {\n                    value: activePatientType,\n                    onValueChange: handlePatientTypeSelect,\n                    children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n                      className: \"flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(Filter, {\n                          size: 16,\n                          className: \"mr-2 text-gray-500\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 614,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Select.Value, {\n                          placeholder: \"Select Patient Type\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 615,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 613,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                        children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                          size: 18\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 617,\n                          columnNumber: 40\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 617,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n                      children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                        className: \"overflow-hidden bg-white rounded-md shadow-lg border\",\n                        children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                          className: \"p-1\",\n                          children: patientTypes.map(type => /*#__PURE__*/_jsxDEV(Select.Item, {\n                            value: type,\n                            className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",\n                            children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                              children: type === 'All' ? 'All Patient Types' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 628,\n                              columnNumber: 35\n                            }, this)\n                          }, type, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 623,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 621,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 620,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this), activePatientType !== 'All' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 text-sm text-blue-600 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Info, {\n                  size: 14,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 23\n                }, this), \"Showing specific recommendations for:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium ml-1\",\n                  children: `Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n              value: activeTab,\n              onValueChange: setActiveTab,\n              children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n                className: \"flex border-b divide-x divide-gray-200\",\n                children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n                  value: phase,\n                  className: clsx(\"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\", activeTab === phase ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700 hover:border-gray-300\"),\n                  children: [phase, \" Phase\", hasProductsForPhase(phase) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\",\n                    children: selectedCondition.products[phase].length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 27\n                  }, this)]\n                }, phase, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this), selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Content, {\n                value: phase,\n                className: \"p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium mb-3\",\n                  children: [phase, \" Phase - Recommended Products\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 23\n                }, this), filteredProducts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-4\",\n                  children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 border rounded-lg p-4 hover:bg-gray-100\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-start\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-md font-medium\",\n                        children: product\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 687,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleProductSelect(product),\n                        className: \"p-1 rounded-full hover:bg-gray-200\",\n                        title: \"View product details\",\n                        children: /*#__PURE__*/_jsxDEV(Info, {\n                          size: 18,\n                          className: \"text-blue-500\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 693,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 688,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 31\n                    }, this), selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-2 text-sm text-gray-600\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"font-medium\",\n                          children: \"Usage: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 699,\n                          columnNumber: 37\n                        }, this), selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')].usage]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 33\n                    }, this), product.includes('(Type 3/4 Only)') && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\",\n                        children: \"Recommended for Type 3/4 patients only\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 708,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 33\n                    }, this)]\n                  }, product, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 25\n                }, this) : activePatientType !== 'All' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 bg-gray-50 p-4 rounded-md border\",\n                  children: selectedCondition.name === 'Gingival Recession Surgery' && phase === 'Prep' && activePatientType === '1' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"No products recommended\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 720,\n                      columnNumber: 31\n                    }, this), \" for \", phase, \" phase with patient Type \", activePatientType, \".\", /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mt-2\",\n                      children: \"Based on clinical guidelines, no product is necessary for this specific case.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 721,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 719,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"No specific products are recommended for \", phase, \" phase with patient Type \", activePatientType, \".\", /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setActivePatientType('All'),\n                      className: \"ml-2 text-blue-600 hover:text-blue-800 underline\",\n                      children: \"Clear patient filter\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500\",\n                  children: \"No products recommended for this phase.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 25\n                }, this)]\n              }, phase, true, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white shadow rounded-lg p-8 text-center text-gray-500\",\n            children: \"Select a condition to view details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n      open: modalOpen,\n      onOpenChange: setModalOpen,\n      children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n        children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n          className: \"fixed inset-0 bg-black/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n          className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n            className: \"text-xl font-semibold text-gray-900 mb-2\",\n            children: selectedProduct === null || selectedProduct === void 0 ? void 0 : selectedProduct.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Description, {\n            className: \"text-sm text-gray-500 mb-4\",\n            children: \"Product information and recommendation details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), selectedProduct && selectedProduct.details && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-blue-800 mb-1\",\n                children: \"Usage Instructions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-blue-700\",\n                children: selectedProduct.details.usage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-green-800 mb-1\",\n                children: \"Clinical Rationale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-700\",\n                children: selectedProduct.details.rationale\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-purple-800 mb-1\",\n                children: \"Competitive Advantage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-purple-700\",\n                children: selectedProduct.details.competitive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-amber-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-amber-800 mb-1\",\n                children: \"Handling Objections\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-amber-700\",\n                children: selectedProduct.details.objection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 17\n            }, this), selectedProduct.details.factSheet && selectedProduct.details.factSheet !== '#' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: selectedProduct.details.factSheet,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n                children: \"View Fact Sheet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(Dialog.Close, {\n              asChild: true,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this), wizardOpen && /*#__PURE__*/_jsxDEV(DiagnosisWizard, {\n      conditions: conditions,\n      onClose: toggleWizard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 9\n    }, this), adminOpen && /*#__PURE__*/_jsxDEV(AdminPanel, {\n      conditions: conditions,\n      onConditionsUpdate: handleConditionsUpdate,\n      onClose: toggleAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n}\n_s(ClinicalChartMockup, \"0Cxn0zHjCnUq2XDzS5RAb3Y7lqY=\");\n_c = ClinicalChartMockup;\nexport default ClinicalChartMockup;\nvar _c;\n$RefreshReg$(_c, \"ClinicalChartMockup\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Search","X","ChevronDown","Info","Stethoscope","Settings","Filter","clsx","DiagnosisWizard","AdminPanel","conditionsDataImport","jsxDEV","_jsxDEV","PATIENT_TYPES","ClinicalChartMockup","_s","conditions","setConditions","filteredConditions","setFilteredConditions","selectedCondition","setSelectedCondition","categoryFilter","setCategoryFilter","ddsTypeFilter","setDdsTypeFilter","patientTypeFilter","setPatientTypeFilter","activePatientType","setActivePatientType","searchQuery","setSearchQuery","activeTab","setActiveTab","modalOpen","setModalOpen","selectedProduct","setSelectedProduct","wizardOpen","setWizardOpen","adminOpen","setAdminOpen","filteredProducts","setFilteredProducts","patientSpecificProducts","setPatientSpecificProducts","savedData","localStorage","getItem","parsedData","JSON","parse","length","phases","filtered","filter","condition","category","dds","includes","Array","isArray","patientType","name","toLowerCase","find","c","patientProducts","forEach","phase","products","phaseProducts","product","push","baseProduct","replace","categories","Set","map","ddsTypes","patientTypes","handleConditionSelect","handlePatientTypeSelect","type","handleProductSelect","details","productDetails","hasProductsForPhase","toggleWizard","toggleAdmin","handleConditionsUpdate","updatedConditions","updatedSelectedCondition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","htmlFor","Root","value","onValueChange","Trigger","id","Value","Icon","Portal","Content","Viewport","Item","ItemText","onChange","e","target","placeholder","join","pitchPoints","List","title","usage","open","onOpenChange","Overlay","Title","Description","rationale","competitive","objection","factSheet","href","rel","Close","asChild","onClose","onConditionsUpdate","_c","$RefreshReg$"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/ClinicalChartMockup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Search, X, ChevronDown, Info, Stethoscope, Settings, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DiagnosisWizard from './DiagnosisWizard';\nimport AdminPanel from './AdminPanel';\nimport conditionsDataImport from '../conditions_complete.json';\n\n// PatientTypes definition based on project documentation\nconst PATIENT_TYPES = {\n  'Type 1': 'Healthy',\n  'Type 2': 'Mild inflammation, moderate risk',\n  'Type 3': 'Smoker, diabetic, immunocompromised',\n  'Type 4': 'Periodontal disease, chronic illness, poor healing'\n};\n\nfunction ClinicalChartMockup() {\n  // State management\n  const [conditions, setConditions] = useState([]);\n  const [filteredConditions, setFilteredConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categoryFilter, setCategoryFilter] = useState('All');\n  const [ddsTypeFilter, setDdsTypeFilter] = useState('All');\n  const [patientTypeFilter, setPatientTypeFilter] = useState('All');\n  const [activePatientType, setActivePatientType] = useState('All'); // Active patient type for product filtering\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [wizardOpen, setWizardOpen] = useState(false);\n  const [adminOpen, setAdminOpen] = useState(false);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Store filtered products\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({}); // Store patient-specific product recommendations\n  \n\n  // Load conditions on component mount\n  useEffect(() => {\n    // Check if saved data exists in localStorage\n    const savedData = localStorage.getItem('conditions_data');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setConditions(parsedData);\n      setFilteredConditions(parsedData);\n      \n      // Set default selected condition if data exists\n      if (parsedData.length > 0) {\n        setSelectedCondition(parsedData[0]);\n        setActiveTab(parsedData[0].phases[0]);\n      }\n    } else {\n      // Use imported data if no saved data exists\n      setConditions(conditionsDataImport);\n      setFilteredConditions(conditionsDataImport);\n      \n      // Set default selected condition if data exists\n      if (conditionsDataImport.length > 0) {\n        setSelectedCondition(conditionsDataImport[0]);\n        setActiveTab(conditionsDataImport[0].phases[0]);\n      }\n    }\n  }, []);\n\n  // Filter conditions based on selected filters and search query\n  useEffect(() => {\n    let filtered = [...conditions];\n    \n    // Filter by category\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.category === categoryFilter);\n    }\n    \n    // Filter by DDS type\n    if (ddsTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.dds.includes(ddsTypeFilter));\n    }\n    \n    // Filter by patient type\n    if (patientTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => {\n        // Check if condition's patientType includes the selected patient type\n        // This assumes patientType can be a string like \"Types 1 to 4\" or an array\n        if (Array.isArray(condition.patientType)) {\n          return condition.patientType.includes(`Type ${patientTypeFilter}`);\n        } else {\n          return condition.patientType.includes(patientTypeFilter);\n        }\n      });\n    }\n    \n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(condition => \n        condition.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    setFilteredConditions(filtered);\n    \n    // Update selected condition if it's no longer in filtered results\n    if (filtered.length > 0 && (!selectedCondition || \n        !filtered.find(c => c.name === selectedCondition.name))) {\n      setSelectedCondition(filtered[0]);\n      setActiveTab(filtered[0].phases[0]);\n    }\n  }, [conditions, categoryFilter, ddsTypeFilter, patientTypeFilter, searchQuery, selectedCondition]);\n\n  // Generate patient-specific product recommendations when selectedCondition changes\n  useEffect(() => {\n    if (!selectedCondition) return;\n    \n    // Create a map of phase -> patientType -> products\n    const patientProducts = {};\n    \n    // Process each phase\n    selectedCondition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'All': [...(selectedCondition.products[phase] || [])], // Default 'All' includes all products\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Extract patient-specific products based on the Excel data pattern\n      const phaseProducts = selectedCondition.products[phase] || [];\n      \n      // Special case handling for different conditions\n      if (selectedCondition.name === \"Gingival Recession Surgery\") {\n        if (phase === \"Prep\") {\n          // Type 1 gets nothing (N/A in Excel)\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        } else if (phase === \"Acute\") {\n          // All types get Synvaza\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          // Types 3-4 get Synvaza + AO ProVantage Gel\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        } else if (phase === \"Maintenance\") {\n          // All types get the same\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      } \n      else if (selectedCondition.name === \"Scaling and Root Planing (SRP)\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      }\n      else if (selectedCondition.name === \"Oral Lichen Planus\") {\n        if (phase === \"Slight\" || phase === \"Moderate\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Severe\") {\n          patientProducts[phase]['1'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        }\n      }\n      else if (selectedCondition.name === \"Dry Mouth (Radiation/Chemo/Extreme Sensitivity)\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Synvaza\", \"AO ProVantage Gel\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      }\n      else if (selectedCondition.name === \"Laser Gingivectomy\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      }\n      else if (selectedCondition.name === \"Gingivitis\" || \n               selectedCondition.name === \"Denture Stomatitis\" ||\n               selectedCondition.name === \"Nicotine Stomatitis\") {\n        // These all follow the same pattern with AO ProVantage Gel for all patient types\n        patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n        patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n        patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n        patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n      }\n      else if (selectedCondition.name === \"Implant Placement\" || \n               selectedCondition.name === \"Soft Tissue Grafting\") {\n        if (phase === \"Prep\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        } else if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      }\n      else if (selectedCondition.name === \"Extractions\" || \n               selectedCondition.name === \"Laser Perio Debridement\") {\n        if (phase === \"Acute\") {\n          patientProducts[phase]['1'] = [\"Synvaza\"];\n          patientProducts[phase]['2'] = [\"Synvaza\"];\n          patientProducts[phase]['3'] = [\"Synvaza\"];\n          patientProducts[phase]['4'] = [\"Synvaza\"];\n        } else if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\"];\n        }\n      }\n      else if (selectedCondition.name === \"Periodontal Disease\") {\n        if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\", \"PerioProtect Tray (H2O2)\"];\n        }\n      }\n      else if (selectedCondition.name === \"Xerostomia (Dry Mouth)\") {\n        if (phase === \"Slight\") {\n          patientProducts[phase]['1'] = [\"AO ProRinse Hydrating\"];\n          patientProducts[phase]['2'] = [\"AO ProRinse Hydrating\"];\n          patientProducts[phase]['3'] = [\"AO ProRinse Hydrating\"];\n          patientProducts[phase]['4'] = [\"AO ProRinse Hydrating\"];\n        } else if (phase === \"Mild\" || phase === \"Moderate\") {\n          patientProducts[phase]['1'] = [\"Moisyn\"];\n          patientProducts[phase]['2'] = [\"Moisyn\"];\n          patientProducts[phase]['3'] = [\"Moisyn\"];\n          patientProducts[phase]['4'] = [\"Moisyn\"];\n        } else if (phase === \"Severe\") {\n          patientProducts[phase]['1'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['2'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['3'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n          patientProducts[phase]['4'] = [\"Moisyn\", \"AO ProVantage Gel\"];\n        }\n      }\n      else if (selectedCondition.name === \"Tongue Disorders (Geographic, Black Hairy)\") {\n        if (phase === \"Maintenance\") {\n          patientProducts[phase]['1'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n          patientProducts[phase]['2'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n          patientProducts[phase]['3'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n          patientProducts[phase]['4'] = [\"AO ProVantage Gel\", \"Synvaza\"];\n        }\n      }\n      else if (selectedCondition.name === \"Daily Oral Hygiene (Brushing, Flossing, Rinse)\") {\n        if (phase === \"Daily Use\") {\n          patientProducts[phase]['1'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n          patientProducts[phase]['2'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n          patientProducts[phase]['3'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n          patientProducts[phase]['4'] = [\"AO ProToothpaste + AO ProRinse (patient choice)\"];\n        }\n      }\n      else {\n        // For any other condition not specifically mapped, use the default patterns\n        // Common pattern: Type 1-2 get base products, Type 3-4 may get additional products\n        phaseProducts.forEach(product => {\n          // If the product doesn't specify a patient type\n          if (!product.includes('Type')) {\n            patientProducts[phase]['1'].push(product);\n            patientProducts[phase]['2'].push(product);\n            patientProducts[phase]['3'].push(product);\n            patientProducts[phase]['4'].push(product);\n          }\n          // If it's marked for Type 3/4 only\n          else if (product.includes('Type 3/4 Only')) {\n            const baseProduct = product.replace(' (Type 3/4 Only)', '');\n            patientProducts[phase]['3'].push(baseProduct);\n            patientProducts[phase]['4'].push(baseProduct);\n          }\n        });\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  }, [selectedCondition]);\n\n  // Filter products based on selected phase and patient type\n  useEffect(() => {\n    if (selectedCondition && activeTab && patientSpecificProducts[activeTab]) {\n      // If a specific patient type is selected, show that type's products\n      if (activePatientType !== 'All') {\n        setFilteredProducts(patientSpecificProducts[activeTab][activePatientType] || []);\n      } else {\n        // If 'All' is selected, show all products for this phase\n        setFilteredProducts(patientSpecificProducts[activeTab]['All'] || []);\n      }\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [selectedCondition, activeTab, activePatientType, patientSpecificProducts]);\n\n  // Extract unique categories for filter dropdown\n  const categories = ['All', ...new Set(conditions.map(condition => condition.category))];\n  \n  // Extract unique DDS types for filter dropdown\n  const ddsTypes = ['All'];\n  conditions.forEach(condition => {\n    condition.dds.forEach(dds => {\n      if (!ddsTypes.includes(dds)) {\n        ddsTypes.push(dds);\n      }\n    });\n  });\n\n  // Get patient types from PATIENT_TYPES constant\n  const patientTypes = ['All', '1', '2', '3', '4'];\n\n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActiveTab(condition.phases[0]);\n    setActivePatientType('All'); // Reset patient type filter when changing condition\n  };\n\n  // Handle patient type selection for product filtering\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n\n  // Handle product selection for modal\n  const handleProductSelect = (product) => {\n    setSelectedProduct({\n      name: product,\n      details: selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')]\n    });\n    setModalOpen(true);\n  };\n\n  // Determine if a phase has products for the selected condition\n  const hasProductsForPhase = (phase) => {\n    return selectedCondition && \n           selectedCondition.products && \n           selectedCondition.products[phase] && \n           selectedCondition.products[phase].length > 0;\n  };\n\n  // Toggle diagnosis wizard\n  const toggleWizard = () => {\n    setWizardOpen(!wizardOpen);\n  };\n  \n  // Toggle admin panel\n  const toggleAdmin = () => {\n    setAdminOpen(!adminOpen);\n  };\n  \n  // Handle conditions update from admin panel\n  const handleConditionsUpdate = (updatedConditions) => {\n    setConditions(updatedConditions);\n    \n    // If previously selected condition exists in updated data, keep it selected\n    if (selectedCondition) {\n      const updatedSelectedCondition = updatedConditions.find(c => c.name === selectedCondition.name);\n      if (updatedSelectedCondition) {\n        setSelectedCondition(updatedSelectedCondition);\n        \n        // Ensure active tab is valid for updated condition\n        if (updatedSelectedCondition.phases && !updatedSelectedCondition.phases.includes(activeTab)) {\n          setActiveTab(updatedSelectedCondition.phases[0]);\n        }\n      } else {\n        // If selected condition no longer exists, select the first condition\n        if (updatedConditions.length > 0) {\n          setSelectedCondition(updatedConditions[0]);\n          setActiveTab(updatedConditions[0].phases[0]);\n        } else {\n          setSelectedCondition(null);\n          setActiveTab('');\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Clinical Chart Tool for Dental Sales Reps</h1>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={toggleWizard}\n              className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <Stethoscope size={18} className=\"mr-2\" />\n              Diagnosis Wizard\n            </button>\n            <button\n              onClick={toggleAdmin}\n              className=\"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n            >\n              <Settings size={18} className=\"mr-2\" />\n              Admin\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters Section */}\n        <div className=\"bg-white shadow rounded-lg p-4 mb-6\">\n          <h2 className=\"text-lg font-medium mb-4\">Filters</h2>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            {/* Category Filter */}\n            <div>\n              <label htmlFor=\"category-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Condition Category\n              </label>\n              <Select.Root value={categoryFilter} onValueChange={setCategoryFilter}>\n                <Select.Trigger id=\"category-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {categories.map((category) => (\n                        <Select.Item\n                          key={category}\n                          value={category}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{category}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* DDS Type Filter */}\n            <div>\n              <label htmlFor=\"dds-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                DDS Type\n              </label>\n              <Select.Root value={ddsTypeFilter} onValueChange={setDdsTypeFilter}>\n                <Select.Trigger id=\"dds-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {ddsTypes.map((dds) => (\n                        <Select.Item\n                          key={dds}\n                          value={dds}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{dds}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Patient Type Filter */}\n            <div>\n              <label htmlFor=\"patient-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Patient Type\n              </label>\n              <Select.Root value={patientTypeFilter} onValueChange={setPatientTypeFilter}>\n                <Select.Trigger id=\"patient-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {patientTypes.map((type) => (\n                        <Select.Item\n                          key={type}\n                          value={type}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>\n                            {type === 'All' ? 'All' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                          </Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Search */}\n            <div>\n              <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Search Condition\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search size={18} className=\"text-gray-400\" />\n                </div>\n                <input\n                  id=\"search\"\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  placeholder=\"Search conditions...\"\n                />\n                {searchQuery && (\n                  <button\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setSearchQuery('')}\n                  >\n                    <X size={18} className=\"text-gray-400 hover:text-gray-600\" />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n          {/* Conditions List */}\n          <div className=\"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\">\n            <h2 className=\"text-lg font-medium p-4 border-b\">Conditions</h2>\n            {filteredConditions.length === 0 ? (\n              <div className=\"p-4 text-gray-500\">No conditions match the selected filters.</div>\n            ) : (\n              <ul className=\"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\">\n                {filteredConditions.map((condition) => (\n                  <li \n                    key={condition.name}\n                    className={clsx(\n                      \"px-4 py-3 hover:bg-gray-50 cursor-pointer\",\n                      selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-50\" : \"\"\n                    )}\n                    onClick={() => handleConditionSelect(condition)}\n                  >\n                    <div className=\"font-medium\">{condition.name}</div>\n                    <div className=\"text-sm text-gray-500\">{condition.category}</div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {condition.dds.join(', ')} | {condition.patientType}\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n\n          {/* Selected Condition Details */}\n          <div className=\"lg:col-span-3\">\n            {selectedCondition ? (\n              <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n                <div className=\"p-4 border-b\">\n                  <h2 className=\"text-xl font-semibold\">{selectedCondition.name}</h2>\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    <span className=\"mr-2\">{selectedCondition.category}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.dds.join(', ')}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.patientType}</span>\n                  </div>\n                  {selectedCondition.pitchPoints && (\n                    <div className=\"mt-3 p-3 bg-blue-50 rounded-md text-sm\">\n                      <div className=\"font-medium text-blue-800 mb-1\">Key Pitch Points:</div>\n                      <div className=\"text-blue-700\">{selectedCondition.pitchPoints}</div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Patient Type Filter for Products */}\n                <div className=\"border-b p-4 bg-gray-50\">\n                  <div className=\"flex flex-wrap items-center gap-4\">\n                    <div className=\"flex-shrink-0\">\n                      <span className=\"text-sm font-medium text-gray-600\">Show Recommendations For:</span>\n                    </div>\n                    \n                    {/* Patient Type Selection */}\n                    <div className=\"flex-grow\">\n                      <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n                        <Select.Trigger className=\"flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                          <div className=\"flex items-center\">\n                            <Filter size={16} className=\"mr-2 text-gray-500\" />\n                            <Select.Value placeholder=\"Select Patient Type\" />\n                          </div>\n                          <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                        </Select.Trigger>\n                        <Select.Portal>\n                          <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                            <Select.Viewport className=\"p-1\">\n                              {patientTypes.map((type) => (\n                                <Select.Item\n                                  key={type}\n                                  value={type}\n                                  className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                                >\n                                  <Select.ItemText>\n                                    {type === 'All' ? 'All Patient Types' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                                  </Select.ItemText>\n                                </Select.Item>\n                              ))}\n                            </Select.Viewport>\n                          </Select.Content>\n                        </Select.Portal>\n                      </Select.Root>\n                    </div>\n                  </div>\n                  \n                  {activePatientType !== 'All' && (\n                    <div className=\"mt-2 text-sm text-blue-600 flex items-center\">\n                      <Info size={14} className=\"mr-1\" />\n                      Showing specific recommendations for: \n                      <span className=\"font-medium ml-1\">\n                        {`Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`}\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                {/* Treatment Phases Tabs */}\n                <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n                  <Tabs.List className=\"flex border-b divide-x divide-gray-200\">\n                    {selectedCondition.phases.map((phase) => (\n                      <Tabs.Trigger\n                        key={phase}\n                        value={phase}\n                        className={clsx(\n                          \"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\",\n                          activeTab === phase \n                            ? \"text-blue-600 border-b-2 border-blue-600\"\n                            : \"text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                        )}\n                      >\n                        {phase} Phase\n                        {hasProductsForPhase(phase) && (\n                          <span className=\"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\">\n                            {selectedCondition.products[phase].length}\n                          </span>\n                        )}\n                      </Tabs.Trigger>\n                    ))}\n                  </Tabs.List>\n\n                  {selectedCondition.phases.map((phase) => (\n                    <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                      <h3 className=\"text-lg font-medium mb-3\">{phase} Phase - Recommended Products</h3>\n                      \n                      {filteredProducts.length > 0 ? (\n                        <div className=\"space-y-4\">\n                          {filteredProducts.map((product) => (\n                            <div \n                              key={product}\n                              className=\"bg-gray-50 border rounded-lg p-4 hover:bg-gray-100\"\n                            >\n                              <div className=\"flex justify-between items-start\">\n                                <h4 className=\"text-md font-medium\">{product}</h4>\n                                <button\n                                  onClick={() => handleProductSelect(product)}\n                                  className=\"p-1 rounded-full hover:bg-gray-200\"\n                                  title=\"View product details\"\n                                >\n                                  <Info size={18} className=\"text-blue-500\" />\n                                </button>\n                              </div>\n                              {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')] && (\n                                <div className=\"mt-2 text-sm text-gray-600\">\n                                  <div>\n                                    <span className=\"font-medium\">Usage: </span>\n                                    {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')].usage}\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {/* Tag to show this is specific for Type 3/4 patients */}\n                              {product.includes('(Type 3/4 Only)') && (\n                                <div className=\"mt-2\">\n                                  <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\">\n                                    Recommended for Type 3/4 patients only\n                                  </span>\n                                </div>\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                      ) : activePatientType !== 'All' ? (\n                        <div className=\"text-gray-500 bg-gray-50 p-4 rounded-md border\">\n                          {selectedCondition.name === 'Gingival Recession Surgery' && phase === 'Prep' && activePatientType === '1' ? (\n                            <div>\n                              <strong>No products recommended</strong> for {phase} phase with patient Type {activePatientType}.\n                              <p className=\"mt-2\">Based on clinical guidelines, no product is necessary for this specific case.</p>\n                            </div>\n                          ) : (\n                            <div>\n                              No specific products are recommended for {phase} phase with patient Type {activePatientType}.\n                              <button \n                                onClick={() => setActivePatientType('All')}\n                                className=\"ml-2 text-blue-600 hover:text-blue-800 underline\"\n                              >\n                                Clear patient filter\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"text-gray-500\">No products recommended for this phase.</div>\n                      )}\n                    </Tabs.Content>\n                  ))}\n                </Tabs.Root>\n              </div>\n            ) : (\n              <div className=\"bg-white shadow rounded-lg p-8 text-center text-gray-500\">\n                Select a condition to view details\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n\n      {/* Product Details Modal */}\n      <Dialog.Root open={modalOpen} onOpenChange={setModalOpen}>\n        <Dialog.Portal>\n          <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\n          <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\">\n            <Dialog.Title className=\"text-xl font-semibold text-gray-900 mb-2\">\n              {selectedProduct?.name}\n            </Dialog.Title>\n            <Dialog.Description className=\"text-sm text-gray-500 mb-4\">\n              Product information and recommendation details\n            </Dialog.Description>\n            \n            {selectedProduct && selectedProduct.details && (\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-800 mb-1\">Usage Instructions</h4>\n                  <p className=\"text-blue-700\">{selectedProduct.details.usage}</p>\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-green-800 mb-1\">Clinical Rationale</h4>\n                  <p className=\"text-green-700\">{selectedProduct.details.rationale}</p>\n                </div>\n                \n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-purple-800 mb-1\">Competitive Advantage</h4>\n                  <p className=\"text-purple-700\">{selectedProduct.details.competitive}</p>\n                </div>\n                \n                <div className=\"bg-amber-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-amber-800 mb-1\">Handling Objections</h4>\n                  <p className=\"text-amber-700\">{selectedProduct.details.objection}</p>\n                </div>\n                \n                {selectedProduct.details.factSheet && selectedProduct.details.factSheet !== '#' && (\n                  <div className=\"mt-4\">\n                    <a \n                      href={selectedProduct.details.factSheet}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      View Fact Sheet\n                    </a>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            <div className=\"mt-6 flex justify-end\">\n              <Dialog.Close asChild>\n                <button\n                  className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                >\n                  Close\n                </button>\n              </Dialog.Close>\n            </div>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n\n      {/* Diagnosis Wizard */}\n      {wizardOpen && (\n        <DiagnosisWizard \n          conditions={conditions} \n          onClose={toggleWizard} \n        />\n      )}\n      \n      {/* Admin Panel */}\n      {adminOpen && (\n        <AdminPanel \n          conditions={conditions}\n          onConditionsUpdate={handleConditionsUpdate}\n          onClose={toggleAdmin}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ClinicalChartMockup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}