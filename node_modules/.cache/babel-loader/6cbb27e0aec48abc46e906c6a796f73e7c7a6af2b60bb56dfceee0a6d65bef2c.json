{"ast":null,"code":"import React,{useState,useEffect}from'react';import*as Tabs from'@radix-ui/react-tabs';import*as Dialog from'@radix-ui/react-dialog';import*as Select from'@radix-ui/react-select';import{Search,X,ChevronDown,Info,Stethoscope,Settings,Filter,ChevronRight,BookOpen,ExternalLink,FileText}from'lucide-react';import clsx from'clsx';import DiagnosisWizard from'./DiagnosisWizard';import AdminPanel from'./AdminPanel';import conditionsDataImport from'../conditions_complete.json';// PatientTypes definition based on project documentation\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PATIENT_TYPES={'Type 1':'Healthy','Type 2':'Mild inflammation, moderate risk','Type 3':'Smoker, diabetic, immunocompromised','Type 4':'Periodontal disease, chronic illness, poor healing'};function ClinicalChartMockup(){// State management\nconst[conditions,setConditions]=useState([]);const[filteredConditions,setFilteredConditions]=useState([]);const[selectedCondition,setSelectedCondition]=useState(null);const[categoryFilter,setCategoryFilter]=useState('All');const[ddsTypeFilter,setDdsTypeFilter]=useState('All');const[patientTypeFilter,setPatientTypeFilter]=useState('All');const[activePatientType,setActivePatientType]=useState('All');// Active patient type for product filtering\nconst[searchQuery,setSearchQuery]=useState('');const[activeTab,setActiveTab]=useState('');const[modalOpen,setModalOpen]=useState(false);const[selectedProduct,setSelectedProduct]=useState(null);const[wizardOpen,setWizardOpen]=useState(false);const[adminOpen,setAdminOpen]=useState(false);const[researchModalOpen,setResearchModalOpen]=useState(false);const[filteredProducts,setFilteredProducts]=useState([]);// Store filtered products\nconst[patientSpecificProducts,setPatientSpecificProducts]=useState({});// Store patient-specific product recommendations\nconst[expandedSections,setExpandedSections]=useState({pitchPoints:false,competitiveAdvantage:false,handlingObjections:false});// Load conditions on component mount\nuseEffect(()=>{// Check if saved data exists in localStorage\nconst savedData=localStorage.getItem('conditions_data');if(savedData){const parsedData=JSON.parse(savedData);setConditions(parsedData);setFilteredConditions(parsedData);// Set default selected condition if data exists\nif(parsedData.length>0){setSelectedCondition(parsedData[0]);setActiveTab(parsedData[0].phases[0]);}}else{// Use imported data if no saved data exists\nsetConditions(conditionsDataImport);setFilteredConditions(conditionsDataImport);// Set default selected condition if data exists\nif(conditionsDataImport.length>0){setSelectedCondition(conditionsDataImport[0]);setActiveTab(conditionsDataImport[0].phases[0]);}}},[]);// Filter conditions based on selected filters and search query\nuseEffect(()=>{let filtered=[...conditions];// Filter by category\nif(categoryFilter!=='All'){filtered=filtered.filter(condition=>condition.category===categoryFilter);}// Filter by DDS type\nif(ddsTypeFilter!=='All'){filtered=filtered.filter(condition=>condition.dds.includes(ddsTypeFilter));}// Filter by patient type\nif(patientTypeFilter!=='All'){filtered=filtered.filter(condition=>{// Check if condition's patientType includes the selected patient type\n// This assumes patientType can be a string like \"Types 1 to 4\" or an array\nif(Array.isArray(condition.patientType)){return condition.patientType.includes(`Type ${patientTypeFilter}`);}else{return condition.patientType.includes(patientTypeFilter);}});}// Filter by search query\nif(searchQuery){filtered=filtered.filter(condition=>condition.name.toLowerCase().includes(searchQuery.toLowerCase()));}setFilteredConditions(filtered);// Update selected condition if it's no longer in filtered results\nif(filtered.length>0&&(!selectedCondition||!filtered.find(c=>c.name===selectedCondition.name))){setSelectedCondition(filtered[0]);setActiveTab(filtered[0].phases[0]);}},[conditions,categoryFilter,ddsTypeFilter,patientTypeFilter,searchQuery,selectedCondition]);// Generate patient-specific product recommendations when selectedCondition changes\nuseEffect(()=>{if(!selectedCondition)return;// Create a map of phase -> patientType -> products\nlet patientProducts={};// Check if condition has patientSpecificConfig from admin panel\nif(selectedCondition.patientSpecificConfig){// Use the configuration directly\npatientProducts=JSON.parse(JSON.stringify(selectedCondition.patientSpecificConfig));}else{// Fall back to the old method of inferring patient-specific products\n// Process each phase\nselectedCondition.phases.forEach(phase=>{patientProducts[phase]={'All':[...(selectedCondition.products[phase]||[])],// Default 'All' includes all products\n'1':[],'2':[],'3':[],'4':[]};// Extract patient-specific products from the condition's products\nconst phaseProducts=selectedCondition.products[phase]||[];// Process each product in this phase\nphaseProducts.forEach(product=>{// Handle Type 3/4 Only products\nif(product.includes('(Type 3/4 Only)')){const baseProduct=product.replace(' (Type 3/4 Only)','');patientProducts[phase]['3'].push(baseProduct);patientProducts[phase]['4'].push(baseProduct);}// Regular products apply to all patient types\nelse{patientProducts[phase]['1'].push(product);patientProducts[phase]['2'].push(product);patientProducts[phase]['3'].push(product);patientProducts[phase]['4'].push(product);}});});}setPatientSpecificProducts(patientProducts);},[selectedCondition]);// Filter products based on selected phase and patient type\nuseEffect(()=>{if(selectedCondition&&activeTab&&patientSpecificProducts[activeTab]){// If a specific patient type is selected, show that type's products\nif(activePatientType!=='All'){setFilteredProducts(patientSpecificProducts[activeTab][activePatientType]||[]);}else{// If 'All' is selected, show all products for this phase\nsetFilteredProducts(patientSpecificProducts[activeTab]['All']||[]);}}else{setFilteredProducts([]);}},[selectedCondition,activeTab,activePatientType,patientSpecificProducts]);// Extract unique categories for filter dropdown\nconst categories=['All',...new Set(conditions.map(condition=>condition.category))];// Extract unique DDS types for filter dropdown\nconst ddsTypes=['All'];conditions.forEach(condition=>{condition.dds.forEach(dds=>{if(!ddsTypes.includes(dds)){ddsTypes.push(dds);}});});// Get patient types from PATIENT_TYPES constant\nconst patientTypes=['All','1','2','3','4'];// Handle condition selection\nconst handleConditionSelect=condition=>{setSelectedCondition(condition);setActiveTab(condition.phases[0]);setActivePatientType('All');// Reset patient type filter when changing condition\n};// Handle patient type selection for product filtering\nconst handlePatientTypeSelect=type=>{setActivePatientType(type);};// Handle product selection for modal\nconst handleProductSelect=product=>{setSelectedProduct({name:product,details:selectedCondition.productDetails[product.replace(' (Type 3/4 Only)','')]});setModalOpen(true);};// Determine if a phase has products for the selected condition\nconst hasProductsForPhase=phase=>{return selectedCondition&&selectedCondition.products&&selectedCondition.products[phase]&&selectedCondition.products[phase].length>0;};// Toggle diagnosis wizard\nconst toggleWizard=()=>{setWizardOpen(!wizardOpen);};// Toggle admin panel\nconst toggleAdmin=()=>{setAdminOpen(!adminOpen);};// Handle conditions update from admin panel\nconst handleConditionsUpdate=updatedConditions=>{setConditions(updatedConditions);// If previously selected condition exists in updated data, keep it selected\nif(selectedCondition){const updatedSelectedCondition=updatedConditions.find(c=>c.name===selectedCondition.name);if(updatedSelectedCondition){setSelectedCondition(updatedSelectedCondition);// Ensure active tab is valid for updated condition\nif(updatedSelectedCondition.phases&&!updatedSelectedCondition.phases.includes(activeTab)){setActiveTab(updatedSelectedCondition.phases[0]);}}else{// If selected condition no longer exists, select the first condition\nif(updatedConditions.length>0){setSelectedCondition(updatedConditions[0]);setActiveTab(updatedConditions[0].phases[0]);}else{setSelectedCondition(null);setActiveTab('');}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white shadow-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Clinical Chart Tool for Dental Sales Reps\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:toggleWizard,className:\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",children:[/*#__PURE__*/_jsx(Stethoscope,{size:18,className:\"mr-2\"}),\"Diagnosis Wizard\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:toggleAdmin,className:\"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\",children:[/*#__PURE__*/_jsx(Settings,{size:18,className:\"mr-2\"}),\"Admin\"]})]})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-4 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium mb-4\",children:\"Filters\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category-filter\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Condition Category\"}),/*#__PURE__*/_jsxs(Select.Root,{value:categoryFilter,onValueChange:setCategoryFilter,children:[/*#__PURE__*/_jsxs(Select.Trigger,{id:\"category-filter\",className:\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:categories.map(category=>/*#__PURE__*/_jsx(Select.Item,{value:category,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:category})},category))})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dds-filter\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"DDS Type\"}),/*#__PURE__*/_jsxs(Select.Root,{value:ddsTypeFilter,onValueChange:setDdsTypeFilter,children:[/*#__PURE__*/_jsxs(Select.Trigger,{id:\"dds-filter\",className:\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:ddsTypes.map(dds=>/*#__PURE__*/_jsx(Select.Item,{value:dds,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:dds})},dds))})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"patient-filter\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Patient Type\"}),/*#__PURE__*/_jsxs(Select.Root,{value:patientTypeFilter,onValueChange:setPatientTypeFilter,children:[/*#__PURE__*/_jsxs(Select.Trigger,{id:\"patient-filter\",className:\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:patientTypes.map(type=>/*#__PURE__*/_jsx(Select.Item,{value:type,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:type==='All'?'All':`Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`})},type))})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"search\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Search Condition\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",children:/*#__PURE__*/_jsx(Search,{size:18,className:\"text-gray-400\"})}),/*#__PURE__*/_jsx(\"input\",{id:\"search\",type:\"text\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),className:\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\",placeholder:\"Search conditions...\"}),searchQuery&&/*#__PURE__*/_jsx(\"button\",{className:\"absolute inset-y-0 right-0 pr-3 flex items-center\",onClick:()=>setSearchQuery(''),children:/*#__PURE__*/_jsx(X,{size:18,className:\"text-gray-400 hover:text-gray-600\"})})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-6 lg:grid-cols-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium p-4 border-b\",children:\"Conditions\"}),filteredConditions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"p-4 text-gray-500\",children:\"No conditions match the selected filters.\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\",children:filteredConditions.map(condition=>/*#__PURE__*/_jsxs(\"li\",{className:clsx(\"px-4 py-3 hover:bg-gray-50 cursor-pointer\",selectedCondition&&selectedCondition.name===condition.name?\"bg-blue-50\":\"\"),onClick:()=>handleConditionSelect(condition),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:condition.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:condition.category}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[condition.dds.join(', '),\" | \",condition.patientType]})]},condition.name))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-3\",children:selectedCondition?/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold\",children:selectedCondition.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:selectedCondition.category}),/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"|\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedCondition.dds.join(', ')}),/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"|\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedCondition.patientType})]}),selectedCondition.pitchPoints&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.pitchPoints?'bg-blue-100':'bg-blue-50 hover:bg-blue-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,pitchPoints:!prev.pitchPoints})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-blue-800\",children:\"Key Pitch Points\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-600\",children:expandedSections.pitchPoints?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.pitchPoints&&/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-700 mt-2\",children:selectedCondition.pitchPoints})]}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.competitiveAdvantage?'bg-purple-100':'bg-purple-50 hover:bg-purple-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,competitiveAdvantage:!prev.competitiveAdvantage})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-purple-800\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-purple-600\",children:expandedSections.competitiveAdvantage?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.competitiveAdvantage&&/*#__PURE__*/_jsx(\"div\",{className:\"text-purple-700 mt-2\",children:selectedCondition.competitiveAdvantage||'No competitive advantage information available.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.handlingObjections?'bg-amber-100':'bg-amber-50 hover:bg-amber-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,handlingObjections:!prev.handlingObjections})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-amber-800\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-amber-600\",children:expandedSections.handlingObjections?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.handlingObjections&&/*#__PURE__*/_jsx(\"div\",{className:\"text-amber-700 mt-2\",children:selectedCondition.handlingObjections||'No objection handling information available.'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-b p-4 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap items-center gap-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-600\",children:\"Show Recommendations For:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow\",children:/*#__PURE__*/_jsxs(Select.Root,{value:activePatientType,onValueChange:handlePatientTypeSelect,children:[/*#__PURE__*/_jsxs(Select.Trigger,{className:\"flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(Filter,{size:16,className:\"mr-2 text-gray-500\"}),/*#__PURE__*/_jsx(Select.Value,{placeholder:\"Select Patient Type\"})]}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:patientTypes.map(type=>/*#__PURE__*/_jsx(Select.Item,{value:type,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:type==='All'?'All Patient Types':`Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`})},type))})})})]})})]}),activePatientType!=='All'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-sm text-blue-600 flex items-center\",children:[/*#__PURE__*/_jsx(Info,{size:14,className:\"mr-1\"}),\"Showing specific recommendations for:\",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium ml-1\",children:`Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`})]})]}),/*#__PURE__*/_jsxs(Tabs.Root,{value:activeTab,onValueChange:setActiveTab,children:[/*#__PURE__*/_jsx(Tabs.List,{className:\"flex border-b divide-x divide-gray-200\",children:selectedCondition.phases.map(phase=>/*#__PURE__*/_jsxs(Tabs.Trigger,{value:phase,className:clsx(\"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\",activeTab===phase?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700 hover:border-gray-300\"),children:[phase,\" Phase\",hasProductsForPhase(phase)&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\",children:selectedCondition.products[phase].length})]},phase))}),selectedCondition.phases.map(phase=>/*#__PURE__*/_jsxs(Tabs.Content,{value:phase,className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-medium mb-3\",children:[phase,\" Phase - Recommended Products\"]}),filteredProducts.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:filteredProducts.map(product=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 border rounded-lg p-4 hover:bg-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-medium\",children:product}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleProductSelect(product),className:\"p-1 rounded-full hover:bg-gray-200\",title:\"View product details\",children:/*#__PURE__*/_jsx(Info,{size:18,className:\"text-blue-500\"})})]}),selectedCondition.productDetails[product.replace(' (Type 3/4 Only)','')]&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-sm text-gray-600\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Usage: \"}),selectedCondition.productDetails[product.replace(' (Type 3/4 Only)','')].usage]})}),product.includes('(Type 3/4 Only)')&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\",children:\"Recommended for Type 3/4 patients only\"})})]},product))}):activePatientType!=='All'?/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 bg-gray-50 p-4 rounded-md border\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"No products recommended\"}),\" for \",phase,\" phase with patient Type \",activePatientType,\".\",/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Based on clinical guidelines, no product is necessary for this specific case.\"})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500\",children:\"No products recommended for this phase.\"})]},phase))]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg p-8 text-center text-gray-500\",children:\"Select a condition to view details\"})})]})]}),/*#__PURE__*/_jsx(Dialog.Root,{open:modalOpen,onOpenChange:setModalOpen,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsx(Dialog.Title,{className:\"text-xl font-semibold text-gray-900 mb-2\",children:selectedProduct===null||selectedProduct===void 0?void 0:selectedProduct.name}),/*#__PURE__*/_jsx(Dialog.Description,{className:\"text-sm text-gray-500 mb-4\",children:\"Product information and recommendation details\"}),selectedProduct&&selectedProduct.details&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-800 mb-1\",children:\"Usage Instructions\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-700\",children:selectedProduct.details.usage})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-green-800 mb-1\",children:\"Clinical Rationale\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700\",children:selectedProduct.details.rationale})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-purple-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-purple-800 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-purple-700\",children:selectedProduct.details.competitive})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-amber-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-amber-800 mb-1\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-amber-700\",children:selectedProduct.details.objection})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setResearchModalOpen(true),className:\"flex-1 py-3 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(BookOpen,{size:20,className:\"mr-2\"}),\"View Supporting Research\",selectedProduct.details.researchArticles&&selectedProduct.details.researchArticles.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 bg-white text-indigo-700 px-2 py-0.5 rounded-full text-xs font-bold\",children:selectedProduct.details.researchArticles.length})]}),selectedProduct.details.factSheet&&selectedProduct.details.factSheet!=='#'&&/*#__PURE__*/_jsxs(\"a\",{href:selectedProduct.details.factSheet,target:\"_blank\",rel:\"noopener noreferrer\",className:\"flex-1 py-3 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(FileText,{size:20,className:\"mr-2\"}),\"View Fact Sheet\"]})]})]}),/*#__PURE__*/_jsx(Dialog.Root,{open:researchModalOpen,onOpenChange:setResearchModalOpen,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-3xl w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsxs(Dialog.Title,{className:\"text-xl font-semibold text-gray-900 flex items-center\",children:[/*#__PURE__*/_jsx(FileText,{size:24,className:\"mr-2 text-indigo-600\"}),\"Supporting Research for \",selectedProduct===null||selectedProduct===void 0?void 0:selectedProduct.name]}),/*#__PURE__*/_jsx(Dialog.Description,{className:\"text-sm text-gray-500 mt-1 mb-4\",children:\"Scientific articles and studies supporting this product's effectiveness\"}),selectedProduct&&selectedProduct.details&&selectedProduct.details.researchArticles&&selectedProduct.details.researchArticles.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:selectedProduct.details.researchArticles.map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-b pb-4 last:border-b-0 last:pb-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-lg text-indigo-600\",children:article.url?/*#__PURE__*/_jsxs(\"a\",{href:article.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"hover:underline flex items-start\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"mr-2\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"span\",{children:article.title})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"mr-2\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"span\",{children:article.title})]})}),article.author&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-1 pl-6\",children:article.author}),article.abstract&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pl-6\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700\",children:article.abstract})}),article.url&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pl-6\",children:/*#__PURE__*/_jsxs(\"a\",{href:article.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"text-indigo-600 hover:text-indigo-800 text-sm inline-flex items-center\",children:[/*#__PURE__*/_jsx(ExternalLink,{size:14,className:\"mr-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"View Article\"})]})})]},index))}):/*#__PURE__*/_jsxs(\"div\",{className:\"py-10 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(BookOpen,{size:48,className:\"mx-auto mb-4 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No research articles available for this product.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 flex justify-end\",children:/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200\",children:\"Close\"})})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 flex justify-end\",children:/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\",children:\"Close\"})})})]})]})}),wizardOpen&&/*#__PURE__*/_jsx(DiagnosisWizard,{conditions:conditions,onClose:toggleWizard}),adminOpen&&/*#__PURE__*/_jsx(AdminPanel,{conditions:conditions,onConditionsUpdate:handleConditionsUpdate,onClose:toggleAdmin})]});}export default ClinicalChartMockup;","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Search","X","ChevronDown","Info","Stethoscope","Settings","Filter","ChevronRight","BookOpen","ExternalLink","FileText","clsx","DiagnosisWizard","AdminPanel","conditionsDataImport","jsx","_jsx","jsxs","_jsxs","PATIENT_TYPES","ClinicalChartMockup","conditions","setConditions","filteredConditions","setFilteredConditions","selectedCondition","setSelectedCondition","categoryFilter","setCategoryFilter","ddsTypeFilter","setDdsTypeFilter","patientTypeFilter","setPatientTypeFilter","activePatientType","setActivePatientType","searchQuery","setSearchQuery","activeTab","setActiveTab","modalOpen","setModalOpen","selectedProduct","setSelectedProduct","wizardOpen","setWizardOpen","adminOpen","setAdminOpen","researchModalOpen","setResearchModalOpen","filteredProducts","setFilteredProducts","patientSpecificProducts","setPatientSpecificProducts","expandedSections","setExpandedSections","pitchPoints","competitiveAdvantage","handlingObjections","savedData","localStorage","getItem","parsedData","JSON","parse","length","phases","filtered","filter","condition","category","dds","includes","Array","isArray","patientType","name","toLowerCase","find","c","patientProducts","patientSpecificConfig","stringify","forEach","phase","products","phaseProducts","product","baseProduct","replace","push","categories","Set","map","ddsTypes","patientTypes","handleConditionSelect","handlePatientTypeSelect","type","handleProductSelect","details","productDetails","hasProductsForPhase","toggleWizard","toggleAdmin","handleConditionsUpdate","updatedConditions","updatedSelectedCondition","className","children","onClick","size","htmlFor","Root","value","onValueChange","Trigger","id","Value","Icon","Portal","Content","Viewport","Item","ItemText","onChange","e","target","placeholder","join","prev","List","title","usage","open","onOpenChange","Overlay","Title","Description","rationale","competitive","objection","researchArticles","factSheet","href","rel","article","index","url","author","abstract","Close","asChild","onClose","onConditionsUpdate"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/ClinicalChartMockup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Search, X, ChevronDown, Info, Stethoscope, Settings, Filter, ChevronRight, BookOpen, ExternalLink, FileText } from 'lucide-react';\nimport clsx from 'clsx';\nimport DiagnosisWizard from './DiagnosisWizard';\nimport AdminPanel from './AdminPanel';\nimport conditionsDataImport from '../conditions_complete.json';\n\n// PatientTypes definition based on project documentation\nconst PATIENT_TYPES = {\n  'Type 1': 'Healthy',\n  'Type 2': 'Mild inflammation, moderate risk',\n  'Type 3': 'Smoker, diabetic, immunocompromised',\n  'Type 4': 'Periodontal disease, chronic illness, poor healing'\n};\n\nfunction ClinicalChartMockup() {\n  // State management\n  const [conditions, setConditions] = useState([]);\n  const [filteredConditions, setFilteredConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categoryFilter, setCategoryFilter] = useState('All');\n  const [ddsTypeFilter, setDdsTypeFilter] = useState('All');\n  const [patientTypeFilter, setPatientTypeFilter] = useState('All');\n  const [activePatientType, setActivePatientType] = useState('All'); // Active patient type for product filtering\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [wizardOpen, setWizardOpen] = useState(false);\n  const [adminOpen, setAdminOpen] = useState(false);\n  const [researchModalOpen, setResearchModalOpen] = useState(false);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Store filtered products\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({}); // Store patient-specific product recommendations\n  const [expandedSections, setExpandedSections] = useState({\n    pitchPoints: false,\n    competitiveAdvantage: false,\n    handlingObjections: false\n  });\n\n  // Load conditions on component mount\n  useEffect(() => {\n    // Check if saved data exists in localStorage\n    const savedData = localStorage.getItem('conditions_data');\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setConditions(parsedData);\n      setFilteredConditions(parsedData);\n      \n      // Set default selected condition if data exists\n      if (parsedData.length > 0) {\n        setSelectedCondition(parsedData[0]);\n        setActiveTab(parsedData[0].phases[0]);\n      }\n    } else {\n      // Use imported data if no saved data exists\n      setConditions(conditionsDataImport);\n      setFilteredConditions(conditionsDataImport);\n      \n      // Set default selected condition if data exists\n      if (conditionsDataImport.length > 0) {\n        setSelectedCondition(conditionsDataImport[0]);\n        setActiveTab(conditionsDataImport[0].phases[0]);\n      }\n    }\n  }, []);\n\n  // Filter conditions based on selected filters and search query\n  useEffect(() => {\n    let filtered = [...conditions];\n    \n    // Filter by category\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.category === categoryFilter);\n    }\n    \n    // Filter by DDS type\n    if (ddsTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.dds.includes(ddsTypeFilter));\n    }\n    \n    // Filter by patient type\n    if (patientTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => {\n        // Check if condition's patientType includes the selected patient type\n        // This assumes patientType can be a string like \"Types 1 to 4\" or an array\n        if (Array.isArray(condition.patientType)) {\n          return condition.patientType.includes(`Type ${patientTypeFilter}`);\n        } else {\n          return condition.patientType.includes(patientTypeFilter);\n        }\n      });\n    }\n    \n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(condition => \n        condition.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    setFilteredConditions(filtered);\n    \n    // Update selected condition if it's no longer in filtered results\n    if (filtered.length > 0 && (!selectedCondition || \n        !filtered.find(c => c.name === selectedCondition.name))) {\n      setSelectedCondition(filtered[0]);\n      setActiveTab(filtered[0].phases[0]);\n    }\n  }, [conditions, categoryFilter, ddsTypeFilter, patientTypeFilter, searchQuery, selectedCondition]);\n\n  // Generate patient-specific product recommendations when selectedCondition changes\n  useEffect(() => {\n    if (!selectedCondition) return;\n    \n    // Create a map of phase -> patientType -> products\n    let patientProducts = {};\n    \n    // Check if condition has patientSpecificConfig from admin panel\n    if (selectedCondition.patientSpecificConfig) {\n      // Use the configuration directly\n      patientProducts = JSON.parse(JSON.stringify(selectedCondition.patientSpecificConfig));\n    } else {\n      // Fall back to the old method of inferring patient-specific products\n      // Process each phase\n      selectedCondition.phases.forEach(phase => {\n        patientProducts[phase] = {\n          'All': [...(selectedCondition.products[phase] || [])], // Default 'All' includes all products\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n        \n        // Extract patient-specific products from the condition's products\n        const phaseProducts = selectedCondition.products[phase] || [];\n        \n        // Process each product in this phase\n        phaseProducts.forEach(product => {\n          // Handle Type 3/4 Only products\n          if (product.includes('(Type 3/4 Only)')) {\n            const baseProduct = product.replace(' (Type 3/4 Only)', '');\n            patientProducts[phase]['3'].push(baseProduct);\n            patientProducts[phase]['4'].push(baseProduct);\n          } \n          // Regular products apply to all patient types\n          else {\n            patientProducts[phase]['1'].push(product);\n            patientProducts[phase]['2'].push(product);\n            patientProducts[phase]['3'].push(product);\n            patientProducts[phase]['4'].push(product);\n          }\n        });\n      });\n    }\n    \n    setPatientSpecificProducts(patientProducts);\n  }, [selectedCondition]);\n\n  // Filter products based on selected phase and patient type\n  useEffect(() => {\n    if (selectedCondition && activeTab && patientSpecificProducts[activeTab]) {\n      // If a specific patient type is selected, show that type's products\n      if (activePatientType !== 'All') {\n        setFilteredProducts(patientSpecificProducts[activeTab][activePatientType] || []);\n      } else {\n        // If 'All' is selected, show all products for this phase\n        setFilteredProducts(patientSpecificProducts[activeTab]['All'] || []);\n      }\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [selectedCondition, activeTab, activePatientType, patientSpecificProducts]);\n\n  // Extract unique categories for filter dropdown\n  const categories = ['All', ...new Set(conditions.map(condition => condition.category))];\n  \n  // Extract unique DDS types for filter dropdown\n  const ddsTypes = ['All'];\n  conditions.forEach(condition => {\n    condition.dds.forEach(dds => {\n      if (!ddsTypes.includes(dds)) {\n        ddsTypes.push(dds);\n      }\n    });\n  });\n\n  // Get patient types from PATIENT_TYPES constant\n  const patientTypes = ['All', '1', '2', '3', '4'];\n\n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActiveTab(condition.phases[0]);\n    setActivePatientType('All'); // Reset patient type filter when changing condition\n  };\n\n  // Handle patient type selection for product filtering\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n\n  // Handle product selection for modal\n  const handleProductSelect = (product) => {\n    setSelectedProduct({\n      name: product,\n      details: selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')]\n    });\n    setModalOpen(true);\n  };\n\n  // Determine if a phase has products for the selected condition\n  const hasProductsForPhase = (phase) => {\n    return selectedCondition && \n           selectedCondition.products && \n           selectedCondition.products[phase] && \n           selectedCondition.products[phase].length > 0;\n  };\n\n  // Toggle diagnosis wizard\n  const toggleWizard = () => {\n    setWizardOpen(!wizardOpen);\n  };\n  \n  // Toggle admin panel\n  const toggleAdmin = () => {\n    setAdminOpen(!adminOpen);\n  };\n  \n  // Handle conditions update from admin panel\n  const handleConditionsUpdate = (updatedConditions) => {\n    setConditions(updatedConditions);\n    \n    // If previously selected condition exists in updated data, keep it selected\n    if (selectedCondition) {\n      const updatedSelectedCondition = updatedConditions.find(c => c.name === selectedCondition.name);\n      if (updatedSelectedCondition) {\n        setSelectedCondition(updatedSelectedCondition);\n        \n        // Ensure active tab is valid for updated condition\n        if (updatedSelectedCondition.phases && !updatedSelectedCondition.phases.includes(activeTab)) {\n          setActiveTab(updatedSelectedCondition.phases[0]);\n        }\n      } else {\n        // If selected condition no longer exists, select the first condition\n        if (updatedConditions.length > 0) {\n          setSelectedCondition(updatedConditions[0]);\n          setActiveTab(updatedConditions[0].phases[0]);\n        } else {\n          setSelectedCondition(null);\n          setActiveTab('');\n        }\n      }\n    }\n  };\n\n  return (\n    \n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Clinical Chart Tool for Dental Sales Reps</h1>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={toggleWizard}\n              className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <Stethoscope size={18} className=\"mr-2\" />\n              Diagnosis Wizard\n            </button>\n            <button\n              onClick={toggleAdmin}\n              className=\"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n            >\n              <Settings size={18} className=\"mr-2\" />\n              Admin\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters Section */}\n        <div className=\"bg-white shadow rounded-lg p-4 mb-6\">\n          <h2 className=\"text-lg font-medium mb-4\">Filters</h2>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            {/* Category Filter */}\n            <div>\n              <label htmlFor=\"category-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Condition Category\n              </label>\n              <Select.Root value={categoryFilter} onValueChange={setCategoryFilter}>\n                <Select.Trigger id=\"category-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {categories.map((category) => (\n                        <Select.Item\n                          key={category}\n                          value={category}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{category}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* DDS Type Filter */}\n            <div>\n              <label htmlFor=\"dds-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                DDS Type\n              </label>\n              <Select.Root value={ddsTypeFilter} onValueChange={setDdsTypeFilter}>\n                <Select.Trigger id=\"dds-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {ddsTypes.map((dds) => (\n                        <Select.Item\n                          key={dds}\n                          value={dds}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{dds}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Patient Type Filter */}\n            <div>\n              <label htmlFor=\"patient-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Patient Type\n              </label>\n              <Select.Root value={patientTypeFilter} onValueChange={setPatientTypeFilter}>\n                <Select.Trigger id=\"patient-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {patientTypes.map((type) => (\n                        <Select.Item\n                          key={type}\n                          value={type}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>\n                            {type === 'All' ? 'All' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                          </Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Search */}\n            <div>\n              <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Search Condition\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search size={18} className=\"text-gray-400\" />\n                </div>\n                <input\n                  id=\"search\"\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  placeholder=\"Search conditions...\"\n                />\n                {searchQuery && (\n                  <button\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setSearchQuery('')}\n                  >\n                    <X size={18} className=\"text-gray-400 hover:text-gray-600\" />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n          {/* Conditions List */}\n          <div className=\"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\">\n            <h2 className=\"text-lg font-medium p-4 border-b\">Conditions</h2>\n            {filteredConditions.length === 0 ? (\n              <div className=\"p-4 text-gray-500\">No conditions match the selected filters.</div>\n            ) : (\n              <ul className=\"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\">\n                {filteredConditions.map((condition) => (\n                  <li \n                    key={condition.name}\n                    className={clsx(\n                      \"px-4 py-3 hover:bg-gray-50 cursor-pointer\",\n                      selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-50\" : \"\"\n                    )}\n                    onClick={() => handleConditionSelect(condition)}\n                  >\n                    <div className=\"font-medium\">{condition.name}</div>\n                    <div className=\"text-sm text-gray-500\">{condition.category}</div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {condition.dds.join(', ')} | {condition.patientType}\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n\n          {/* Selected Condition Details */}\n          <div className=\"lg:col-span-3\">\n            {selectedCondition ? (\n              <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n                <div className=\"p-4 border-b\">\n                  <h2 className=\"text-xl font-semibold\">{selectedCondition.name}</h2>\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    <span className=\"mr-2\">{selectedCondition.category}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.dds.join(', ')}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.patientType}</span>\n                  </div>\n                  {selectedCondition.pitchPoints && (\n                    <div className=\"mt-3\">\n                      {/* Key Pitch Points */}\n                      <div \n                        className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                          expandedSections.pitchPoints ? 'bg-blue-100' : 'bg-blue-50 hover:bg-blue-100'\n                        }`}\n                        onClick={() => setExpandedSections(prev => ({ \n                          ...prev, \n                          pitchPoints: !prev.pitchPoints \n                        }))}\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"font-medium text-blue-800\">Key Pitch Points</div>\n                          <div className=\"text-blue-600\">\n                            {expandedSections.pitchPoints ? \n                              <ChevronDown size={18} /> : \n                              <ChevronRight size={18} />\n                            }\n                          </div>\n                        </div>\n                        {expandedSections.pitchPoints && (\n                          <div className=\"text-blue-700 mt-2\">{selectedCondition.pitchPoints}</div>\n                        )}\n                      </div>\n                      \n                      {/* Competitive Advantage */}\n                      <div \n                        className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                          expandedSections.competitiveAdvantage ? 'bg-purple-100' : 'bg-purple-50 hover:bg-purple-100'\n                        }`}\n                        onClick={() => setExpandedSections(prev => ({ \n                          ...prev, \n                          competitiveAdvantage: !prev.competitiveAdvantage \n                        }))}\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"font-medium text-purple-800\">Competitive Advantage</div>\n                          <div className=\"text-purple-600\">\n                            {expandedSections.competitiveAdvantage ? \n                              <ChevronDown size={18} /> : \n                              <ChevronRight size={18} />\n                            }\n                          </div>\n                        </div>\n                        {expandedSections.competitiveAdvantage && (\n                          <div className=\"text-purple-700 mt-2\">\n                            {selectedCondition.competitiveAdvantage || 'No competitive advantage information available.'}\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Handling Objections */}\n                      <div \n                        className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                          expandedSections.handlingObjections ? 'bg-amber-100' : 'bg-amber-50 hover:bg-amber-100'\n                        }`}\n                        onClick={() => setExpandedSections(prev => ({ \n                          ...prev, \n                          handlingObjections: !prev.handlingObjections \n                        }))}\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"font-medium text-amber-800\">Handling Objections</div>\n                          <div className=\"text-amber-600\">\n                            {expandedSections.handlingObjections ? \n                              <ChevronDown size={18} /> : \n                              <ChevronRight size={18} />\n                            }\n                          </div>\n                        </div>\n                        {expandedSections.handlingObjections && (\n                          <div className=\"text-amber-700 mt-2\">\n                            {selectedCondition.handlingObjections || 'No objection handling information available.'}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Patient Type Filter for Products */}\n                <div className=\"border-b p-4 bg-gray-50\">\n                  <div className=\"flex flex-wrap items-center gap-4\">\n                    <div className=\"flex-shrink-0\">\n                      <span className=\"text-sm font-medium text-gray-600\">Show Recommendations For:</span>\n                    </div>\n                    \n                    {/* Patient Type Selection */}\n                    <div className=\"flex-grow\">\n                      <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n                        <Select.Trigger className=\"flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                          <div className=\"flex items-center\">\n                            <Filter size={16} className=\"mr-2 text-gray-500\" />\n                            <Select.Value placeholder=\"Select Patient Type\" />\n                          </div>\n                          <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                        </Select.Trigger>\n                        <Select.Portal>\n                          <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                            <Select.Viewport className=\"p-1\">\n                              {patientTypes.map((type) => (\n                                <Select.Item\n                                  key={type}\n                                  value={type}\n                                  className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                                >\n                                  <Select.ItemText>\n                                    {type === 'All' ? 'All Patient Types' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                                  </Select.ItemText>\n                                </Select.Item>\n                              ))}\n                            </Select.Viewport>\n                          </Select.Content>\n                        </Select.Portal>\n                      </Select.Root>\n                    </div>\n                  </div>\n                  \n                  {activePatientType !== 'All' && (\n                    <div className=\"mt-2 text-sm text-blue-600 flex items-center\">\n                      <Info size={14} className=\"mr-1\" />\n                      Showing specific recommendations for: \n                      <span className=\"font-medium ml-1\">\n                        {`Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`}\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                {/* Treatment Phases Tabs */}\n                <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n                  <Tabs.List className=\"flex border-b divide-x divide-gray-200\">\n                    {selectedCondition.phases.map((phase) => (\n                      <Tabs.Trigger\n                        key={phase}\n                        value={phase}\n                        className={clsx(\n                          \"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\",\n                          activeTab === phase \n                            ? \"text-blue-600 border-b-2 border-blue-600\"\n                            : \"text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                        )}\n                      >\n                        {phase} Phase\n                        {hasProductsForPhase(phase) && (\n                          <span className=\"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\">\n                            {selectedCondition.products[phase].length}\n                          </span>\n                        )}\n                      </Tabs.Trigger>\n                    ))}\n                  </Tabs.List>\n\n                  {selectedCondition.phases.map((phase) => (\n                    <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                      <h3 className=\"text-lg font-medium mb-3\">{phase} Phase - Recommended Products</h3>\n                      \n                      {filteredProducts.length > 0 ? (\n                        <div className=\"space-y-4\">\n                          {filteredProducts.map((product) => (\n                            <div \n                              key={product}\n                              className=\"bg-gray-50 border rounded-lg p-4 hover:bg-gray-100\"\n                            >\n                              <div className=\"flex justify-between items-start\">\n                                <h4 className=\"text-md font-medium\">{product}</h4>\n                                <button\n                                  onClick={() => handleProductSelect(product)}\n                                  className=\"p-1 rounded-full hover:bg-gray-200\"\n                                  title=\"View product details\"\n                                >\n                                  <Info size={18} className=\"text-blue-500\" />\n                                </button>\n                              </div>\n                              {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')] && (\n                                <div className=\"mt-2 text-sm text-gray-600\">\n                                  <div>\n                                    <span className=\"font-medium\">Usage: </span>\n                                    {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')].usage}\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {/* Tag to show this is specific for Type 3/4 patients */}\n                              {product.includes('(Type 3/4 Only)') && (\n                                <div className=\"mt-2\">\n                                  <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\">\n                                    Recommended for Type 3/4 patients only\n                                  </span>\n                                </div>\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                      ) : activePatientType !== 'All' ? (\n                        <div className=\"text-gray-500 bg-gray-50 p-4 rounded-md border\">\n                          <div>\n                            <strong>No products recommended</strong> for {phase} phase with patient Type {activePatientType}.\n                            <p className=\"mt-2\">Based on clinical guidelines, no product is necessary for this specific case.</p>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"text-gray-500\">No products recommended for this phase.</div>\n                      )}\n                                          </Tabs.Content>\n                                        ))}\n                                      </Tabs.Root>\n                                    </div>\n                                  ) : (\n                                    <div className=\"bg-white shadow rounded-lg p-8 text-center text-gray-500\">\n                                      Select a condition to view details\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </main>\n\n      {/* Product Details Modal */}\n      <Dialog.Root open={modalOpen} onOpenChange={setModalOpen}>\n        <Dialog.Portal>\n          <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\n          <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\">\n            <Dialog.Title className=\"text-xl font-semibold text-gray-900 mb-2\">\n              {selectedProduct?.name}\n            </Dialog.Title>\n            <Dialog.Description className=\"text-sm text-gray-500 mb-4\">\n              Product information and recommendation details\n            </Dialog.Description>\n            \n            {selectedProduct && selectedProduct.details && (\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-800 mb-1\">Usage Instructions</h4>\n                  <p className=\"text-blue-700\">{selectedProduct.details.usage}</p>\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-green-800 mb-1\">Clinical Rationale</h4>\n                  <p className=\"text-green-700\">{selectedProduct.details.rationale}</p>\n                </div>\n                \n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-purple-800 mb-1\">Competitive Advantage</h4>\n                  <p className=\"text-purple-700\">{selectedProduct.details.competitive}</p>\n                </div>\n                \n                <div className=\"bg-amber-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-amber-800 mb-1\">Handling Objections</h4>\n                  <p className=\"text-amber-700\">{selectedProduct.details.objection}</p>\n                </div>\n                \n                <div className=\"flex gap-4\">\n                  {/* Research Articles Button */}\n                  <button\n                    onClick={() => setResearchModalOpen(true)}\n                    className=\"flex-1 py-3 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center justify-center\"\n                  >\n                    <BookOpen size={20} className=\"mr-2\" />\n                    View Supporting Research\n                    {selectedProduct.details.researchArticles && selectedProduct.details.researchArticles.length > 0 && (\n                      <span className=\"ml-2 bg-white text-indigo-700 px-2 py-0.5 rounded-full text-xs font-bold\">\n                        {selectedProduct.details.researchArticles.length}\n                      </span>\n                    )}\n                  </button>\n                  \n                  {selectedProduct.details.factSheet && selectedProduct.details.factSheet !== '#' && (\n                    <a \n                      href={selectedProduct.details.factSheet}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"flex-1 py-3 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\"\n                    >\n                      <FileText size={20} className=\"mr-2\" />\n                      View Fact Sheet\n                    </a>\n                  )}\n                </div>\n              </div>\n            )}\n            <Dialog.Root open={researchModalOpen} onOpenChange={setResearchModalOpen}>\n              <Dialog.Portal>\n                <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\n                <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-3xl w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\">\n                  <Dialog.Title className=\"text-xl font-semibold text-gray-900 flex items-center\">\n                    <FileText size={24} className=\"mr-2 text-indigo-600\" />\n                    Supporting Research for {selectedProduct?.name}\n                  </Dialog.Title>\n                  <Dialog.Description className=\"text-sm text-gray-500 mt-1 mb-4\">\n                    Scientific articles and studies supporting this product's effectiveness\n                  </Dialog.Description>\n                  \n                  {selectedProduct && selectedProduct.details && selectedProduct.details.researchArticles && selectedProduct.details.researchArticles.length > 0 ? (\n                    <div className=\"space-y-6\">\n                      {selectedProduct.details.researchArticles.map((article, index) => (\n                        <div key={index} className=\"border-b pb-4 last:border-b-0 last:pb-0\">\n                          <h3 className=\"font-medium text-lg text-indigo-600\">\n                            {article.url ? (\n                              <a \n                                href={article.url} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"hover:underline flex items-start\"\n                              >\n                                <span className=\"mr-2\">{index + 1}.</span>\n                                <span>{article.title}</span>\n                              </a>\n                            ) : (\n                              <div className=\"flex items-start\">\n                                <span className=\"mr-2\">{index + 1}.</span>\n                                <span>{article.title}</span>\n                              </div>\n                            )}\n                          </h3>\n                          \n                          {article.author && (\n                            <p className=\"text-gray-600 mt-1 pl-6\">{article.author}</p>\n                          )}\n                          \n                          {article.abstract && (\n                            <div className=\"mt-3 pl-6\">\n                              <p className=\"text-gray-700\">{article.abstract}</p>\n                            </div>\n                          )}\n                          \n                          {article.url && (\n                            <div className=\"mt-3 pl-6\">\n                              <a \n                                href={article.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"text-indigo-600 hover:text-indigo-800 text-sm inline-flex items-center\"\n                              >\n                                <ExternalLink size={14} className=\"mr-1\" />\n                                <span>View Article</span>\n                              </a>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"py-10 text-center text-gray-500\">\n                      <BookOpen size={48} className=\"mx-auto mb-4 text-gray-300\" />\n                      <p>No research articles available for this product.</p>\n                    </div>\n                  )}\n                  \n                  <div className=\"mt-6 flex justify-end\">\n                    <Dialog.Close asChild>\n                      <button\n                        className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200\"\n                      >\n                        Close\n                      </button>\n                    </Dialog.Close>\n                  </div>\n                </Dialog.Content>\n              </Dialog.Portal>\n            </Dialog.Root>\n            <div className=\"mt-6 flex justify-end\">\n              <Dialog.Close asChild>\n                <button\n                  className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                >\n                  Close\n                </button>\n              </Dialog.Close>\n            </div>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n\n      {/* Diagnosis Wizard */}\n      {wizardOpen && (\n        <DiagnosisWizard \n          conditions={conditions} \n          onClose={toggleWizard} \n        />\n      )}\n      \n      {/* Admin Panel */}\n      {adminOpen && (\n        <AdminPanel \n          conditions={conditions}\n          onConditionsUpdate={handleConditionsUpdate}\n          onClose={toggleAdmin}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ClinicalChartMockup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}