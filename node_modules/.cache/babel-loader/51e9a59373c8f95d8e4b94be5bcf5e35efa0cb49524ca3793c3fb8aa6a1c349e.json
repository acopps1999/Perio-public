{"ast":null,"code":"var _jsxFileName = \"/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async data => {\n  // Simulate API call\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      resolve({\n        success: true\n      });\n    }, 1500);\n  });\n};\nfunction AdminPanel({\n  conditions,\n  onConditionsUpdate,\n  onClose\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n\n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n\n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n\n      // Extract unique categories\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      setCategories(uniqueCategories);\n\n      // Extract unique DDS types\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      setDdsTypes(allDdsTypes);\n\n      // Extract all products\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      setAllProducts(Array.from(productsSet));\n\n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n\n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = condition => {\n    if (!condition) return;\n    const patientProducts = {};\n\n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n\n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n\n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        }\n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n\n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n\n      // For conditions where Type 3/4 get additional products\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Acute' || condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute') {\n        if (patientProducts[phase]['3'].includes('Synvaza') && !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    setPatientSpecificProducts(patientProducts);\n  };\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n      const result = await saveToBackend(updatedConditions);\n      if (result.success) {\n        onConditionsUpdate(updatedConditions);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n\n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n\n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n\n    // Update each phase's products\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n\n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      ['1', '2', '3', '4'].forEach(patientType => {\n        patientTypesForPhase[patientType].forEach(product => {\n          if (!product.includes('(Type')) {\n            commonProducts.add(product);\n          }\n        });\n      });\n\n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n\n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      patientTypesForPhase['3'].forEach(product => {\n        if (patientTypesForPhase['4'].includes(product) && !patientTypesForPhase['1'].includes(product) && !patientTypesForPhase['2'].includes(product) && !product.includes('(Type')) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n\n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n\n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n    });\n    return updatedConditions;\n  };\n\n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n\n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n\n  // Handle condition selection\n  const handleConditionSelect = condition => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n\n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => condition.name === conditionId ? {\n      ...condition,\n      [field]: value\n    } : condition));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => {\n      if (condition.name === conditionId) {\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        if (!updatedProductDetails[productName]) {\n          updatedProductDetails[productName] = {};\n        }\n        updatedProductDetails[productName][field] = value;\n        return {\n          ...condition,\n          productDetails: updatedProductDetails\n        };\n      }\n      return condition;\n    }));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = {\n        ...selectedCondition.productDetails\n      };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({\n        ...prev,\n        productDetails: updatedProductDetails\n      }));\n    }\n  };\n\n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = type => {\n    setActivePatientType(type);\n  };\n\n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n\n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n\n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => updated[phase][type].includes(productName));\n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      return updated;\n    });\n  };\n\n  // Remove product from specific patient type and phase\n  // Remove product from specific patient type and phase\n  // Remove product from specific patient type and phase\n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        // Remove the product from all patient types for this phase\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n\n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n\n      // Check if the product is still used anywhere in this condition\n      const isProductUsedElsewhere = Object.keys(updated).some(otherPhase => updated[otherPhase]['all'].includes(productName) || updated[otherPhase]['1'].includes(productName) || updated[otherPhase]['2'].includes(productName) || updated[otherPhase]['3'].includes(productName) || updated[otherPhase]['4'].includes(productName));\n\n      // If product is not used in any phase, remove it from productDetails\n      if (!isProductUsedElsewhere && selectedCondition) {\n        const updatedProductDetails = {\n          ...selectedCondition.productDetails\n        };\n        delete updatedProductDetails[productName]; // Properly delete the property\n\n        // Update the condition with new productDetails\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.name === selectedCondition.name) {\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }\n          return condition;\n        }));\n\n        // Also update selectedCondition\n        setSelectedCondition(prev => ({\n          ...prev,\n          productDetails: updatedProductDetails\n        }));\n      }\n      return updated;\n    });\n\n    // Force a refresh of the UI to ensure the deleted product disappears\n    setTimeout(() => {\n      if (selectedCondition) {\n        const updatedCondition = editedConditions.find(c => c.name === selectedCondition.name);\n        if (updatedCondition) {\n          setSelectedCondition({\n            ...updatedCondition\n          });\n        }\n      }\n    }, 0);\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n\n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    if (modalType === 'condition') {\n      const newCondition = {\n        ...newItemData,\n        productDetails: {}\n      };\n      setEditedConditions(prev => [...prev, newCondition]);\n      setSelectedCondition(newCondition);\n    } else if (modalType === 'category') {\n      const newCategory = newItemData.name;\n      if (!categories.includes(newCategory)) {\n        setCategories(prev => [...prev, newCategory]);\n      }\n    } else if (modalType === 'ddsType') {\n      const newDdsType = newItemData.name;\n      if (!ddsTypes.includes(newDdsType)) {\n        setDdsTypes(prev => [...prev, newDdsType]);\n      }\n    } else if (modalType === 'product') {\n      const newProduct = newItemData.name;\n      if (!allProducts.includes(newProduct)) {\n        setAllProducts(prev => [...prev, newProduct]);\n\n        // Add product details to all conditions that use it\n        setEditedConditions(prev => prev.map(condition => {\n          const updatedProductDetails = {\n            ...condition.productDetails\n          };\n          updatedProductDetails[newProduct] = {\n            usage: newItemData.usage,\n            rationale: newItemData.rationale,\n            competitive: newItemData.competitive,\n            objection: newItemData.objection,\n            factSheet: newItemData.factSheet || '#'\n          };\n          return {\n            ...condition,\n            productDetails: updatedProductDetails\n          };\n        }));\n      }\n    }\n    setShowAddModal(false);\n    setNewItemData({});\n  };\n\n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({\n      type,\n      item\n    });\n    setShowDeleteModal(true);\n  };\n\n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const {\n      type,\n      item\n    } = itemToDelete;\n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n\n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => prev.map(condition => {\n        const updatedProducts = {\n          ...condition.products\n        };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => p !== item && p !== `${item} (Type 3/4 Only)`);\n        });\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        delete updatedProductDetails[item];\n        return {\n          ...condition,\n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      }));\n\n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n\n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    }\n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n\n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = phase => {\n    var _patientSpecificProdu2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border rounded-lg p-4 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Patient-Specific Product Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Filter by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n            value: activePatientType,\n            onValueChange: handlePatientTypeSelect,\n            children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n              className: \"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 15,\n                className: \"mr-1 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n              children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                className: \"bg-white rounded-md shadow-lg border min-w-[220px]\",\n                children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                  className: \"p-1\",\n                  children: Object.entries(PATIENT_TYPES).map(([type, label]) => /*#__PURE__*/_jsxDEV(Select.Item, {\n                    value: type,\n                    className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 25\n                    }, this)\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), activePatientType !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          size: 15,\n          className: \"mr-1 flex-shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Configuring products specifically for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: PATIENT_TYPES[activePatientType]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 53\n          }, this), \". Products added here will only be recommended for this patient type.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: [\"Products for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            if (e.target.value) {\n              addProductToPatientType(phase, activePatientType, e.target.value);\n              e.target.value = ''; // Reset select\n            }\n          },\n          className: \"px-3 py-1 border border-gray-300 rounded-md text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Add product...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this), allProducts.filter(product => {\n            var _patientSpecificProdu;\n            // Only show products that aren't already added for this patient type\n            if (!patientSpecificProducts[phase]) return true;\n            return !((_patientSpecificProdu = patientSpecificProducts[phase][activePatientType]) !== null && _patientSpecificProdu !== void 0 && _patientSpecificProdu.includes(product));\n          }).map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product,\n            children: product\n          }, product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), patientSpecificProducts[phase] && ((_patientSpecificProdu2 = patientSpecificProducts[phase][activePatientType]) === null || _patientSpecificProdu2 === void 0 ? void 0 : _patientSpecificProdu2.length) > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2 max-h-60 overflow-y-auto\",\n        children: patientSpecificProducts[phase][activePatientType].map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"bg-white border rounded-md p-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProductFromPatientType(phase, activePatientType, product),\n            className: \"text-red-500 hover:text-red-700 p-1\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 17\n          }, this)]\n        }, product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center text-gray-500 bg-gray-100 rounded-md\",\n        children: [\"No products configured for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-gray-500\",\n      children: \"No conditions data available to edit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Knowledge Base Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResetChanges,\n              className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n              disabled: isSaving,\n              children: \"Reset Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveChanges,\n              className: `px-3 py-1.5 rounded-md text-white text-sm flex items-center ${isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'}`,\n              disabled: isSaving,\n              children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Saving...\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Save, {\n                  size: 16,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this), \"Save Changes\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-500 hover:text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(Check, {\n          size: 20,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this), \"Changes saved successfully!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n        value: activeTab,\n        onValueChange: setActiveTab,\n        children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n          className: \"flex border-b\",\n          children: [/*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"importExport\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"importExport\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Import/Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"conditions\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"conditions\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"products\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"products\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"categories\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"categories\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Categories & DDS Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"importExport\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-2\",\n              children: \"Knowledge Base Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Import and export your knowledge base data for backup purposes or to transfer between environments.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataImportExport, {\n            conditions: editedConditions,\n            onImport: importedData => {\n              setEditedConditions(importedData);\n              setIsEditing(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"conditions\",\n          className: \"flex-grow overflow-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/3 border-r p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-medium\",\n                  children: \"All Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCondition,\n                  className: \"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 21\n                  }, this), \"Add New\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-1\",\n                children: editedConditions.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: clsx(\"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\", selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-100\" : \"hover:bg-gray-100\"),\n                  onClick: () => handleConditionSelect(condition),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-sm\",\n                      children: condition.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 822,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: condition.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 823,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 821,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      confirmDelete('condition', condition);\n                    },\n                    className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 23\n                  }, this)]\n                }, condition.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2/3 p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: selectedCondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Condition Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: selectedCondition.name,\n                      onChange: e => updateConditionField(selectedCondition.name, 'name', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 849,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 859,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedCondition.category,\n                      onChange: e => updateConditionField(selectedCondition.name, 'category', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: category,\n                        children: category\n                      }, category, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 868,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 862,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 858,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Patient Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 878,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: selectedCondition.patientType,\n                    onChange: e => updateConditionField(selectedCondition.name, 'patientType', e.target.value),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mt-1 text-xs text-gray-500\",\n                    children: \"Format: \\\"Types 1 to 4\\\" or \\\"Types 3 to 4\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"DDS Types\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 892,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.dds.map(dds => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [dds, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          },\n                          className: \"ml-1 text-blue-700 hover:text-blue-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 910,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 903,\n                          columnNumber: 31\n                        }, this)]\n                      }, dds, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 898,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 896,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 895,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => {\n                      if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                        const updatedDds = [...selectedCondition.dds, e.target.value];\n                        updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                      }\n                      e.target.value = ''; // Reset select\n                    },\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Add DDS Type...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 926,\n                      columnNumber: 25\n                    }, this), ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map(dds => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dds,\n                      children: dds\n                    }, dds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 928,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 937,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.pitchPoints,\n                    onChange: e => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 936,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Treatment Phases\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 950,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [phase, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                            updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          },\n                          className: \"ml-1 text-purple-700 hover:text-purple-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 968,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 961,\n                          columnNumber: 31\n                        }, this)]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 956,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 954,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 953,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"New phase name...\",\n                      className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      onKeyDown: e => {\n                        if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                          const updatedPhases = [...selectedCondition.phases, e.target.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          e.target.value = '';\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        const input = e.target.previousElementSibling;\n                        if (input.value && !selectedCondition.phases.includes(input.value)) {\n                          const updatedPhases = [...selectedCondition.phases, input.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          input.value = '';\n                        }\n                      },\n                      className: \"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\",\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 987,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Products by Phase\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1004,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n                    defaultValue: selectedCondition.phases[0],\n                    className: \"border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n                      className: \"flex border-b bg-gray-50\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n                        value: phase,\n                        className: clsx(\"flex-1 px-4 py-2 text-sm font-medium\", \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\", \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"),\n                        children: [phase, \" Phase\"]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1009,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1007,\n                      columnNumber: 25\n                    }, this), selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Content, {\n                      value: phase,\n                      className: \"p-4\",\n                      children: renderPatientTypeProductConfig(phase)\n                    }, phase, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1024,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1006,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Product Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 23\n                  }, this), Object.keys(selectedCondition.productDetails || {}).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-6\",\n                    children: Object.keys(selectedCondition.productDetails).map(productName => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border rounded-md p-4 bg-gray-50\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-md mb-3\",\n                        children: productName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1040,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-3\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Usage Instructions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1045,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].usage || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'usage', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1048,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1044,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Clinical Rationale\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1063,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].rationale || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'rationale', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1066,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1062,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Competitive Advantage\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1081,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].competitive || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'competitive', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1084,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1080,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Objection Handling\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1099,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].objection || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'objection', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1102,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1098,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Fact Sheet Link\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1117,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            value: selectedCondition.productDetails[productName].factSheet || '#',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'factSheet', e.target.value),\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1120,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"mt-1 text-xs text-gray-500\",\n                            children: \"Use # for placeholder or enter a valid URL\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1131,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1116,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1042,\n                        columnNumber: 31\n                      }, this)]\n                    }, productName, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1039,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm italic\",\n                    children: \"No product details available. Add products to phases first.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1140,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-10 text-gray-500\",\n                children: \"Select a condition to edit or create a new one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"products\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium\",\n              children: \"Product Library\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddProduct,\n              className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 17\n              }, this), \"Add New Product\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n            children: allProducts.map(product => {\n              var _editedConditions$, _editedConditions$$pr;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4 hover:bg-gray-50 group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-md\",\n                    children: product\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => confirmDelete('product', product),\n                    className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1177,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1171,\n                  columnNumber: 19\n                }, this), ((_editedConditions$ = editedConditions[0]) === null || _editedConditions$ === void 0 ? void 0 : (_editedConditions$$pr = _editedConditions$.productDetails) === null || _editedConditions$$pr === void 0 ? void 0 : _editedConditions$$pr[product]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-sm text-gray-600 space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Usage: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1184,\n                      columnNumber: 25\n                    }, this), editedConditions[0].productDetails[product].usage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1183,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Conditions: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1188,\n                      columnNumber: 25\n                    }, this), editedConditions.filter(c => Object.values(c.products || {}).some(products => products.includes(product) || products.includes(`${product} (Type 3/4 Only)`))).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1187,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1182,\n                  columnNumber: 21\n                }, this)]\n              }, product, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1170,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"categories\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCategory,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 21\n                  }, this), \"Add Category\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-2\",\n                children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1224,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500\",\n                    children: [editedConditions.filter(c => c.category === category).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1225,\n                    columnNumber: 23\n                  }, this)]\n                }, category, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"DDS Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddDdsType,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1241,\n                    columnNumber: 21\n                  }, this), \"Add DDS Type\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-2\",\n                children: ddsTypes.map(ddsType => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: ddsType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500\",\n                    children: [editedConditions.filter(c => c.dds.includes(ddsType)).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1253,\n                    columnNumber: 23\n                  }, this)]\n                }, ddsType, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showAddModal,\n        onOpenChange: setShowAddModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-4\",\n              children: [modalType === 'condition' && 'Add New Condition', modalType === 'category' && 'Add New Category', modalType === 'ddsType' && 'Add New DDS Type', modalType === 'product' && 'Add New Product']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [modalType === 'condition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Condition Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1280,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1283,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1279,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1292,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newItemData.category || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      category: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: category,\n                      children: category\n                    }, category, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1301,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1291,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), modalType === 'category' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"Category Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1312,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1315,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1311,\n                columnNumber: 19\n              }, this), modalType === 'ddsType' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"DDS Type Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1329,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1325,\n                columnNumber: 19\n              }, this), modalType === 'product' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Product Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1341,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1344,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1340,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Usage Instructions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1353,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.usage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      usage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1356,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1352,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Clinical Rationale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1365,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.rationale || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      rationale: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1368,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1377,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitive || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitive: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1380,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Objection Handling\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1389,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.objection || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      objection: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1392,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1405,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmitNewItem,\n                disabled: !newItemData.name,\n                className: `px-3 py-1.5 rounded-md text-white text-sm ${newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'}`,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1410,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showDeleteModal,\n        onOpenChange: setShowDeleteModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-2 flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1430,\n                columnNumber: 17\n              }, this), \"Confirm Deletion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dialog.Description, {\n              className: \"text-gray-600 mb-4\",\n              children: [(itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'condition' && `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`, (itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'product' && `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1444,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDelete,\n                className: \"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1449,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 678,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"X6sJKBx13Za2U+HAWM27w7BcWwQ=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Save","Plus","Edit","Trash2","X","ChevronDown","Info","AlertTriangle","Lock","Check","User","Filter","clsx","DataImportExport","jsxDEV","_jsxDEV","Fragment","_Fragment","PATIENT_TYPES","saveToBackend","data","Promise","resolve","setTimeout","console","log","localStorage","setItem","JSON","stringify","success","AdminPanel","conditions","onConditionsUpdate","onClose","_s","activeTab","setActiveTab","editedConditions","setEditedConditions","selectedCondition","setSelectedCondition","categories","setCategories","ddsTypes","setDdsTypes","allProducts","setAllProducts","isEditing","setIsEditing","isSaving","setIsSaving","showSuccess","setShowSuccess","activePatientType","setActivePatientType","patientSpecificProducts","setPatientSpecificProducts","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showAddModal","setShowAddModal","modalType","setModalType","newItemData","setNewItemData","uniqueCategories","Set","map","c","category","allDdsTypes","forEach","condition","dds","includes","push","productsSet","productDetails","Object","keys","product","add","Array","from","length","firstCondition","initializePatientSpecificProducts","patientProducts","phases","phase","products","baseProduct","replace","name","handleSaveChanges","updatedConditions","applyPatientSpecificProducts","result","error","parse","conditionIndex","findIndex","phaseProducts","patientTypesForPhase","commonProducts","patientType","type34Products","handleResetChanges","handleConditionSelect","updateConditionField","conditionId","field","value","prev","updateProductDetail","productName","updatedProductDetails","handlePatientTypeSelect","type","addProductToPatientType","updated","isInAllTypes","every","removeProductFromPatientType","filter","p","isProductUsedElsewhere","some","otherPhase","updatedCondition","find","handleAddCondition","Prep","Acute","Maintenance","pitchPoints","handleAddCategory","handleAddDdsType","handleAddProduct","usage","rationale","competitive","objection","factSheet","handleSubmitNewItem","newCondition","newCategory","newDdsType","newProduct","confirmDelete","item","handleDelete","remainingConditions","updatedProducts","renderPatientTypeProductConfig","_patientSpecificProdu2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Root","onValueChange","Trigger","size","Value","Icon","Portal","Content","Viewport","entries","label","Item","ItemText","onChange","e","target","_patientSpecificProdu","onClick","disabled","List","style","maxHeight","overflowY","onImport","importedData","stopPropagation","updatedDds","d","rows","updatedPhases","placeholder","onKeyDown","key","input","previousElementSibling","defaultValue","_editedConditions$","_editedConditions$$pr","values","ddsType","open","onOpenChange","Overlay","Title","Close","asChild","Description","_c","$RefreshReg$"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data) => {\n  // Simulate API call\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      resolve({ success: true });\n    }, 1500);\n  });\n};\n\nfunction AdminPanel({ conditions, onConditionsUpdate, onClose }) {\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  \n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n  \n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n  \n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n      \n      // Extract unique categories\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      setCategories(uniqueCategories);\n      \n      // Extract unique DDS types\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      setDdsTypes(allDdsTypes);\n      \n      // Extract all products\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      setAllProducts(Array.from(productsSet));\n      \n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n        \n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = (condition) => {\n    if (!condition) return;\n    \n    const patientProducts = {};\n    \n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n      \n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        } \n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n      \n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n      \n      // For conditions where Type 3/4 get additional products\n      if (\n        (condition.name === 'Gingival Recession Surgery' && phase === 'Acute') ||\n        (condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute')\n      ) {\n        if (patientProducts[phase]['3'].includes('Synvaza') && \n            !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  };\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n      \n      const result = await saveToBackend(updatedConditions);\n      if (result.success) {\n        onConditionsUpdate(updatedConditions);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n    \n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n    \n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n    \n    // Update each phase's products\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n      \n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      ['1', '2', '3', '4'].forEach(patientType => {\n        patientTypesForPhase[patientType].forEach(product => {\n          if (!product.includes('(Type')) {\n            commonProducts.add(product);\n          }\n        });\n      });\n      \n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n      \n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      patientTypesForPhase['3'].forEach(product => {\n        if (\n          patientTypesForPhase['4'].includes(product) && \n          !patientTypesForPhase['1'].includes(product) && \n          !patientTypesForPhase['2'].includes(product) &&\n          !product.includes('(Type')\n        ) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n      \n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n      \n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n    });\n    \n    return updatedConditions;\n  };\n  \n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n    \n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n  \n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n  \n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => \n        condition.name === conditionId\n          ? { ...condition, [field]: value }\n          : condition\n      )\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({ ...prev, [field]: value }));\n    }\n  };\n  \n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.name === conditionId) {\n          const updatedProductDetails = { ...condition.productDetails };\n          if (!updatedProductDetails[productName]) {\n            updatedProductDetails[productName] = {};\n          }\n          updatedProductDetails[productName][field] = value;\n          return { ...condition, productDetails: updatedProductDetails };\n        }\n        return condition;\n      })\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = { ...selectedCondition.productDetails };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({ \n        ...prev, \n        productDetails: updatedProductDetails \n      }));\n    }\n  };\n  \n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n  \n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n      \n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n        \n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => \n          updated[phase][type].includes(productName)\n        );\n        \n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      \n      return updated;\n    });\n  };\n  \n  // Remove product from specific patient type and phase\n  // Remove product from specific patient type and phase\n// Remove product from specific patient type and phase\n// Remove product from specific patient type and phase\nconst removeProductFromPatientType = (phase, patientType, productName) => {\n  setIsEditing(true);\n  \n  // Update patient-specific products\n  setPatientSpecificProducts(prev => {\n    const updated = { ...prev };\n    \n    // If patientType is 'all', remove from all patient types\n    if (patientType === 'all') {\n      // Remove the product from all patient types for this phase\n      updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n      updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n      updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n      updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n    } else {\n      // Remove from specific patient type\n      updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n      \n      // Remove from 'all' as well since it's no longer in all patient types\n      updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n    }\n    \n    // Check if the product is still used anywhere in this condition\n    const isProductUsedElsewhere = Object.keys(updated).some(otherPhase => \n      updated[otherPhase]['all'].includes(productName) ||\n      updated[otherPhase]['1'].includes(productName) ||\n      updated[otherPhase]['2'].includes(productName) ||\n      updated[otherPhase]['3'].includes(productName) ||\n      updated[otherPhase]['4'].includes(productName)\n    );\n    \n    // If product is not used in any phase, remove it from productDetails\n    if (!isProductUsedElsewhere && selectedCondition) {\n      const updatedProductDetails = { ...selectedCondition.productDetails };\n      delete updatedProductDetails[productName]; // Properly delete the property\n      \n      // Update the condition with new productDetails\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.name === selectedCondition.name) {\n            return { ...condition, productDetails: updatedProductDetails };\n          }\n          return condition;\n        })\n      );\n      \n      // Also update selectedCondition\n      setSelectedCondition(prev => ({\n        ...prev,\n        productDetails: updatedProductDetails\n      }));\n    }\n    \n    return updated;\n  });\n  \n  // Force a refresh of the UI to ensure the deleted product disappears\n  setTimeout(() => {\n    if (selectedCondition) {\n      const updatedCondition = editedConditions.find(c => c.name === selectedCondition.name);\n      if (updatedCondition) {\n        setSelectedCondition({...updatedCondition});\n      }\n    }\n  }, 0);\n};\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n  \n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n  \n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    \n    if (modalType === 'condition') {\n      const newCondition = {\n        ...newItemData,\n        productDetails: {}\n      };\n      setEditedConditions(prev => [...prev, newCondition]);\n      setSelectedCondition(newCondition);\n    } else if (modalType === 'category') {\n      const newCategory = newItemData.name;\n      if (!categories.includes(newCategory)) {\n        setCategories(prev => [...prev, newCategory]);\n      }\n    } else if (modalType === 'ddsType') {\n      const newDdsType = newItemData.name;\n      if (!ddsTypes.includes(newDdsType)) {\n        setDdsTypes(prev => [...prev, newDdsType]);\n      }\n    } else if (modalType === 'product') {\n      const newProduct = newItemData.name;\n      if (!allProducts.includes(newProduct)) {\n        setAllProducts(prev => [...prev, newProduct]);\n        \n        // Add product details to all conditions that use it\n        setEditedConditions(prev => \n          prev.map(condition => {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[newProduct] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          })\n        );\n      }\n    }\n    \n    setShowAddModal(false);\n    setNewItemData({});\n  };\n  \n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({ type, item });\n    setShowDeleteModal(true);\n  };\n  \n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const { type, item } = itemToDelete;\n    \n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n      \n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => \n        prev.map(condition => {\n          const updatedProducts = { ...condition.products };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].filter(p => \n              p !== item && p !== `${item} (Type 3/4 Only)`\n            );\n          });\n          \n          const updatedProductDetails = { ...condition.productDetails };\n          delete updatedProductDetails[item];\n          \n          return { \n            ...condition, \n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        })\n      );\n      \n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n      \n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = { ...prev };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    }\n    \n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n  \n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = (phase) => {\n    return (\n      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-medium\">Patient-Specific Product Configuration</h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Filter by:</span>\n            <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n              <Select.Trigger className=\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\">\n                <User size={15} className=\"mr-1 text-gray-500\" />\n                <Select.Value />\n                <Select.Icon><ChevronDown size={15} /></Select.Icon>\n              </Select.Trigger>\n              <Select.Portal>\n                <Select.Content className=\"bg-white rounded-md shadow-lg border min-w-[220px]\">\n                  <Select.Viewport className=\"p-1\">\n                    {Object.entries(PATIENT_TYPES).map(([type, label]) => (\n                      <Select.Item\n                        key={type}\n                        value={type}\n                        className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        <Select.ItemText>{label}</Select.ItemText>\n                      </Select.Item>\n                    ))}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Portal>\n            </Select.Root>\n          </div>\n        </div>\n        \n        {activePatientType !== 'all' && (\n          <div className=\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\">\n            <Info size={15} className=\"mr-1 flex-shrink-0\" />\n            <span>\n              Configuring products specifically for <strong>{PATIENT_TYPES[activePatientType]}</strong>.\n              Products added here will only be recommended for this patient type.\n            </span>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Products for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}</span>\n          <select\n            onChange={(e) => {\n              if (e.target.value) {\n                addProductToPatientType(phase, activePatientType, e.target.value);\n                e.target.value = ''; // Reset select\n              }\n            }}\n            className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n          >\n            <option value=\"\">Add product...</option>\n            {allProducts\n              .filter(product => {\n                // Only show products that aren't already added for this patient type\n                if (!patientSpecificProducts[phase]) return true;\n                return !patientSpecificProducts[phase][activePatientType]?.includes(product);\n              })\n              .map((product) => (\n                <option key={product} value={product}>\n                  {product}\n                </option>\n              ))}\n          </select>\n        </div>\n        \n        {patientSpecificProducts[phase] && patientSpecificProducts[phase][activePatientType]?.length > 0 ? (\n          <ul className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {patientSpecificProducts[phase][activePatientType].map((product) => (\n              <li \n                key={product}\n                className=\"bg-white border rounded-md p-2 flex justify-between items-center\"\n              >\n                <span>{product}</span>\n                <button\n                  onClick={() => removeProductFromPatientType(phase, activePatientType, product)}\n                  className=\"text-red-500 hover:text-red-700 p-1\"\n                >\n                  <Trash2 size={15} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\">\n            No products configured for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}.\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-gray-500\">\n        No conditions data available to edit.\n      </div>\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h2 className=\"text-xl font-bold\">Knowledge Base Administrator</h2>\n          <div className=\"flex items-center space-x-2\">\n            {/* Action buttons */}\n            {isEditing && (\n              <>\n                <button\n                  onClick={handleResetChanges}\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\"\n                  disabled={isSaving}\n                >\n                  Reset Changes\n                </button>\n                <button\n                  onClick={handleSaveChanges}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${\n                    isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>Saving...</>\n                  ) : (\n                    <>\n                      <Save size={16} className=\"mr-1\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Save success notification */}\n        {showSuccess && (\n          <div className=\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\">\n            <Check size={20} className=\"mr-2\" />\n            Changes saved successfully!\n          </div>\n        )}\n        \n        {/* Tabs */}\n        <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n          <Tabs.List className=\"flex border-b\">\n            <Tabs.Trigger\n              value=\"importExport\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"importExport\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Import/Export\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"conditions\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"conditions\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Conditions\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"products\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"products\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Products\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"categories\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"categories\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Categories & DDS Types\n            </Tabs.Trigger>\n          </Tabs.List>\n          \n          {/* Import/Export Tab */}\n          <Tabs.Content value=\"importExport\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2\">Knowledge Base Management</h3>\n              <p className=\"text-gray-600\">\n                Import and export your knowledge base data for backup purposes or to transfer between environments.\n              </p>\n            </div>\n            \n            <DataImportExport \n              conditions={editedConditions} \n              onImport={(importedData) => {\n                setEditedConditions(importedData);\n                setIsEditing(true);\n              }} \n            />\n          </Tabs.Content>\n          \n          {/* Conditions Tab */}\n          <Tabs.Content value=\"conditions\" className=\"flex-grow overflow-auto\">\n            <div className=\"flex h-full\">\n              {/* Conditions List */}\n              <div className=\"w-1/3 border-r p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">All Conditions</h3>\n                  <button\n                    onClick={handleAddCondition}\n                    className=\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add New\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-1\">\n                  {editedConditions.map((condition) => (\n                    <li \n                      key={condition.name}\n                      className={clsx(\n                        \"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",\n                        selectedCondition && selectedCondition.name === condition.name\n                          ? \"bg-blue-100\"\n                          : \"hover:bg-gray-100\"\n                      )}\n                      onClick={() => handleConditionSelect(condition)}\n                    >\n                      <div>\n                        <div className=\"font-medium text-sm\">{condition.name}</div>\n                        <div className=\"text-xs text-gray-500\">{condition.category}</div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          confirmDelete('condition', condition);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* Condition Editor */}\n              <div className=\"w-2/3 p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                {selectedCondition ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {/* Condition Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Condition Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={selectedCondition.name}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n                      \n                      {/* Category */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Category\n                        </label>\n                        <select\n                          value={selectedCondition.category}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'category', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          {categories.map((category) => (\n                            <option key={category} value={category}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    \n                    {/* Patient Type */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Patient Type\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={selectedCondition.patientType}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'patientType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Format: \"Types 1 to 4\" or \"Types 3 to 4\"</p>\n                    </div>\n                    \n                    {/* DDS Types */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        DDS Types\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.dds.map((dds) => (\n                            <span \n                              key={dds} \n                              className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {dds}\n                              <button\n                                onClick={() => {\n                                  const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                                  updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                                }}\n                                className=\"ml-1 text-blue-700 hover:text-blue-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <select\n                        onChange={(e) => {\n                          if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                            const updatedDds = [...selectedCondition.dds, e.target.value];\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          }\n                          e.target.value = ''; // Reset select\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Add DDS Type...</option>\n                        {ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map((dds) => (\n                          <option key={dds} value={dds}>\n                            {dds}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Pitch Points */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Pitch Points\n                      </label>\n                      <textarea\n                        value={selectedCondition.pitchPoints}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    \n                    {/* Phases */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Treatment Phases\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.phases.map((phase) => (\n                            <span \n                              key={phase} \n                              className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {phase}\n                              <button\n                                onClick={() => {\n                                  const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                                  updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                                }}\n                                className=\"ml-1 text-purple-700 hover:text-purple-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"New phase name...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                              const updatedPhases = [...selectedCondition.phases, e.target.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              e.target.value = '';\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={(e) => {\n                            const input = e.target.previousElementSibling;\n                            if (input.value && !selectedCondition.phases.includes(input.value)) {\n                              const updatedPhases = [...selectedCondition.phases, input.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              input.value = '';\n                            }\n                          }}\n                          className=\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                    {/* Products by Phase with Patient Type Filtering */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Products by Phase</h3>\n                      \n                      <Tabs.Root defaultValue={selectedCondition.phases[0]} className=\"border rounded-md\">\n                        <Tabs.List className=\"flex border-b bg-gray-50\">\n                          {selectedCondition.phases.map((phase) => (\n                            <Tabs.Trigger\n                              key={phase}\n                              value={phase}\n                              className={clsx(\n                                \"flex-1 px-4 py-2 text-sm font-medium\",\n                                \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\n                                \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"\n                              )}\n                            >\n                              {phase} Phase\n                            </Tabs.Trigger>\n                          ))}\n                        </Tabs.List>\n                        \n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                            {/* Patient-specific product configuration */}\n                            {renderPatientTypeProductConfig(phase)}\n                          </Tabs.Content>\n                        ))}\n                      </Tabs.Root>\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Product Details</h3>\n                      \n                      {Object.keys(selectedCondition.productDetails || {}).length > 0 ? (\n                        <div className=\"space-y-6\">\n                          {Object.keys(selectedCondition.productDetails).map((productName) => (\n                            <div key={productName} className=\"border rounded-md p-4 bg-gray-50\">\n                              <h4 className=\"font-medium text-md mb-3\">{productName}</h4>\n                              \n                              <div className=\"space-y-3\">\n                                {/* Usage Instructions */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Usage Instructions\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].usage || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'usage', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Clinical Rationale */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Clinical Rationale\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].rationale || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'rationale', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Competitive Advantage */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Competitive Advantage\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].competitive || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'competitive', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Objection Handling */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Objection Handling\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].objection || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'objection', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Fact Sheet Link */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Fact Sheet Link\n                                  </label>\n                                  <input\n                                    type=\"text\"\n                                    value={selectedCondition.productDetails[productName].factSheet || '#'}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'factSheet', \n                                      e.target.value\n                                    )}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                  <p className=\"mt-1 text-xs text-gray-500\">\n                                    Use # for placeholder or enter a valid URL\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-gray-500 text-sm italic\">\n                          No product details available. Add products to phases first.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-10 text-gray-500\">\n                    Select a condition to edit or create a new one\n                  </div>\n                )}\n              </div>\n            </div>\n          </Tabs.Content>\n          \n          {/* Products Tab */}\n          <Tabs.Content value=\"products\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-medium\">Product Library</h3>\n              <button\n                onClick={handleAddProduct}\n                className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n              >\n                <Plus size={16} className=\"mr-1\" />\n                Add New Product\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {allProducts.map((product) => (\n                <div key={product} className=\"border rounded-lg p-4 hover:bg-gray-50 group\">\n                  <div className=\"flex justify-between items-start\">\n                    <h4 className=\"font-medium text-md\">{product}</h4>\n                    <button\n                      onClick={() => confirmDelete('product', product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                  \n                  {editedConditions[0]?.productDetails?.[product] && (\n                    <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                      <div className=\"truncate\">\n                        <span className=\"font-medium\">Usage: </span>\n                        {editedConditions[0].productDetails[product].usage}\n                      </div>\n                      <div className=\"truncate\">\n                        <span className=\"font-medium\">Conditions: </span>\n                        {editedConditions.filter(c => \n                          Object.values(c.products || {}).some(products => \n                            products.includes(product) || products.includes(`${product} (Type 3/4 Only)`)\n                          )\n                        ).length} conditions\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </Tabs.Content>\n          \n          {/* Categories & DDS Types Tab */}\n          <Tabs.Content value=\"categories\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {/* Categories */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">Categories</h3>\n                  <button\n                    onClick={handleAddCategory}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add Category\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-2\">\n                  {categories.map((category) => (\n                    <li \n                      key={category}\n                      className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50\"\n                    >\n                      <span>{category}</span>\n                      <div className=\"text-sm text-gray-500\">\n                        {editedConditions.filter(c => c.category === category).length} conditions\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* DDS Types */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">DDS Types</h3>\n                  <button\n                    onClick={handleAddDdsType}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add DDS Type\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-2\">\n                  {ddsTypes.map((ddsType) => (\n                    <li \n                      key={ddsType}\n                      className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50\"\n                    >\n                      <span>{ddsType}</span>\n                      <div className=\"text-sm text-gray-500\">\n                        {editedConditions.filter(c => c.dds.includes(ddsType)).length} conditions\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </Tabs.Content>\n        </Tabs.Root>\n\n        {/* Add New Item Modal */}\n        <Dialog.Root open={showAddModal} onOpenChange={setShowAddModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-4\">\n                {modalType === 'condition' && 'Add New Condition'}\n                {modalType === 'category' && 'Add New Category'}\n                {modalType === 'ddsType' && 'Add New DDS Type'}\n                {modalType === 'product' && 'Add New Product'}\n              </Dialog.Title>\n              \n              <div className=\"space-y-4\">\n                {modalType === 'condition' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Condition Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Category\n                      </label>\n                      <select\n                        value={newItemData.category || ''}\n                        onChange={(e) => setNewItemData({...newItemData, category: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      >\n                        {categories.map((category) => (\n                          <option key={category} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </>\n                )}\n                \n                {modalType === 'category' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'ddsType' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      DDS Type Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'product' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Product Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Usage Instructions\n                      </label>\n                      <textarea\n                        value={newItemData.usage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, usage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, rationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitive || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitive: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Objection Handling\n                      </label>\n                      <textarea\n                        value={newItemData.objection || ''}\n                        onChange={(e) => setNewItemData({...newItemData, objection: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleSubmitNewItem}\n                  disabled={!newItemData.name}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm ${\n                    newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'\n                  }`}\n                >\n                  Add\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n        \n        {/* Delete Confirmation Modal */}\n        <Dialog.Root open={showDeleteModal} onOpenChange={setShowDeleteModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-2 flex items-center text-red-600\">\n                <AlertTriangle size={20} className=\"mr-2\" />\n                Confirm Deletion\n              </Dialog.Title>\n              \n              <Dialog.Description className=\"text-gray-600 mb-4\">\n                {itemToDelete?.type === 'condition' && \n                  `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`}\n                \n                {itemToDelete?.type === 'product' && \n                  `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`}\n              </Dialog.Description>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}