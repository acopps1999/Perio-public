{"ast":null,"code":"import React,{useState,useEffect}from'react';import*as Tabs from'@radix-ui/react-tabs';import*as Dialog from'@radix-ui/react-dialog';import*as Select from'@radix-ui/react-select';import{Search,X,ChevronDown,ChevronRight,Info,Stethoscope,Settings,Filter,BookOpen,ExternalLink,FileText}from'lucide-react';import clsx from'clsx';import DiagnosisWizard from'./DiagnosisWizard';import AdminPanel from'./AdminPanel';import conditionsDataImport from'../conditions_complete.json';// PatientTypes definition based on project documentation\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PATIENT_TYPES={'Type 1':'Healthy','Type 2':'Mild inflammation, moderate risk','Type 3':'Smoker, diabetic, immunocompromised','Type 4':'Periodontal disease, chronic illness, poor healing'};function ClinicalChartMockup(){// State management\nconst[conditions,setConditions]=useState([]);const[categoryOptions,setCategoryOptions]=useState(['All']);const[ddsTypeOptions,setDdsTypeOptions]=useState(['All']);const[filteredConditions,setFilteredConditions]=useState([]);const[selectedCondition,setSelectedCondition]=useState(null);const[categoryFilter,setCategoryFilter]=useState('All');const[ddsTypeFilter,setDdsTypeFilter]=useState('All');const[patientTypeFilter,setPatientTypeFilter]=useState('All');const[activePatientType,setActivePatientType]=useState('All');// Active patient type for product filtering\nconst[searchQuery,setSearchQuery]=useState('');const[activeTab,setActiveTab]=useState('');const[modalOpen,setModalOpen]=useState(false);const[selectedProduct,setSelectedProduct]=useState(null);const[wizardOpen,setWizardOpen]=useState(false);const[adminOpen,setAdminOpen]=useState(false);const[researchModalOpen,setResearchModalOpen]=useState(false);const[selectedResearchProduct,setSelectedResearchProduct]=useState(null);const[filteredProducts,setFilteredProducts]=useState([]);// Store filtered products\nconst[patientSpecificProducts,setPatientSpecificProducts]=useState({});// Store patient-specific product recommendations\nconst[expandedSections,setExpandedSections]=useState({pitchPoints:false,competitiveAdvantage:false,handlingObjections:false,scientificRationale:false,clinicalEvidence:false,productUsage:false});// Load conditions on component mount\nuseEffect(()=>{// Check if saved data exists in localStorage\nconst savedData=localStorage.getItem('conditions_data');const savedCategories=localStorage.getItem('categories_data');const savedDdsTypes=localStorage.getItem('dds_types_data');if(savedData){const parsedData=JSON.parse(savedData);setConditions(parsedData);setFilteredConditions(parsedData);// Set default selected condition if data exists\nif(parsedData.length>0){setSelectedCondition(parsedData[0]);setActiveTab(parsedData[0].phases[0]);}}else{// Use imported data if no saved data exists\nsetConditions(conditionsDataImport);setFilteredConditions(conditionsDataImport);// Set default selected condition if data exists\nif(conditionsDataImport.length>0){setSelectedCondition(conditionsDataImport[0]);setActiveTab(conditionsDataImport[0].phases[0]);}}// Load categories if available\nif(savedCategories){try{const parsedCategories=JSON.parse(savedCategories);if(Array.isArray(parsedCategories)&&parsedCategories.length>0){// Ensure 'All' is the first option\nif(!parsedCategories.includes('All')){parsedCategories.unshift('All');}else{// If 'All' exists but is not the first element, remove it and add it to the beginning\nconst filteredCategories=parsedCategories.filter(c=>c!=='All');setCategoryOptions(['All',...filteredCategories]);}}}catch(error){console.error('Error parsing saved categories:',error);}}// Load DDS types if available\nif(savedDdsTypes){try{const parsedDdsTypes=JSON.parse(savedDdsTypes);if(Array.isArray(parsedDdsTypes)&&parsedDdsTypes.length>0){// Ensure 'All' is the first option\nif(!parsedDdsTypes.includes('All')){parsedDdsTypes.unshift('All');}else{// If 'All' exists but is not the first element, remove it and add it to the beginning\nconst filteredDdsTypes=parsedDdsTypes.filter(d=>d!=='All');setDdsTypeOptions(['All',...filteredDdsTypes]);}}}catch(error){console.error('Error parsing saved DDS types:',error);}}},[]);// Filter conditions based on selected filters and search query\nuseEffect(()=>{let filtered=[...conditions];// Filter by category\nif(categoryFilter!=='All'){filtered=filtered.filter(condition=>condition.category===categoryFilter);}// Filter by DDS type\nif(ddsTypeFilter!=='All'){filtered=filtered.filter(condition=>condition.dds.includes(ddsTypeFilter));}// Filter by patient type\nif(patientTypeFilter!=='All'){filtered=filtered.filter(condition=>{// Check if condition's patientType includes the selected patient type\n// This assumes patientType can be a string like \"Types 1 to 4\" or an array\nif(Array.isArray(condition.patientType)){return condition.patientType.includes(`Type ${patientTypeFilter}`);}else{return condition.patientType.includes(patientTypeFilter);}});}// Filter by search query\nif(searchQuery){filtered=filtered.filter(condition=>condition.name.toLowerCase().includes(searchQuery.toLowerCase()));}setFilteredConditions(filtered);// Update selected condition if it's no longer in filtered results\nif(filtered.length>0&&(!selectedCondition||!filtered.find(c=>c.name===selectedCondition.name))){setSelectedCondition(filtered[0]);setActiveTab(filtered[0].phases[0]);}},[conditions,categoryFilter,ddsTypeFilter,patientTypeFilter,searchQuery,selectedCondition]);// Generate patient-specific product recommendations when selectedCondition changes\nuseEffect(()=>{if(!selectedCondition)return;// Create a map of phase -> patientType -> products\nlet patientProducts={};// Check if condition has patientSpecificConfig from admin panel\nif(selectedCondition.patientSpecificConfig){// Use the configuration directly\npatientProducts=JSON.parse(JSON.stringify(selectedCondition.patientSpecificConfig));}else{// Fall back to the old method of inferring patient-specific products\n// Process each phase\nselectedCondition.phases.forEach(phase=>{patientProducts[phase]={'All':[...(selectedCondition.products[phase]||[])],// Default 'All' includes all products\n'1':[],'2':[],'3':[],'4':[]};// Extract patient-specific products from the condition's products\nconst phaseProducts=selectedCondition.products[phase]||[];// Process each product in this phase\nphaseProducts.forEach(product=>{// Handle Type 3/4 Only products\nif(product.includes('(Type 3/4 Only)')){const baseProduct=product.replace(' (Type 3/4 Only)','');patientProducts[phase]['3'].push(baseProduct);patientProducts[phase]['4'].push(baseProduct);}// Regular products apply to all patient types\nelse{patientProducts[phase]['1'].push(product);patientProducts[phase]['2'].push(product);patientProducts[phase]['3'].push(product);patientProducts[phase]['4'].push(product);}});});}setPatientSpecificProducts(patientProducts);},[selectedCondition]);// Filter products based on selected phase and patient type\nuseEffect(()=>{if(selectedCondition&&activeTab&&patientSpecificProducts[activeTab]){// If a specific patient type is selected, show that type's products\nif(activePatientType!=='All'){setFilteredProducts(patientSpecificProducts[activeTab][activePatientType]||[]);}else{// If 'All' is selected, show all products for this phase\nsetFilteredProducts(patientSpecificProducts[activeTab]['All']||[]);}}else{setFilteredProducts([]);}},[selectedCondition,activeTab,activePatientType,patientSpecificProducts]);// Get patient types from PATIENT_TYPES constant\nconst patientTypes=['All','1','2','3','4'];// Handle condition selection\nconst handleConditionSelect=condition=>{setSelectedCondition(condition);setActiveTab(condition.phases[0]);setActivePatientType('All');// Reset patient type filter when changing condition\n};// Handle patient type selection for product filtering\nconst handlePatientTypeSelect=type=>{setActivePatientType(type);};// Handle product selection for modal\nconst handleProductSelect=product=>{setSelectedProduct({name:product,details:selectedCondition.productDetails[product.replace(' (Type 3/4 Only)','')]});setModalOpen(true);};// Handle opening research modal for a specific product\nconst handleOpenResearch=product=>{setSelectedResearchProduct(product);setResearchModalOpen(true);};// Get research articles for a specific product in the current condition\nconst getProductResearch=productName=>{if(!selectedCondition||!productName)return[];const cleanProductName=productName.replace(' (Type 3/4 Only)','');// Check if condition has condition-specific research for this product\nif(selectedCondition.conditionSpecificResearch&&selectedCondition.conditionSpecificResearch[cleanProductName]){return selectedCondition.conditionSpecificResearch[cleanProductName];}// If not, check if product has general research\nif(selectedCondition.productDetails&&selectedCondition.productDetails[cleanProductName]&&selectedCondition.productDetails[cleanProductName].researchArticles){return selectedCondition.productDetails[cleanProductName].researchArticles;}// As a fallback, generate mock research data\nreturn[{title:`Clinical application of ${cleanProductName} in ${selectedCondition.name}`,author:\"Smith et al., Journal of Dental Research, 2023\",abstract:\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam in odio ac nunc efficitur vestibulum.\"},{title:`Efficacy of ${cleanProductName} in dental practice`,author:\"Johnson et al., Periodontology Today, 2022\",abstract:\"Maecenas vel ante vel leo dictum eleifend. Suspendisse potenti.\"},{title:`Comparative study of ${cleanProductName} vs standard treatments`,author:\"Williams et al., Oral Surgery Journal, 2023\",abstract:\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae.\"}];};// Determine if a phase has products for the selected condition\nconst hasProductsForPhase=phase=>{return selectedCondition&&selectedCondition.products&&selectedCondition.products[phase]&&selectedCondition.products[phase].length>0;};// Toggle diagnosis wizard\nconst toggleWizard=()=>{setWizardOpen(!wizardOpen);};// Toggle admin panel\nconst toggleAdmin=()=>{setAdminOpen(!adminOpen);};// Handle conditions update from admin panel\nconst handleConditionsUpdate=(updatedConditions,updatedCategories,updatedDdsTypes)=>{// Update conditions\nsetConditions(updatedConditions);// Update categories if provided\nif(updatedCategories&&Array.isArray(updatedCategories)){// Make sure 'All' is always the first option\nlet sortedCategories;if(updatedCategories.includes('All')){const filteredCategories=updatedCategories.filter(c=>c!=='All');sortedCategories=['All',...filteredCategories];}else{sortedCategories=['All',...updatedCategories];}// Update the categories\nsetCategoryOptions(sortedCategories);// Keep current filter if valid, otherwise reset to 'All'\nif(categoryFilter!=='All'&&!sortedCategories.includes(categoryFilter)){setCategoryFilter('All');}}// Update DDS types if provided\nif(updatedDdsTypes&&Array.isArray(updatedDdsTypes)){// Make sure 'All' is always the first option\nlet sortedDdsTypes;if(updatedDdsTypes.includes('All')){const filteredDdsTypes=updatedDdsTypes.filter(d=>d!=='All');sortedDdsTypes=['All',...filteredDdsTypes];}else{sortedDdsTypes=['All',...updatedDdsTypes];}// Update the DDS types\nsetDdsTypeOptions(sortedDdsTypes);// Keep current filter if valid, otherwise reset to 'All'\nif(ddsTypeFilter!=='All'&&!sortedDdsTypes.includes(ddsTypeFilter)){setDdsTypeFilter('All');}}// Update filtered conditions based on current filters\nlet filtered=[...updatedConditions];// Apply existing filters\nif(categoryFilter!=='All'){filtered=filtered.filter(condition=>condition.category===categoryFilter);}if(ddsTypeFilter!=='All'){filtered=filtered.filter(condition=>condition.dds.includes(ddsTypeFilter));}if(patientTypeFilter!=='All'){filtered=filtered.filter(condition=>{if(Array.isArray(condition.patientType)){return condition.patientType.includes(`Type ${patientTypeFilter}`);}else{return condition.patientType.includes(patientTypeFilter);}});}if(searchQuery){filtered=filtered.filter(condition=>condition.name.toLowerCase().includes(searchQuery.toLowerCase()));}setFilteredConditions(filtered);// If previously selected condition exists in updated data, keep it selected\nif(selectedCondition){const updatedSelectedCondition=updatedConditions.find(c=>c.name===selectedCondition.name);if(updatedSelectedCondition){setSelectedCondition(updatedSelectedCondition);// Ensure active tab is valid for updated condition\nif(updatedSelectedCondition.phases&&!updatedSelectedCondition.phases.includes(activeTab)){setActiveTab(updatedSelectedCondition.phases[0]);}}else{// If selected condition no longer exists, select the first condition\nif(updatedConditions.length>0){setSelectedCondition(updatedConditions[0]);setActiveTab(updatedConditions[0].phases[0]);}else{setSelectedCondition(null);setActiveTab('');}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white shadow-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Clinical Chart Tool for Dental Sales Reps\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:toggleWizard,className:\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",children:[/*#__PURE__*/_jsx(Stethoscope,{size:18,className:\"mr-2\"}),\"Diagnosis Wizard\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:toggleAdmin,className:\"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\",children:[/*#__PURE__*/_jsx(Settings,{size:18,className:\"mr-2\"}),\"Admin\"]})]})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-4 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium mb-4\",children:\"Filters\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category-filter\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Condition Category\"}),/*#__PURE__*/_jsxs(Select.Root,{value:categoryFilter,onValueChange:setCategoryFilter,children:[/*#__PURE__*/_jsxs(Select.Trigger,{id:\"category-filter\",className:\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:categoryOptions.map(category=>/*#__PURE__*/_jsx(Select.Item,{value:category,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:category})},category))})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dds-filter\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"DDS Type\"}),/*#__PURE__*/_jsxs(Select.Root,{value:ddsTypeFilter,onValueChange:setDdsTypeFilter,children:[/*#__PURE__*/_jsxs(Select.Trigger,{id:\"dds-filter\",className:\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:ddsTypeOptions.map(dds=>/*#__PURE__*/_jsx(Select.Item,{value:dds,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:dds})},dds))})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"patient-filter\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Patient Type\"}),/*#__PURE__*/_jsxs(Select.Root,{value:patientTypeFilter,onValueChange:setPatientTypeFilter,children:[/*#__PURE__*/_jsxs(Select.Trigger,{id:\"patient-filter\",className:\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:patientTypes.map(type=>/*#__PURE__*/_jsx(Select.Item,{value:type,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:type==='All'?'All':`Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`})},type))})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"search\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Search Condition\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",children:/*#__PURE__*/_jsx(Search,{size:18,className:\"text-gray-400\"})}),/*#__PURE__*/_jsx(\"input\",{id:\"search\",type:\"text\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),className:\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\",placeholder:\"Search conditions...\"}),searchQuery&&/*#__PURE__*/_jsx(\"button\",{className:\"absolute inset-y-0 right-0 pr-3 flex items-center\",onClick:()=>setSearchQuery(''),children:/*#__PURE__*/_jsx(X,{size:18,className:\"text-gray-400 hover:text-gray-600\"})})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-6 lg:grid-cols-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium p-4 border-b\",children:\"Conditions\"}),filteredConditions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"p-4 text-gray-500\",children:\"No conditions match the selected filters.\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\",children:filteredConditions.map(condition=>/*#__PURE__*/_jsxs(\"li\",{className:clsx(\"px-4 py-3 hover:bg-gray-50 cursor-pointer\",selectedCondition&&selectedCondition.name===condition.name?\"bg-blue-50\":\"\"),onClick:()=>handleConditionSelect(condition),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:condition.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:condition.category}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[condition.dds.join(', '),\" | \",condition.patientType]})]},condition.name))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-3\",children:selectedCondition?/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg overflow-hidden\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold\",children:selectedCondition.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:selectedCondition.category}),/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"|\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedCondition.dds.join(', ')}),/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"|\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedCondition.patientType})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-800\",children:\"Recommended Products\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setResearchModalOpen(true),className:\"py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center text-sm\",children:[/*#__PURE__*/_jsx(BookOpen,{size:16,className:\"mr-2\"}),\"View Published Research\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-blue-50 rounded-lg border border-blue-100 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap items-center gap-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-blue-700\",children:\"Show Recommendations For:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow\",children:/*#__PURE__*/_jsxs(Select.Root,{value:activePatientType,onValueChange:handlePatientTypeSelect,children:[/*#__PURE__*/_jsxs(Select.Trigger,{className:\"flex justify-between items-center px-3 py-2 text-sm bg-white border border-blue-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(Filter,{size:16,className:\"mr-2 text-blue-500\"}),/*#__PURE__*/_jsx(Select.Value,{placeholder:\"Select Patient Type\"})]}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:18})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"overflow-hidden bg-white rounded-md shadow-lg border\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:patientTypes.map(type=>/*#__PURE__*/_jsx(Select.Item,{value:type,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:type==='All'?'All Patient Types':`Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`})},type))})})})]})})]}),activePatientType!=='All'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-sm text-blue-700 flex items-center\",children:[/*#__PURE__*/_jsx(Info,{size:14,className:\"mr-1\"}),\"Showing specific recommendations for:\",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium ml-1\",children:`Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`})]})]}),/*#__PURE__*/_jsxs(Tabs.Root,{value:activeTab,onValueChange:setActiveTab,children:[/*#__PURE__*/_jsx(Tabs.List,{className:\"flex border-b divide-x divide-gray-200 bg-gray-50 rounded-t-lg\",children:selectedCondition.phases.map(phase=>/*#__PURE__*/_jsxs(Tabs.Trigger,{value:phase,className:clsx(\"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\",activeTab===phase?\"text-blue-600 border-b-2 border-blue-600 bg-white\":\"text-gray-500 hover:text-gray-700 hover:border-gray-300\"),children:[phase,\" Phase\",hasProductsForPhase(phase)&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\",children:selectedCondition.products[phase].length})]},phase))}),selectedCondition.phases.map(phase=>/*#__PURE__*/_jsx(Tabs.Content,{value:phase,className:\"p-4 bg-white border border-t-0 rounded-b-lg\",children:filteredProducts.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:filteredProducts.map(product=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border border-blue-200 rounded-lg p-5 hover:bg-blue-50 shadow-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-start\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-blue-800\",children:product})}),selectedCondition.productDetails[product.replace(' (Type 3/4 Only)','')]&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 space-y-2 text-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Usage: \"}),selectedCondition.productDetails[product.replace(' (Type 3/4 Only)','')].usage]})}),product.includes('(Type 3/4 Only)')&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\",children:\"Recommended for Type 3/4 patients only\"})})]},product))}):activePatientType!=='All'?/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 bg-gray-50 p-4 rounded-md border\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"No products recommended\"}),\" for \",phase,\" phase with patient Type \",activePatientType,\".\",/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Based on clinical guidelines, no product is necessary for this specific case.\"})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500\",children:\"No products recommended for this phase.\"})},phase))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 space-y-2\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-700 mb-3\",children:\"Additional Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.pitchPoints?'bg-blue-100':'bg-blue-50 hover:bg-blue-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,pitchPoints:!prev.pitchPoints})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-blue-800\",children:\"Key Pitch Points\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-600\",children:expandedSections.pitchPoints?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.pitchPoints&&/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-700 mt-2\",children:selectedCondition.pitchPoints||'No pitch points available.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.scientificRationale?'bg-green-100':'bg-green-50 hover:bg-green-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,scientificRationale:!prev.scientificRationale})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-green-800\",children:\"Scientific Rationale\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-green-600\",children:expandedSections.scientificRationale?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.scientificRationale&&/*#__PURE__*/_jsx(\"div\",{className:\"text-green-700 mt-2\",children:selectedCondition.scientificRationale||'Scientific foundation for the recommended treatment approach.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.clinicalEvidence?'bg-indigo-100':'bg-indigo-50 hover:bg-indigo-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,clinicalEvidence:!prev.clinicalEvidence})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-indigo-800\",children:\"Clinical Evidence\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-indigo-600\",children:expandedSections.clinicalEvidence?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.clinicalEvidence&&/*#__PURE__*/_jsx(\"div\",{className:\"text-indigo-700 mt-2\",children:selectedCondition.clinicalEvidence||'Clinical evidence supporting the treatment recommendations for this condition.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.competitiveAdvantage?'bg-purple-100':'bg-purple-50 hover:bg-purple-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,competitiveAdvantage:!prev.competitiveAdvantage})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-purple-800\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-purple-600\",children:expandedSections.competitiveAdvantage?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.competitiveAdvantage&&/*#__PURE__*/_jsx(\"div\",{className:\"text-purple-700 mt-2\",children:selectedCondition.competitiveAdvantage||'No competitive advantage information available.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.handlingObjections?'bg-amber-100':'bg-amber-50 hover:bg-amber-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,handlingObjections:!prev.handlingObjections})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-amber-800\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-amber-600\",children:expandedSections.handlingObjections?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.handlingObjections&&/*#__PURE__*/_jsx(\"div\",{className:\"text-amber-700 mt-2\",children:selectedCondition.handlingObjections||'No objection handling information available.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:`p-3 rounded-md mb-2 cursor-pointer transition-colors ${expandedSections.productUsage?'bg-teal-100':'bg-teal-50 hover:bg-teal-100'}`,onClick:()=>setExpandedSections(prev=>({...prev,productUsage:!prev.productUsage})),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-teal-800\",children:\"Product Usage Instructions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-teal-600\",children:expandedSections.productUsage?/*#__PURE__*/_jsx(ChevronDown,{size:18}):/*#__PURE__*/_jsx(ChevronRight,{size:18})})]}),expandedSections.productUsage&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 space-y-3\",children:selectedCondition.productDetails&&Object.keys(selectedCondition.productDetails).length>0?Object.entries(selectedCondition.productDetails).map(_ref=>{let[productName,details]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border rounded-md p-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-teal-800\",children:productName}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-teal-700 mt-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Usage: \"}),details.usage||'Usage instructions not available.']})]},productName);}):/*#__PURE__*/_jsx(\"div\",{className:\"text-teal-700\",children:\"No product usage information available.\"})})]})]})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg p-8 text-center text-gray-500\",children:\"Select a condition to view details\"})})]})]}),/*#__PURE__*/_jsx(Dialog.Root,{open:modalOpen,onOpenChange:setModalOpen,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsx(Dialog.Title,{className:\"text-xl font-semibold text-gray-900 mb-2\",children:selectedProduct===null||selectedProduct===void 0?void 0:selectedProduct.name}),/*#__PURE__*/_jsx(Dialog.Description,{className:\"text-sm text-gray-500 mb-4\",children:\"Product information and recommendation details\"}),selectedProduct&&selectedProduct.details&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-800 mb-1\",children:\"Usage Instructions\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-700\",children:selectedProduct.details.usage})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-green-800 mb-1\",children:\"Scientific Rationale\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700\",children:selectedProduct.details.rationale||'No scientific rationale provided.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-indigo-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-indigo-800 mb-1\",children:\"Clinical Evidence\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-indigo-700\",children:selectedProduct.details.clinicalEvidence||selectedProduct.details.rationale||'No clinical evidence provided.'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-purple-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-purple-800 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-purple-700\",children:selectedProduct.details.competitive})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-amber-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-amber-800 mb-1\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-amber-700\",children:selectedProduct.details.objection})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{setSelectedResearchProduct(selectedProduct.name);setResearchModalOpen(true);setModalOpen(false);},className:\"flex-1 py-3 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(BookOpen,{size:20,className:\"mr-2\"}),\"View Published Research\"]}),selectedProduct.details.factSheet&&selectedProduct.details.factSheet!=='#'&&/*#__PURE__*/_jsxs(\"a\",{href:selectedProduct.details.factSheet,target:\"_blank\",rel:\"noopener noreferrer\",className:\"flex-1 py-3 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(FileText,{size:20,className:\"mr-2\"}),\"View Fact Sheet\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 flex justify-end\",children:/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\",children:\"Close\"})})})]})]})}),/*#__PURE__*/_jsx(Dialog.Root,{open:researchModalOpen,onOpenChange:setResearchModalOpen,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-3xl w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsxs(Dialog.Title,{className:\"text-xl font-semibold text-gray-900 flex items-center\",children:[/*#__PURE__*/_jsx(BookOpen,{size:24,className:\"mr-2 text-indigo-600\"}),selectedResearchProduct?`Published Research for ${selectedResearchProduct}`:`Published Research for ${selectedCondition===null||selectedCondition===void 0?void 0:selectedCondition.name}`]}),/*#__PURE__*/_jsx(Dialog.Description,{className:\"text-sm text-gray-500 mt-1 mb-4\",children:\"Scientific articles and studies supporting clinical recommendations\"}),selectedCondition&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:selectedResearchProduct?/*#__PURE__*/// Show research for a specific product\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-indigo-800 border-b pb-2\",children:selectedResearchProduct.replace(' (Type 3/4 Only)','')}),getProductResearch(selectedResearchProduct).length>0?getProductResearch(selectedResearchProduct).map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-b pb-4 last:border-b-0 last:pb-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-lg text-indigo-600\",children:article.url?/*#__PURE__*/_jsxs(\"a\",{href:article.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"hover:underline flex items-start\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"mr-2\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"span\",{children:article.title})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"mr-2\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"span\",{children:article.title})]})}),article.author&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-1 pl-6\",children:article.author}),article.abstract&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pl-6\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700\",children:article.abstract})}),article.url&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pl-6\",children:/*#__PURE__*/_jsxs(\"a\",{href:article.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"text-indigo-600 hover:text-indigo-800 text-sm inline-flex items-center\",children:[/*#__PURE__*/_jsx(ExternalLink,{size:14,className:\"mr-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"View Article\"})]})})]},index)):/*#__PURE__*/_jsxs(\"div\",{className:\"py-10 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(BookOpen,{size:48,className:\"mx-auto mb-4 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No research articles available for this product.\"})]})]}):/*#__PURE__*/// Show research for all products in the condition\n_jsx(_Fragment,{children:filteredProducts.length>0?filteredProducts.map(product=>{const productResearch=getProductResearch(product);if(!productResearch||productResearch.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-indigo-800 border-b pb-2\",children:product.replace(' (Type 3/4 Only)','')}),productResearch.map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-b pb-4 last:border-b-0 last:pb-0 mt-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-lg text-indigo-600\",children:article.url?/*#__PURE__*/_jsxs(\"a\",{href:article.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"hover:underline flex items-start\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"mr-2\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"span\",{children:article.title})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"mr-2\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"span\",{children:article.title})]})}),article.author&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-1 pl-6\",children:article.author}),article.abstract&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pl-6\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700\",children:article.abstract})}),article.url&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pl-6\",children:/*#__PURE__*/_jsxs(\"a\",{href:article.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"text-indigo-600 hover:text-indigo-800 text-sm inline-flex items-center\",children:[/*#__PURE__*/_jsx(ExternalLink,{size:14,className:\"mr-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"View Article\"})]})})]},index))]},product);}):/*#__PURE__*/_jsxs(\"div\",{className:\"py-10 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(BookOpen,{size:48,className:\"mx-auto mb-4 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No research articles available for the current selection.\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 flex justify-end\",children:/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200\",children:\"Close\"})})})]})]})}),wizardOpen&&/*#__PURE__*/_jsx(DiagnosisWizard,{conditions:conditions,onClose:toggleWizard}),adminOpen&&/*#__PURE__*/_jsx(AdminPanel,{conditions:conditions,onConditionsUpdate:handleConditionsUpdate,onClose:toggleAdmin})]});}export default ClinicalChartMockup;","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Search","X","ChevronDown","ChevronRight","Info","Stethoscope","Settings","Filter","BookOpen","ExternalLink","FileText","clsx","DiagnosisWizard","AdminPanel","conditionsDataImport","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PATIENT_TYPES","ClinicalChartMockup","conditions","setConditions","categoryOptions","setCategoryOptions","ddsTypeOptions","setDdsTypeOptions","filteredConditions","setFilteredConditions","selectedCondition","setSelectedCondition","categoryFilter","setCategoryFilter","ddsTypeFilter","setDdsTypeFilter","patientTypeFilter","setPatientTypeFilter","activePatientType","setActivePatientType","searchQuery","setSearchQuery","activeTab","setActiveTab","modalOpen","setModalOpen","selectedProduct","setSelectedProduct","wizardOpen","setWizardOpen","adminOpen","setAdminOpen","researchModalOpen","setResearchModalOpen","selectedResearchProduct","setSelectedResearchProduct","filteredProducts","setFilteredProducts","patientSpecificProducts","setPatientSpecificProducts","expandedSections","setExpandedSections","pitchPoints","competitiveAdvantage","handlingObjections","scientificRationale","clinicalEvidence","productUsage","savedData","localStorage","getItem","savedCategories","savedDdsTypes","parsedData","JSON","parse","length","phases","parsedCategories","Array","isArray","includes","unshift","filteredCategories","filter","c","error","console","parsedDdsTypes","filteredDdsTypes","d","filtered","condition","category","dds","patientType","name","toLowerCase","find","patientProducts","patientSpecificConfig","stringify","forEach","phase","products","phaseProducts","product","baseProduct","replace","push","patientTypes","handleConditionSelect","handlePatientTypeSelect","type","handleProductSelect","details","productDetails","handleOpenResearch","getProductResearch","productName","cleanProductName","conditionSpecificResearch","researchArticles","title","author","abstract","hasProductsForPhase","toggleWizard","toggleAdmin","handleConditionsUpdate","updatedConditions","updatedCategories","updatedDdsTypes","sortedCategories","sortedDdsTypes","updatedSelectedCondition","className","children","onClick","size","htmlFor","Root","value","onValueChange","Trigger","id","Value","Icon","Portal","Content","Viewport","map","Item","ItemText","onChange","e","target","placeholder","join","List","usage","prev","Object","keys","entries","_ref","open","onOpenChange","Overlay","Title","Description","rationale","competitive","objection","factSheet","href","rel","Close","asChild","article","index","url","productResearch","onClose","onConditionsUpdate"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/ClinicalChartMockup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Search, X, ChevronDown, ChevronRight, Info, Stethoscope, Settings, Filter, BookOpen, ExternalLink, FileText } from 'lucide-react';\nimport clsx from 'clsx';\nimport DiagnosisWizard from './DiagnosisWizard';\nimport AdminPanel from './AdminPanel';\nimport conditionsDataImport from '../conditions_complete.json';\n\n// PatientTypes definition based on project documentation\nconst PATIENT_TYPES = {\n  'Type 1': 'Healthy',\n  'Type 2': 'Mild inflammation, moderate risk',\n  'Type 3': 'Smoker, diabetic, immunocompromised',\n  'Type 4': 'Periodontal disease, chronic illness, poor healing'\n};\n\nfunction ClinicalChartMockup() {\n  // State management\n  const [conditions, setConditions] = useState([]);\n  const [categoryOptions, setCategoryOptions] = useState(['All']);\n  const [ddsTypeOptions, setDdsTypeOptions] = useState(['All']);\n  const [filteredConditions, setFilteredConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [categoryFilter, setCategoryFilter] = useState('All');\n  const [ddsTypeFilter, setDdsTypeFilter] = useState('All');\n  const [patientTypeFilter, setPatientTypeFilter] = useState('All');\n  const [activePatientType, setActivePatientType] = useState('All'); // Active patient type for product filtering\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [wizardOpen, setWizardOpen] = useState(false);\n  const [adminOpen, setAdminOpen] = useState(false);\n  const [researchModalOpen, setResearchModalOpen] = useState(false);\n  const [selectedResearchProduct, setSelectedResearchProduct] = useState(null);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Store filtered products\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({}); // Store patient-specific product recommendations\n  const [expandedSections, setExpandedSections] = useState({\n    pitchPoints: false,\n    competitiveAdvantage: false,\n    handlingObjections: false,\n    scientificRationale: false,\n    clinicalEvidence: false,\n    productUsage: false\n  });\n  // Load conditions on component mount\n  useEffect(() => {\n    // Check if saved data exists in localStorage\n    const savedData = localStorage.getItem('conditions_data');\n    const savedCategories = localStorage.getItem('categories_data');\n    const savedDdsTypes = localStorage.getItem('dds_types_data');\n    \n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setConditions(parsedData);\n      setFilteredConditions(parsedData);\n      \n      // Set default selected condition if data exists\n      if (parsedData.length > 0) {\n        setSelectedCondition(parsedData[0]);\n        setActiveTab(parsedData[0].phases[0]);\n      }\n    } else {\n      // Use imported data if no saved data exists\n      setConditions(conditionsDataImport);\n      setFilteredConditions(conditionsDataImport);\n      \n      // Set default selected condition if data exists\n      if (conditionsDataImport.length > 0) {\n        setSelectedCondition(conditionsDataImport[0]);\n        setActiveTab(conditionsDataImport[0].phases[0]);\n      }\n    }\n    \n    // Load categories if available\n    if (savedCategories) {\n      try {\n        const parsedCategories = JSON.parse(savedCategories);\n        if (Array.isArray(parsedCategories) && parsedCategories.length > 0) {\n          // Ensure 'All' is the first option\n          if (!parsedCategories.includes('All')) {\n            parsedCategories.unshift('All');\n          } else {\n            // If 'All' exists but is not the first element, remove it and add it to the beginning\n            const filteredCategories = parsedCategories.filter(c => c !== 'All');\n            setCategoryOptions(['All', ...filteredCategories]);\n          }\n        }\n      } catch (error) {\n        console.error('Error parsing saved categories:', error);\n      }\n    }\n    \n    // Load DDS types if available\n    if (savedDdsTypes) {\n      try {\n        const parsedDdsTypes = JSON.parse(savedDdsTypes);\n        if (Array.isArray(parsedDdsTypes) && parsedDdsTypes.length > 0) {\n          // Ensure 'All' is the first option\n          if (!parsedDdsTypes.includes('All')) {\n            parsedDdsTypes.unshift('All');\n          } else {\n            // If 'All' exists but is not the first element, remove it and add it to the beginning\n            const filteredDdsTypes = parsedDdsTypes.filter(d => d !== 'All');\n            setDdsTypeOptions(['All', ...filteredDdsTypes]);\n          }\n        }\n      } catch (error) {\n        console.error('Error parsing saved DDS types:', error);\n      }\n    }\n  }, []);\n\n  // Filter conditions based on selected filters and search query\n  useEffect(() => {\n    let filtered = [...conditions];\n    \n    // Filter by category\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.category === categoryFilter);\n    }\n    \n    // Filter by DDS type\n    if (ddsTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.dds.includes(ddsTypeFilter));\n    }\n    \n    // Filter by patient type\n    if (patientTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => {\n        // Check if condition's patientType includes the selected patient type\n        // This assumes patientType can be a string like \"Types 1 to 4\" or an array\n        if (Array.isArray(condition.patientType)) {\n          return condition.patientType.includes(`Type ${patientTypeFilter}`);\n        } else {\n          return condition.patientType.includes(patientTypeFilter);\n        }\n      });\n    }\n    \n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(condition => \n        condition.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    setFilteredConditions(filtered);\n    \n    // Update selected condition if it's no longer in filtered results\n    if (filtered.length > 0 && (!selectedCondition || \n        !filtered.find(c => c.name === selectedCondition.name))) {\n      setSelectedCondition(filtered[0]);\n      setActiveTab(filtered[0].phases[0]);\n    }\n  }, [conditions, categoryFilter, ddsTypeFilter, patientTypeFilter, searchQuery, selectedCondition]);\n\n  // Generate patient-specific product recommendations when selectedCondition changes\n  useEffect(() => {\n    if (!selectedCondition) return;\n    \n    // Create a map of phase -> patientType -> products\n    let patientProducts = {};\n    \n    // Check if condition has patientSpecificConfig from admin panel\n    if (selectedCondition.patientSpecificConfig) {\n      // Use the configuration directly\n      patientProducts = JSON.parse(JSON.stringify(selectedCondition.patientSpecificConfig));\n    } else {\n      // Fall back to the old method of inferring patient-specific products\n      // Process each phase\n      selectedCondition.phases.forEach(phase => {\n        patientProducts[phase] = {\n          'All': [...(selectedCondition.products[phase] || [])], // Default 'All' includes all products\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n        \n        // Extract patient-specific products from the condition's products\n        const phaseProducts = selectedCondition.products[phase] || [];\n        \n        // Process each product in this phase\n        phaseProducts.forEach(product => {\n          // Handle Type 3/4 Only products\n          if (product.includes('(Type 3/4 Only)')) {\n            const baseProduct = product.replace(' (Type 3/4 Only)', '');\n            patientProducts[phase]['3'].push(baseProduct);\n            patientProducts[phase]['4'].push(baseProduct);\n          } \n          // Regular products apply to all patient types\n          else {\n            patientProducts[phase]['1'].push(product);\n            patientProducts[phase]['2'].push(product);\n            patientProducts[phase]['3'].push(product);\n            patientProducts[phase]['4'].push(product);\n          }\n        });\n      });\n    }\n    \n    setPatientSpecificProducts(patientProducts);\n  }, [selectedCondition]);\n\n  // Filter products based on selected phase and patient type\n  useEffect(() => {\n    if (selectedCondition && activeTab && patientSpecificProducts[activeTab]) {\n      // If a specific patient type is selected, show that type's products\n      if (activePatientType !== 'All') {\n        setFilteredProducts(patientSpecificProducts[activeTab][activePatientType] || []);\n      } else {\n        // If 'All' is selected, show all products for this phase\n        setFilteredProducts(patientSpecificProducts[activeTab]['All'] || []);\n      }\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [selectedCondition, activeTab, activePatientType, patientSpecificProducts]);\n\n\n  // Get patient types from PATIENT_TYPES constant\n  const patientTypes = ['All', '1', '2', '3', '4'];\n\n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActiveTab(condition.phases[0]);\n    setActivePatientType('All'); // Reset patient type filter when changing condition\n  };\n\n  // Handle patient type selection for product filtering\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n\n  // Handle product selection for modal\n  const handleProductSelect = (product) => {\n    setSelectedProduct({\n      name: product,\n      details: selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')]\n    });\n    setModalOpen(true);\n  };\n\n  // Handle opening research modal for a specific product\n  const handleOpenResearch = (product) => {\n    setSelectedResearchProduct(product);\n    setResearchModalOpen(true);\n  };\n  \n  // Get research articles for a specific product in the current condition\n  const getProductResearch = (productName) => {\n    if (!selectedCondition || !productName) return [];\n    \n    const cleanProductName = productName.replace(' (Type 3/4 Only)', '');\n    \n    // Check if condition has condition-specific research for this product\n    if (\n      selectedCondition.conditionSpecificResearch && \n      selectedCondition.conditionSpecificResearch[cleanProductName]\n    ) {\n      return selectedCondition.conditionSpecificResearch[cleanProductName];\n    }\n    \n    // If not, check if product has general research\n    if (\n      selectedCondition.productDetails && \n      selectedCondition.productDetails[cleanProductName] && \n      selectedCondition.productDetails[cleanProductName].researchArticles\n    ) {\n      return selectedCondition.productDetails[cleanProductName].researchArticles;\n    }\n    \n    // As a fallback, generate mock research data\n    return [\n      { \n        title: `Clinical application of ${cleanProductName} in ${selectedCondition.name}`, \n        author: \"Smith et al., Journal of Dental Research, 2023\",\n        abstract: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam in odio ac nunc efficitur vestibulum.\"\n      },\n      { \n        title: `Efficacy of ${cleanProductName} in dental practice`, \n        author: \"Johnson et al., Periodontology Today, 2022\",\n        abstract: \"Maecenas vel ante vel leo dictum eleifend. Suspendisse potenti.\"\n      },\n      { \n        title: `Comparative study of ${cleanProductName} vs standard treatments`, \n        author: \"Williams et al., Oral Surgery Journal, 2023\",\n        abstract: \"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae.\"\n      }\n    ];\n  };\n\n  // Determine if a phase has products for the selected condition\n  const hasProductsForPhase = (phase) => {\n    return selectedCondition && \n           selectedCondition.products && \n           selectedCondition.products[phase] && \n           selectedCondition.products[phase].length > 0;\n  };\n\n  // Toggle diagnosis wizard\n  const toggleWizard = () => {\n    setWizardOpen(!wizardOpen);\n  };\n  \n  // Toggle admin panel\n  const toggleAdmin = () => {\n    setAdminOpen(!adminOpen);\n  };\n  // Handle conditions update from admin panel\n  const handleConditionsUpdate = (updatedConditions, updatedCategories, updatedDdsTypes) => {\n    // Update conditions\n    setConditions(updatedConditions);\n    \n    // Update categories if provided\n    if (updatedCategories && Array.isArray(updatedCategories)) {\n      // Make sure 'All' is always the first option\n      let sortedCategories;\n      if (updatedCategories.includes('All')) {\n        const filteredCategories = updatedCategories.filter(c => c !== 'All');\n        sortedCategories = ['All', ...filteredCategories];\n      } else {\n        sortedCategories = ['All', ...updatedCategories];\n      }\n      \n      // Update the categories\n      setCategoryOptions(sortedCategories);\n      \n      // Keep current filter if valid, otherwise reset to 'All'\n      if (categoryFilter !== 'All' && !sortedCategories.includes(categoryFilter)) {\n        setCategoryFilter('All');\n      }\n    }\n    \n    // Update DDS types if provided\n    if (updatedDdsTypes && Array.isArray(updatedDdsTypes)) {\n      // Make sure 'All' is always the first option\n      let sortedDdsTypes;\n      if (updatedDdsTypes.includes('All')) {\n        const filteredDdsTypes = updatedDdsTypes.filter(d => d !== 'All');\n        sortedDdsTypes = ['All', ...filteredDdsTypes];\n      } else {\n        sortedDdsTypes = ['All', ...updatedDdsTypes];\n      }\n      \n      // Update the DDS types\n      setDdsTypeOptions(sortedDdsTypes);\n      \n      // Keep current filter if valid, otherwise reset to 'All'\n      if (ddsTypeFilter !== 'All' && !sortedDdsTypes.includes(ddsTypeFilter)) {\n        setDdsTypeFilter('All');\n      }\n    }\n    \n    // Update filtered conditions based on current filters\n    let filtered = [...updatedConditions];\n    \n    // Apply existing filters\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.category === categoryFilter);\n    }\n    \n    if (ddsTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => condition.dds.includes(ddsTypeFilter));\n    }\n    \n    if (patientTypeFilter !== 'All') {\n      filtered = filtered.filter(condition => {\n        if (Array.isArray(condition.patientType)) {\n          return condition.patientType.includes(`Type ${patientTypeFilter}`);\n        } else {\n          return condition.patientType.includes(patientTypeFilter);\n        }\n      });\n    }\n    \n    if (searchQuery) {\n      filtered = filtered.filter(condition => \n        condition.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    setFilteredConditions(filtered);\n    \n    // If previously selected condition exists in updated data, keep it selected\n    if (selectedCondition) {\n      const updatedSelectedCondition = updatedConditions.find(c => c.name === selectedCondition.name);\n      if (updatedSelectedCondition) {\n        setSelectedCondition(updatedSelectedCondition);\n        \n        // Ensure active tab is valid for updated condition\n        if (updatedSelectedCondition.phases && !updatedSelectedCondition.phases.includes(activeTab)) {\n          setActiveTab(updatedSelectedCondition.phases[0]);\n        }\n      } else {\n        // If selected condition no longer exists, select the first condition\n        if (updatedConditions.length > 0) {\n          setSelectedCondition(updatedConditions[0]);\n          setActiveTab(updatedConditions[0].phases[0]);\n        } else {\n          setSelectedCondition(null);\n          setActiveTab('');\n        }\n      }\n    }\n  };\n  return (\n    \n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Clinical Chart Tool for Dental Sales Reps</h1>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={toggleWizard}\n              className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <Stethoscope size={18} className=\"mr-2\" />\n              Diagnosis Wizard\n            </button>\n            <button\n              onClick={toggleAdmin}\n              className=\"inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n            >\n              <Settings size={18} className=\"mr-2\" />\n              Admin\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters Section */}\n        <div className=\"bg-white shadow rounded-lg p-4 mb-6\">\n          <h2 className=\"text-lg font-medium mb-4\">Filters</h2>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            {/* Category Filter */}\n            <div>\n              <label htmlFor=\"category-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Condition Category\n              </label>\n              <Select.Root value={categoryFilter} onValueChange={setCategoryFilter}>\n                <Select.Trigger id=\"category-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {categoryOptions.map((category) => (\n                        <Select.Item\n                          key={category}\n                          value={category}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{category}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n            {/* DDS Type Filter */}\n            <div>\n              <label htmlFor=\"dds-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                DDS Type\n              </label>\n              <Select.Root value={ddsTypeFilter} onValueChange={setDdsTypeFilter}>\n                <Select.Trigger id=\"dds-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {ddsTypeOptions.map((dds) => (\n                        <Select.Item\n                          key={dds}\n                          value={dds}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>{dds}</Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Patient Type Filter */}\n            <div>\n              <label htmlFor=\"patient-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Patient Type\n              </label>\n              <Select.Root value={patientTypeFilter} onValueChange={setPatientTypeFilter}>\n                <Select.Trigger id=\"patient-filter\" className=\"w-full flex justify-between items-center px-3 py-2 text-sm bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                  <Select.Value />\n                  <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                </Select.Trigger>\n                <Select.Portal>\n                  <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                    <Select.Viewport className=\"p-1\">\n                      {patientTypes.map((type) => (\n                        <Select.Item\n                          key={type}\n                          value={type}\n                          className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                        >\n                          <Select.ItemText>\n                            {type === 'All' ? 'All' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                          </Select.ItemText>\n                        </Select.Item>\n                      ))}\n                    </Select.Viewport>\n                  </Select.Content>\n                </Select.Portal>\n              </Select.Root>\n            </div>\n\n            {/* Search */}\n            <div>\n              <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Search Condition\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search size={18} className=\"text-gray-400\" />\n                </div>\n                <input\n                  id=\"search\"\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  placeholder=\"Search conditions...\"\n                />\n                {searchQuery && (\n                  <button\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setSearchQuery('')}\n                  >\n                    <X size={18} className=\"text-gray-400 hover:text-gray-600\" />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n          {/* Conditions List */}\n          <div className=\"lg:col-span-1 bg-white shadow rounded-lg overflow-hidden\">\n            <h2 className=\"text-lg font-medium p-4 border-b\">Conditions</h2>\n            {filteredConditions.length === 0 ? (\n              <div className=\"p-4 text-gray-500\">No conditions match the selected filters.</div>\n            ) : (\n              <ul className=\"divide-y divide-gray-200 max-h-[70vh] overflow-y-auto\">\n                {filteredConditions.map((condition) => (\n                  <li \n                    key={condition.name}\n                    className={clsx(\n                      \"px-4 py-3 hover:bg-gray-50 cursor-pointer\",\n                      selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-50\" : \"\"\n                    )}\n                    onClick={() => handleConditionSelect(condition)}\n                  >\n                    <div className=\"font-medium\">{condition.name}</div>\n                    <div className=\"text-sm text-gray-500\">{condition.category}</div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {condition.dds.join(', ')} | {condition.patientType}\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n          {/* Selected Condition Details */}\n          <div className=\"lg:col-span-3\">\n            {selectedCondition ? (\n              <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n                <div className=\"p-4 border-b\">\n                  <h2 className=\"text-xl font-semibold\">{selectedCondition.name}</h2>\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    <span className=\"mr-2\">{selectedCondition.category}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.dds.join(', ')}</span>\n                    <span className=\"mr-2\">|</span>\n                    <span>{selectedCondition.patientType}</span>\n                  </div>\n                  \n                  {/* Recommended Products Section - Moved to top */}\n                  <div className=\"mt-6 mb-4\">\n                    <div className=\"flex justify-between items-center mb-3\">\n                      <h3 className=\"text-lg font-semibold text-gray-800\">Recommended Products</h3>\n                      \n                      {/* Published Research Button */}\n                      <button\n                        onClick={() => setResearchModalOpen(true)}\n                        className=\"py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center text-sm\"\n                      >\n                        <BookOpen size={16} className=\"mr-2\" />\n                        View Published Research\n                      </button>\n                    </div>\n                    \n                    {/* Patient Type Filter for Products */}\n                    <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-100 mb-4\">\n                      <div className=\"flex flex-wrap items-center gap-4\">\n                        <div className=\"flex-shrink-0\">\n                          <span className=\"text-sm font-medium text-blue-700\">Show Recommendations For:</span>\n                        </div>\n                        \n                        {/* Patient Type Selection */}\n                        <div className=\"flex-grow\">\n                          <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n                            <Select.Trigger className=\"flex justify-between items-center px-3 py-2 text-sm bg-white border border-blue-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                              <div className=\"flex items-center\">\n                                <Filter size={16} className=\"mr-2 text-blue-500\" />\n                                <Select.Value placeholder=\"Select Patient Type\" />\n                              </div>\n                              <Select.Icon><ChevronDown size={18} /></Select.Icon>\n                            </Select.Trigger>\n                            <Select.Portal>\n                              <Select.Content className=\"overflow-hidden bg-white rounded-md shadow-lg border\">\n                                <Select.Viewport className=\"p-1\">\n                                  {patientTypes.map((type) => (\n                                    <Select.Item\n                                      key={type}\n                                      value={type}\n                                      className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer focus:outline-none focus:bg-gray-100\"\n                                    >\n                                      <Select.ItemText>\n                                        {type === 'All' ? 'All Patient Types' : `Type ${type}: ${PATIENT_TYPES[`Type ${type}`]}`}\n                                      </Select.ItemText>\n                                    </Select.Item>\n                                  ))}\n                                </Select.Viewport>\n                              </Select.Content>\n                            </Select.Portal>\n                          </Select.Root>\n                        </div>\n                      </div>\n                      \n                      {activePatientType !== 'All' && (\n                        <div className=\"mt-2 text-sm text-blue-700 flex items-center\">\n                          <Info size={14} className=\"mr-1\" />\n                          Showing specific recommendations for: \n                          <span className=\"font-medium ml-1\">\n                            {`Type ${activePatientType}: ${PATIENT_TYPES[`Type ${activePatientType}`]}`}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Treatment Phases Tabs */}\n                    <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n                      <Tabs.List className=\"flex border-b divide-x divide-gray-200 bg-gray-50 rounded-t-lg\">\n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Trigger\n                            key={phase}\n                            value={phase}\n                            className={clsx(\n                              \"flex-1 px-4 py-3 text-sm font-medium text-center focus:outline-none\",\n                              activeTab === phase \n                                ? \"text-blue-600 border-b-2 border-blue-600 bg-white\"\n                                : \"text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                            )}\n                          >\n                            {phase} Phase\n                            {hasProductsForPhase(phase) && (\n                              <span className=\"ml-2 px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800\">\n                                {selectedCondition.products[phase].length}\n                              </span>\n                            )}\n                          </Tabs.Trigger>\n                        ))}\n                      </Tabs.List>\n                      {selectedCondition.phases.map((phase) => (\n                        <Tabs.Content key={phase} value={phase} className=\"p-4 bg-white border border-t-0 rounded-b-lg\">\n                          {filteredProducts.length > 0 ? (\n                            <div className=\"space-y-4\">\n                              {filteredProducts.map((product) => (\n                                <div \n                                  key={product}\n                                  className=\"bg-white border border-blue-200 rounded-lg p-5 hover:bg-blue-50 shadow-sm\"\n                                >\n                                  <div className=\"flex justify-between items-start\">\n                                    <h4 className=\"text-lg font-semibold text-blue-800\">{product}</h4>\n                                  </div>\n                                  {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')] && (\n                                    <div className=\"mt-2 space-y-2 text-gray-700\">\n                                      <div>\n                                        <span className=\"font-medium\">Usage: </span>\n                                        {selectedCondition.productDetails[product.replace(' (Type 3/4 Only)', '')].usage}\n                                      </div>\n                                    </div>\n                                  )}\n                                  \n                                  {/* Tag to show this is specific for Type 3/4 patients */}\n                                  {product.includes('(Type 3/4 Only)') && (\n                                    <div className=\"mt-2\">\n                                      <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-amber-100 text-amber-800\">\n                                        Recommended for Type 3/4 patients only\n                                      </span>\n                                    </div>\n                                  )}\n                                </div>\n                              ))}\n                            </div>\n                          ) : activePatientType !== 'All' ? (\n                            <div className=\"text-gray-500 bg-gray-50 p-4 rounded-md border\">\n                              <div>\n                                <strong>No products recommended</strong> for {phase} phase with patient Type {activePatientType}.\n                                <p className=\"mt-2\">Based on clinical guidelines, no product is necessary for this specific case.</p>\n                              </div>\n                            </div>\n                          ) : (\n                            <div className=\"text-gray-500\">No products recommended for this phase.</div>\n                          )}\n                        </Tabs.Content>\n                      ))}\n                    </Tabs.Root>\n                  </div>\n                  \n                  {/* Additional Information Section - AFTER products */}\n                  <div className=\"mt-6 space-y-2\">\n                    <h3 className=\"text-lg font-medium text-gray-700 mb-3\">Additional Information</h3>\n                    \n                    {/* Key Pitch Points */}\n                    <div \n                      className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                        expandedSections.pitchPoints ? 'bg-blue-100' : 'bg-blue-50 hover:bg-blue-100'\n                      }`}\n                      onClick={() => setExpandedSections(prev => ({ \n                        ...prev, \n                        pitchPoints: !prev.pitchPoints \n                      }))}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"font-medium text-blue-800\">Key Pitch Points</div>\n                        <div className=\"text-blue-600\">\n                          {expandedSections.pitchPoints ? \n                            <ChevronDown size={18} /> : \n                            <ChevronRight size={18} />\n                          }\n                        </div>\n                      </div>\n                      {expandedSections.pitchPoints && (\n                        <div className=\"text-blue-700 mt-2\">{selectedCondition.pitchPoints || 'No pitch points available.'}</div>\n                      )}\n                    </div>\n                    {/* Scientific Rationale - New Section */}\n                    <div \n                      className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                        expandedSections.scientificRationale ? 'bg-green-100' : 'bg-green-50 hover:bg-green-100'\n                      }`}\n                      onClick={() => setExpandedSections(prev => ({ \n                        ...prev, \n                        scientificRationale: !prev.scientificRationale \n                      }))}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"font-medium text-green-800\">Scientific Rationale</div>\n                        <div className=\"text-green-600\">\n                          {expandedSections.scientificRationale ? \n                            <ChevronDown size={18} /> : \n                            <ChevronRight size={18} />\n                          }\n                        </div>\n                      </div>\n                      {expandedSections.scientificRationale && (\n                        <div className=\"text-green-700 mt-2\">\n                          {selectedCondition.scientificRationale || \n                            'Scientific foundation for the recommended treatment approach.'}\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Clinical Evidence - Renamed from Clinical Rationale */}\n                    <div \n                      className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                        expandedSections.clinicalEvidence ? 'bg-indigo-100' : 'bg-indigo-50 hover:bg-indigo-100'\n                      }`}\n                      onClick={() => setExpandedSections(prev => ({ \n                        ...prev, \n                        clinicalEvidence: !prev.clinicalEvidence \n                      }))}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"font-medium text-indigo-800\">Clinical Evidence</div>\n                        <div className=\"text-indigo-600\">\n                          {expandedSections.clinicalEvidence ? \n                            <ChevronDown size={18} /> : \n                            <ChevronRight size={18} />\n                          }\n                        </div>\n                      </div>\n                      {expandedSections.clinicalEvidence && (\n                        <div className=\"text-indigo-700 mt-2\">\n                          {selectedCondition.clinicalEvidence || \n                            'Clinical evidence supporting the treatment recommendations for this condition.'}\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Competitive Advantage */}\n                    <div \n                      className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                        expandedSections.competitiveAdvantage ? 'bg-purple-100' : 'bg-purple-50 hover:bg-purple-100'\n                      }`}\n                      onClick={() => setExpandedSections(prev => ({ \n                        ...prev, \n                        competitiveAdvantage: !prev.competitiveAdvantage \n                      }))}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"font-medium text-purple-800\">Competitive Advantage</div>\n                        <div className=\"text-purple-600\">\n                          {expandedSections.competitiveAdvantage ? \n                            <ChevronDown size={18} /> : \n                            <ChevronRight size={18} />\n                          }\n                        </div>\n                      </div>\n                      {expandedSections.competitiveAdvantage && (\n                        <div className=\"text-purple-700 mt-2\">\n                          {selectedCondition.competitiveAdvantage || 'No competitive advantage information available.'}\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Handling Objections */}\n                    <div \n                      className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                        expandedSections.handlingObjections ? 'bg-amber-100' : 'bg-amber-50 hover:bg-amber-100'\n                      }`}\n                      onClick={() => setExpandedSections(prev => ({ \n                        ...prev, \n                        handlingObjections: !prev.handlingObjections \n                      }))}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"font-medium text-amber-800\">Handling Objections</div>\n                        <div className=\"text-amber-600\">\n                          {expandedSections.handlingObjections ? \n                            <ChevronDown size={18} /> : \n                            <ChevronRight size={18} />\n                          }\n                        </div>\n                      </div>\n                      {expandedSections.handlingObjections && (\n                        <div className=\"text-amber-700 mt-2\">\n                          {selectedCondition.handlingObjections || 'No objection handling information available.'}\n                        </div>\n                      )}\n                    </div>\n                    {/* Product Usage Instructions */}\n                    <div \n                      className={`p-3 rounded-md mb-2 cursor-pointer transition-colors ${\n                        expandedSections.productUsage ? 'bg-teal-100' : 'bg-teal-50 hover:bg-teal-100'\n                      }`}\n                      onClick={() => setExpandedSections(prev => ({ \n                        ...prev, \n                        productUsage: !prev.productUsage \n                      }))}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"font-medium text-teal-800\">Product Usage Instructions</div>\n                        <div className=\"text-teal-600\">\n                          {expandedSections.productUsage ? \n                            <ChevronDown size={18} /> : \n                            <ChevronRight size={18} />\n                          }\n                        </div>\n                      </div>\n                      {expandedSections.productUsage && (\n                        <div className=\"mt-2 space-y-3\">\n                          {selectedCondition.productDetails && Object.keys(selectedCondition.productDetails).length > 0 ? (\n                            Object.entries(selectedCondition.productDetails).map(([productName, details]) => (\n                              <div key={productName} className=\"bg-white border rounded-md p-3\">\n                                <h4 className=\"font-medium text-teal-800\">{productName}</h4>\n                                <p className=\"text-teal-700 mt-1\">\n                                  <span className=\"font-medium\">Usage: </span>\n                                  {details.usage || 'Usage instructions not available.'}\n                                </p>\n                              </div>\n                            ))\n                          ) : (\n                            <div className=\"text-teal-700\">No product usage information available.</div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-white shadow rounded-lg p-8 text-center text-gray-500\">\n                Select a condition to view details\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n      {/* Product Details Modal */}\n      <Dialog.Root open={modalOpen} onOpenChange={setModalOpen}>\n        <Dialog.Portal>\n          <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\n          <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-lg w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\">\n            <Dialog.Title className=\"text-xl font-semibold text-gray-900 mb-2\">\n              {selectedProduct?.name}\n            </Dialog.Title>\n            <Dialog.Description className=\"text-sm text-gray-500 mb-4\">\n              Product information and recommendation details\n            </Dialog.Description>\n            \n            {selectedProduct && selectedProduct.details && (\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-800 mb-1\">Usage Instructions</h4>\n                  <p className=\"text-blue-700\">{selectedProduct.details.usage}</p>\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-green-800 mb-1\">Scientific Rationale</h4>\n                  <p className=\"text-green-700\">{selectedProduct.details.rationale || 'No scientific rationale provided.'}</p>\n                </div>\n                \n                <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-indigo-800 mb-1\">Clinical Evidence</h4>\n                  <p className=\"text-indigo-700\">{selectedProduct.details.clinicalEvidence || selectedProduct.details.rationale || 'No clinical evidence provided.'}</p>\n                </div>\n                \n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-purple-800 mb-1\">Competitive Advantage</h4>\n                  <p className=\"text-purple-700\">{selectedProduct.details.competitive}</p>\n                </div>\n                \n                <div className=\"bg-amber-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-amber-800 mb-1\">Handling Objections</h4>\n                  <p className=\"text-amber-700\">{selectedProduct.details.objection}</p>\n                </div>\n                \n                <div className=\"flex gap-4\">\n                  {/* Research Articles Button */}\n                  <button\n                    onClick={() => {\n                      setSelectedResearchProduct(selectedProduct.name);\n                      setResearchModalOpen(true);\n                      setModalOpen(false);\n                    }}\n                    className=\"flex-1 py-3 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 flex items-center justify-center\"\n                  >\n                    <BookOpen size={20} className=\"mr-2\" />\n                    View Published Research\n                  </button>\n                  \n                  {selectedProduct.details.factSheet && selectedProduct.details.factSheet !== '#' && (\n                    <a \n                      href={selectedProduct.details.factSheet}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"flex-1 py-3 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\"\n                    >\n                      <FileText size={20} className=\"mr-2\" />\n                      View Fact Sheet\n                    </a>\n                  )}\n                </div>\n              </div>\n            )}\n            <div className=\"mt-6 flex justify-end\">\n              <Dialog.Close asChild>\n                <button\n                  className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-transparent rounded-md hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                >\n                  Close\n                </button>\n              </Dialog.Close>\n            </div>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n      {/* Published Research Modal */}\n      <Dialog.Root open={researchModalOpen} onOpenChange={setResearchModalOpen}>\n        <Dialog.Portal>\n          <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\n          <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-3xl w-[90vw] bg-white rounded-lg shadow-xl p-6 max-h-[90vh] overflow-y-auto\">\n            <Dialog.Title className=\"text-xl font-semibold text-gray-900 flex items-center\">\n              <BookOpen size={24} className=\"mr-2 text-indigo-600\" />\n              {selectedResearchProduct ? \n                `Published Research for ${selectedResearchProduct}` : \n                `Published Research for ${selectedCondition?.name}`}\n            </Dialog.Title>\n            <Dialog.Description className=\"text-sm text-gray-500 mt-1 mb-4\">\n              Scientific articles and studies supporting clinical recommendations\n            </Dialog.Description>\n            \n            {selectedCondition && (\n              <div className=\"space-y-6\">\n                {selectedResearchProduct ? (\n                  // Show research for a specific product\n                  <>\n                    <h3 className=\"text-lg font-medium text-indigo-800 border-b pb-2\">\n                      {selectedResearchProduct.replace(' (Type 3/4 Only)', '')}\n                    </h3>\n                    \n                    {getProductResearch(selectedResearchProduct).length > 0 ? (\n                      getProductResearch(selectedResearchProduct).map((article, index) => (\n                        <div key={index} className=\"border-b pb-4 last:border-b-0 last:pb-0\">\n                          <h3 className=\"font-medium text-lg text-indigo-600\">\n                            {article.url ? (\n                              <a \n                                href={article.url} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"hover:underline flex items-start\"\n                              >\n                                <span className=\"mr-2\">{index + 1}.</span>\n                                <span>{article.title}</span>\n                              </a>\n                            ) : (\n                              <div className=\"flex items-start\">\n                                <span className=\"mr-2\">{index + 1}.</span>\n                                <span>{article.title}</span>\n                              </div>\n                            )}\n                          </h3>\n                          \n                          {article.author && (\n                            <p className=\"text-gray-600 mt-1 pl-6\">{article.author}</p>\n                          )}\n                          \n                          {article.abstract && (\n                            <div className=\"mt-3 pl-6\">\n                              <p className=\"text-gray-700\">{article.abstract}</p>\n                            </div>\n                          )}\n                          \n                          {article.url && (\n                            <div className=\"mt-3 pl-6\">\n                              <a \n                                href={article.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"text-indigo-600 hover:text-indigo-800 text-sm inline-flex items-center\"\n                              >\n                                <ExternalLink size={14} className=\"mr-1\" />\n                                <span>View Article</span>\n                              </a>\n                            </div>\n                          )}\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"py-10 text-center text-gray-500\">\n                        <BookOpen size={48} className=\"mx-auto mb-4 text-gray-300\" />\n                        <p>No research articles available for this product.</p>\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  // Show research for all products in the condition\n                  <>\n                    {filteredProducts.length > 0 ? (\n                      filteredProducts.map((product) => {\n                        const productResearch = getProductResearch(product);\n                        if (!productResearch || productResearch.length === 0) return null;\n                        \n                        return (\n                          <div key={product} className=\"mb-8\">\n                            <h3 className=\"text-lg font-medium text-indigo-800 border-b pb-2\">\n                              {product.replace(' (Type 3/4 Only)', '')}\n                            </h3>\n                            \n                            {productResearch.map((article, index) => (\n                              <div key={index} className=\"border-b pb-4 last:border-b-0 last:pb-0 mt-4\">\n                                <h4 className=\"font-medium text-lg text-indigo-600\">\n                                  {article.url ? (\n                                    <a \n                                      href={article.url} \n                                      target=\"_blank\" \n                                      rel=\"noopener noreferrer\"\n                                      className=\"hover:underline flex items-start\"\n                                    >\n                                      <span className=\"mr-2\">{index + 1}.</span>\n                                      <span>{article.title}</span>\n                                    </a>\n                                  ) : (\n                                    <div className=\"flex items-start\">\n                                      <span className=\"mr-2\">{index + 1}.</span>\n                                      <span>{article.title}</span>\n                                    </div>\n                                  )}\n                                </h4>\n                                \n                                {article.author && (\n                                  <p className=\"text-gray-600 mt-1 pl-6\">{article.author}</p>\n                                )}\n                                \n                                {article.abstract && (\n                                  <div className=\"mt-3 pl-6\">\n                                    <p className=\"text-gray-700\">{article.abstract}</p>\n                                  </div>\n                                )}\n                                \n                                {article.url && (\n                                  <div className=\"mt-3 pl-6\">\n                                    <a \n                                      href={article.url}\n                                      target=\"_blank\"\n                                      rel=\"noopener noreferrer\"\n                                      className=\"text-indigo-600 hover:text-indigo-800 text-sm inline-flex items-center\"\n                                    >\n                                      <ExternalLink size={14} className=\"mr-1\" />\n                                      <span>View Article</span>\n                                    </a>\n                                  </div>\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                        );\n                      })\n                    ) : (\n                      <div className=\"py-10 text-center text-gray-500\">\n                        <BookOpen size={48} className=\"mx-auto mb-4 text-gray-300\" />\n                        <p>No research articles available for the current selection.</p>\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            )}\n            <div className=\"mt-6 flex justify-end\">\n              <Dialog.Close asChild>\n                <button\n                  className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200\"\n                >\n                  Close\n                </button>\n              </Dialog.Close>\n            </div>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n      {/* Diagnosis Wizard */}\n      {wizardOpen && (\n        <DiagnosisWizard \n          conditions={conditions} \n          onClose={toggleWizard} \n        />\n      )}\n      \n      {/* Admin Panel */}\n      {adminOpen && (\n        <AdminPanel \n          conditions={conditions}\n          onConditionsUpdate={handleConditionsUpdate}\n          onClose={toggleAdmin}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ClinicalChartMockup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}