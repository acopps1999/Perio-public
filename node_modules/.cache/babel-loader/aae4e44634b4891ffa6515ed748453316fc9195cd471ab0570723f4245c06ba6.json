{"ast":null,"code":"var _jsxFileName = \"/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async data => {\n  // Simulate API call\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      resolve({\n        success: true\n      });\n    }, 1500);\n  });\n};\nfunction AdminPanel({\n  conditions,\n  onConditionsUpdate,\n  onClose\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n\n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n\n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n\n      // Extract unique categories\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      setCategories(uniqueCategories);\n\n      // Extract unique DDS types\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      setDdsTypes(allDdsTypes);\n\n      // Extract all products\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      setAllProducts(Array.from(productsSet));\n\n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n\n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = condition => {\n    if (!condition) return;\n    const patientProducts = {};\n\n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n\n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n\n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        }\n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n\n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n\n      // For conditions where Type 3/4 get additional products\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Acute' || condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute') {\n        if (patientProducts[phase]['3'].includes('Synvaza') && !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    setPatientSpecificProducts(patientProducts);\n  };\n  const handleEditProduct = product => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = {\n      name: product,\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    };\n\n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#'\n        };\n        break;\n      }\n    }\n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n      const result = await saveToBackend(updatedConditions);\n      if (result.success) {\n        onConditionsUpdate(updatedConditions);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n\n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n\n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n\n    // Update each phase's products\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n\n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      ['1', '2', '3', '4'].forEach(patientType => {\n        patientTypesForPhase[patientType].forEach(product => {\n          if (!product.includes('(Type')) {\n            commonProducts.add(product);\n          }\n        });\n      });\n\n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n\n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      patientTypesForPhase['3'].forEach(product => {\n        if (patientTypesForPhase['4'].includes(product) && !patientTypesForPhase['1'].includes(product) && !patientTypesForPhase['2'].includes(product) && !product.includes('(Type')) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n\n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n\n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n\n      // Ensure all products have product details\n      const allProductsToCheck = [...commonProducts, ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', ''))];\n\n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n\n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n\n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#'\n          };\n\n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName]\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    return updatedConditions;\n  };\n\n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n\n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n\n  // Handle condition selection\n  const handleConditionSelect = condition => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n\n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => condition.name === conditionId ? {\n      ...condition,\n      [field]: value\n    } : condition));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => {\n      if (condition.name === conditionId) {\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        if (!updatedProductDetails[productName]) {\n          updatedProductDetails[productName] = {};\n        }\n        updatedProductDetails[productName][field] = value;\n        return {\n          ...condition,\n          productDetails: updatedProductDetails\n        };\n      }\n      return condition;\n    }));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = {\n        ...selectedCondition.productDetails\n      };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({\n        ...prev,\n        productDetails: updatedProductDetails\n      }));\n    }\n  };\n\n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = type => {\n    setActivePatientType(type);\n  };\n\n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n\n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n\n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => updated[phase][type].includes(productName));\n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      return updated;\n    });\n  };\n\n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n\n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n\n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    if (modalType === 'product') {\n      const productName = newItemData.name;\n      if (editingProductId && editingProductId !== productName) {\n        // Product name was changed - need to update all references\n        setEditedConditions(prev => prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = {\n            ...condition.products\n          };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => p === editingProductId ? productName : p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p);\n          });\n\n          // Update product details\n          const updatedProductDetails = {\n            ...condition.productDetails\n          };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          return {\n            ...condition,\n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        }));\n\n        // Update allProducts list\n        setAllProducts(prev => {\n          const index = prev.indexOf(editingProductId);\n          if (index !== -1) {\n            const updated = [...prev];\n            updated[index] = productName;\n            return updated;\n          }\n          return [...prev, productName];\n        });\n\n        // Update patient-specific products if currently editing\n        if (selectedCondition) {\n          setPatientSpecificProducts(prev => {\n            const updated = {\n              ...prev\n            };\n            Object.keys(updated).forEach(phase => {\n              Object.keys(updated[phase]).forEach(type => {\n                updated[phase][type] = updated[phase][type].map(p => p === editingProductId ? productName : p);\n              });\n            });\n            return updated;\n          });\n        }\n      } else if (editingProductId) {\n        // Only details changed, not the name\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }\n          return condition;\n        }));\n      } else {\n        // This is a new product (original code for adding a new product)\n        if (!allProducts.includes(productName)) {\n          setAllProducts(prev => [...prev, productName]);\n\n          // Add product details to all conditions that use it\n          setEditedConditions(prev => prev.map(condition => {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }));\n        }\n      }\n    } else if (modalType === 'condition') {\n      // ... keep existing code for condition\n    } else if (modalType === 'category') {\n      // ... keep existing code for category\n    } else if (modalType === 'ddsType') {\n      // ... keep existing code for ddsType\n    }\n    setShowAddModal(false);\n    setNewItemData({});\n    setEditingProductId(null);\n  };\n\n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({\n      type,\n      item\n    });\n    setShowDeleteModal(true);\n  };\n\n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const {\n      type,\n      item\n    } = itemToDelete;\n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n\n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => prev.map(condition => {\n        const updatedProducts = {\n          ...condition.products\n        };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => p !== item && p !== `${item} (Type 3/4 Only)`);\n        });\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        delete updatedProductDetails[item];\n        return {\n          ...condition,\n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      }));\n\n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n\n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    }\n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n\n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = phase => {\n    var _patientSpecificProdu2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border rounded-lg p-4 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Patient-Specific Product Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Filter by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n            value: activePatientType,\n            onValueChange: handlePatientTypeSelect,\n            children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n              className: \"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 15,\n                className: \"mr-1 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n              children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                className: \"bg-white rounded-md shadow-lg border min-w-[220px]\",\n                children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                  className: \"p-1\",\n                  children: Object.entries(PATIENT_TYPES).map(([type, label]) => /*#__PURE__*/_jsxDEV(Select.Item, {\n                    value: type,\n                    className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 685,\n                      columnNumber: 25\n                    }, this)\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), activePatientType !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          size: 15,\n          className: \"mr-1 flex-shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Configuring products specifically for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: PATIENT_TYPES[activePatientType]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 53\n          }, this), \". Products added here will only be recommended for this patient type.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: [\"Products for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            if (e.target.value) {\n              addProductToPatientType(phase, activePatientType, e.target.value);\n              e.target.value = ''; // Reset select\n            }\n          },\n          className: \"px-3 py-1 border border-gray-300 rounded-md text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Add product...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), allProducts.filter(product => {\n            var _patientSpecificProdu;\n            // Only show products that aren't already added for this patient type\n            if (!patientSpecificProducts[phase]) return true;\n            return !((_patientSpecificProdu = patientSpecificProducts[phase][activePatientType]) !== null && _patientSpecificProdu !== void 0 && _patientSpecificProdu.includes(product));\n          }).map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product,\n            children: product\n          }, product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), patientSpecificProducts[phase] && ((_patientSpecificProdu2 = patientSpecificProducts[phase][activePatientType]) === null || _patientSpecificProdu2 === void 0 ? void 0 : _patientSpecificProdu2.length) > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2 max-h-60 overflow-y-auto\",\n        children: patientSpecificProducts[phase][activePatientType].map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"bg-white border rounded-md p-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProductFromPatientType(phase, activePatientType, product),\n            className: \"text-red-500 hover:text-red-700 p-1\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 17\n          }, this)]\n        }, product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center text-gray-500 bg-gray-100 rounded-md\",\n        children: [\"No products configured for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-gray-500\",\n      children: \"No conditions data available to edit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Knowledge Base Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResetChanges,\n              className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n              disabled: isSaving,\n              children: \"Reset Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveChanges,\n              className: `px-3 py-1.5 rounded-md text-white text-sm flex items-center ${isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'}`,\n              disabled: isSaving,\n              children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Saving...\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Save, {\n                  size: 16,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 23\n                }, this), \"Save Changes\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-500 hover:text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(Check, {\n          size: 20,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }, this), \"Changes saved successfully!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n        value: activeTab,\n        onValueChange: setActiveTab,\n        children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n          className: \"flex border-b\",\n          children: [/*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"importExport\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"importExport\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Import/Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"conditions\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"conditions\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"products\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"products\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"categories\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"categories\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Categories & DDS Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"importExport\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-2\",\n              children: \"Knowledge Base Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Import and export your knowledge base data for backup purposes or to transfer between environments.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataImportExport, {\n            conditions: editedConditions,\n            onImport: importedData => {\n              setEditedConditions(importedData);\n              setIsEditing(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"conditions\",\n          className: \"flex-grow overflow-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/3 border-r p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-medium\",\n                  children: \"All Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCondition,\n                  className: \"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 892,\n                    columnNumber: 21\n                  }, this), \"Add New\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-1\",\n                children: editedConditions.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: clsx(\"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\", selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-100\" : \"hover:bg-gray-100\"),\n                  onClick: () => handleConditionSelect(condition),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-sm\",\n                      children: condition.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 910,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: condition.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 911,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 909,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      confirmDelete('condition', condition);\n                    },\n                    className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 920,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 23\n                  }, this)]\n                }, condition.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2/3 p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: selectedCondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Condition Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 934,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: selectedCondition.name,\n                      onChange: e => updateConditionField(selectedCondition.name, 'name', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 947,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedCondition.category,\n                      onChange: e => updateConditionField(selectedCondition.name, 'category', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: category,\n                        children: category\n                      }, category, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 956,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 950,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Patient Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 966,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: selectedCondition.patientType,\n                    onChange: e => updateConditionField(selectedCondition.name, 'patientType', e.target.value),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mt-1 text-xs text-gray-500\",\n                    children: \"Format: \\\"Types 1 to 4\\\" or \\\"Types 3 to 4\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 975,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 965,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"DDS Types\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 980,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.dds.map(dds => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [dds, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          },\n                          className: \"ml-1 text-blue-700 hover:text-blue-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 998,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 991,\n                          columnNumber: 31\n                        }, this)]\n                      }, dds, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 986,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 984,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 983,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => {\n                      if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                        const updatedDds = [...selectedCondition.dds, e.target.value];\n                        updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                      }\n                      e.target.value = ''; // Reset select\n                    },\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Add DDS Type...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1014,\n                      columnNumber: 25\n                    }, this), ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map(dds => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dds,\n                      children: dds\n                    }, dds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1016,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1004,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 979,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1025,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.pitchPoints,\n                    onChange: e => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1024,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Treatment Phases\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1038,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [phase, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                            updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          },\n                          className: \"ml-1 text-purple-700 hover:text-purple-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1056,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1049,\n                          columnNumber: 31\n                        }, this)]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1044,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1042,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1041,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"New phase name...\",\n                      className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      onKeyDown: e => {\n                        if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                          const updatedPhases = [...selectedCondition.phases, e.target.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          e.target.value = '';\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1063,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        const input = e.target.previousElementSibling;\n                        if (input.value && !selectedCondition.phases.includes(input.value)) {\n                          const updatedPhases = [...selectedCondition.phases, input.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          input.value = '';\n                        }\n                      },\n                      className: \"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\",\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1075,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1062,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Products by Phase\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1092,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n                    defaultValue: selectedCondition.phases[0],\n                    className: \"border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n                      className: \"flex border-b bg-gray-50\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n                        value: phase,\n                        className: clsx(\"flex-1 px-4 py-2 text-sm font-medium\", \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\", \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"),\n                        children: [phase, \" Phase\"]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1097,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1095,\n                      columnNumber: 25\n                    }, this), selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Content, {\n                      value: phase,\n                      className: \"p-4\",\n                      children: renderPatientTypeProductConfig(phase)\n                    }, phase, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1112,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1094,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1091,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Product Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1122,\n                    columnNumber: 23\n                  }, this), Object.keys(selectedCondition.productDetails || {}).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-6\",\n                    children: Object.keys(selectedCondition.productDetails).map(productName => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border rounded-md p-4 bg-gray-50\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-md mb-3\",\n                        children: productName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1128,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-3\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Usage Instructions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1133,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].usage || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'usage', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1136,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1132,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Clinical Rationale\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1151,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].rationale || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'rationale', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1154,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1150,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Competitive Advantage\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1169,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].competitive || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'competitive', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1172,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1168,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Objection Handling\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1187,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            value: selectedCondition.productDetails[productName].objection || '',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'objection', e.target.value),\n                            rows: 2,\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1190,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1186,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Fact Sheet Link\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1205,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            value: selectedCondition.productDetails[productName].factSheet || '#',\n                            onChange: e => updateProductDetail(selectedCondition.name, productName, 'factSheet', e.target.value),\n                            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1208,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"mt-1 text-xs text-gray-500\",\n                            children: \"Use # for placeholder or enter a valid URL\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1219,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1204,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1130,\n                        columnNumber: 31\n                      }, this)]\n                    }, productName, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1127,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1125,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm italic\",\n                    children: \"No product details available. Add products to phases first.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1228,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1121,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-10 text-gray-500\",\n                children: \"Select a condition to edit or create a new one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"products\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium\",\n              children: \"Product Library\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddProduct,\n              className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1251,\n                columnNumber: 17\n              }, this), \"Add New Product\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n            children: allProducts.map(product => {\n              var _editedConditions$, _editedConditions$$pr;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4 hover:bg-gray-50 group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-md\",\n                    children: product\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => confirmDelete('product', product),\n                    className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1265,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1261,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1259,\n                  columnNumber: 19\n                }, this), ((_editedConditions$ = editedConditions[0]) === null || _editedConditions$ === void 0 ? void 0 : (_editedConditions$$pr = _editedConditions$.productDetails) === null || _editedConditions$$pr === void 0 ? void 0 : _editedConditions$$pr[product]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-sm text-gray-600 space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Usage: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1272,\n                      columnNumber: 25\n                    }, this), editedConditions[0].productDetails[product].usage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1271,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Conditions: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1276,\n                      columnNumber: 25\n                    }, this), editedConditions.filter(c => Object.values(c.products || {}).some(products => products.includes(product) || products.includes(`${product} (Type 3/4 Only)`))).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1275,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1270,\n                  columnNumber: 21\n                }, this)]\n              }, product, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"categories\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1296,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCategory,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1301,\n                    columnNumber: 21\n                  }, this), \"Add Category\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1297,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-2\",\n                children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1312,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500\",\n                    children: [editedConditions.filter(c => c.category === category).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1313,\n                    columnNumber: 23\n                  }, this)]\n                }, category, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1308,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"DDS Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1324,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddDdsType,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1329,\n                    columnNumber: 21\n                  }, this), \"Add DDS Type\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1325,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-2\",\n                children: ddsTypes.map(ddsType => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: ddsType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1340,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500\",\n                    children: [editedConditions.filter(c => c.dds.includes(ddsType)).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1341,\n                    columnNumber: 23\n                  }, this)]\n                }, ddsType, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1336,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1334,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showAddModal,\n        onOpenChange: setShowAddModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-4\",\n              children: [modalType === 'condition' && 'Add New Condition', modalType === 'category' && 'Add New Category', modalType === 'ddsType' && 'Add New DDS Type', modalType === 'product' && 'Add New Product']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [modalType === 'condition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Condition Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1368,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1371,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1367,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1380,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newItemData.category || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      category: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: category,\n                      children: category\n                    }, category, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1389,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1383,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1379,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), modalType === 'category' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"Category Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1400,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1403,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1399,\n                columnNumber: 19\n              }, this), modalType === 'ddsType' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"DDS Type Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1414,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1417,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1413,\n                columnNumber: 19\n              }, this), modalType === 'product' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Product Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1429,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1432,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1428,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Usage Instructions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1441,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.usage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      usage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1444,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Clinical Rationale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1453,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.rationale || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      rationale: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1456,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1465,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitive || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitive: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1468,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Objection Handling\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1477,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.objection || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      objection: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1480,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1476,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1493,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmitNewItem,\n                disabled: !newItemData.name,\n                className: `px-3 py-1.5 rounded-md text-white text-sm ${newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'}`,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1498,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showDeleteModal,\n        onOpenChange: setShowDeleteModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-2 flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1518,\n                columnNumber: 17\n              }, this), \"Confirm Deletion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dialog.Description, {\n              className: \"text-gray-600 mb-4\",\n              children: [(itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'condition' && `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`, (itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'product' && `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1532,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1531,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDelete,\n                className: \"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1537,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1530,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1514,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 766,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"xZdfQKuwjBuI/kMmcPtCdhp06sI=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Save","Plus","Edit","Trash2","X","ChevronDown","Info","AlertTriangle","Lock","Check","User","Filter","clsx","DataImportExport","jsxDEV","_jsxDEV","Fragment","_Fragment","PATIENT_TYPES","saveToBackend","data","Promise","resolve","setTimeout","console","log","localStorage","setItem","JSON","stringify","success","AdminPanel","conditions","onConditionsUpdate","onClose","_s","activeTab","setActiveTab","editedConditions","setEditedConditions","selectedCondition","setSelectedCondition","editingProductId","setEditingProductId","categories","setCategories","ddsTypes","setDdsTypes","allProducts","setAllProducts","isEditing","setIsEditing","isSaving","setIsSaving","showSuccess","setShowSuccess","activePatientType","setActivePatientType","patientSpecificProducts","setPatientSpecificProducts","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showAddModal","setShowAddModal","modalType","setModalType","newItemData","setNewItemData","uniqueCategories","Set","map","c","category","allDdsTypes","forEach","condition","dds","includes","push","productsSet","productDetails","Object","keys","product","add","Array","from","length","firstCondition","initializePatientSpecificProducts","patientProducts","phases","phase","products","baseProduct","replace","name","handleEditProduct","usage","rationale","competitive","objection","factSheet","handleSaveChanges","updatedConditions","applyPatientSpecificProducts","result","error","parse","conditionIndex","findIndex","phaseProducts","patientTypesForPhase","commonProducts","patientType","type34Products","allProductsToCheck","p","cleanProductName","handleResetChanges","handleConditionSelect","updateConditionField","conditionId","field","value","prev","updateProductDetail","productName","updatedProductDetails","handlePatientTypeSelect","type","addProductToPatientType","updated","isInAllTypes","every","removeProductFromPatientType","filter","handleAddCondition","Prep","Acute","Maintenance","pitchPoints","handleAddCategory","handleAddDdsType","handleAddProduct","handleSubmitNewItem","updatedProducts","index","indexOf","confirmDelete","item","handleDelete","remainingConditions","renderPatientTypeProductConfig","_patientSpecificProdu2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Root","onValueChange","Trigger","size","Value","Icon","Portal","Content","Viewport","entries","label","Item","ItemText","onChange","e","target","_patientSpecificProdu","onClick","disabled","List","style","maxHeight","overflowY","onImport","importedData","stopPropagation","updatedDds","d","rows","updatedPhases","placeholder","onKeyDown","key","input","previousElementSibling","defaultValue","_editedConditions$","_editedConditions$$pr","values","some","ddsType","open","onOpenChange","Overlay","Title","Close","asChild","Description","_c","$RefreshReg$"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data) => {\n  // Simulate API call\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      resolve({ success: true });\n    }, 1500);\n  });\n};\n\nfunction AdminPanel({ conditions, onConditionsUpdate, onClose }) {\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  \n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n  \n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n  \n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n      \n      // Extract unique categories\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      setCategories(uniqueCategories);\n      \n      // Extract unique DDS types\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      setDdsTypes(allDdsTypes);\n      \n      // Extract all products\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      setAllProducts(Array.from(productsSet));\n      \n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n        \n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = (condition) => {\n    if (!condition) return;\n    \n    const patientProducts = {};\n    \n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n      \n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        } \n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n      \n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n      \n      // For conditions where Type 3/4 get additional products\n      if (\n        (condition.name === 'Gingival Recession Surgery' && phase === 'Acute') ||\n        (condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute')\n      ) {\n        if (patientProducts[phase]['3'].includes('Synvaza') && \n            !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  };\n\n  const handleEditProduct = (product) => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = { name: product, usage: '', rationale: '', competitive: '', objection: '', factSheet: '#' };\n    \n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#'\n        };\n        break;\n      }\n    }\n    \n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n      \n      const result = await saveToBackend(updatedConditions);\n      if (result.success) {\n        onConditionsUpdate(updatedConditions);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\nconst applyPatientSpecificProducts = () => {\n  if (!selectedCondition) return [...editedConditions];\n  \n  // Deep copy of edited conditions\n  const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n  \n  // Find the condition to update\n  const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n  if (conditionIndex === -1) return updatedConditions;\n  \n  // Update each phase's products\n  Object.keys(patientSpecificProducts).forEach(phase => {\n    const phaseProducts = [];\n    const patientTypesForPhase = patientSpecificProducts[phase];\n    \n    // Start with regular products (all patient types)\n    const commonProducts = new Set();\n    ['1', '2', '3', '4'].forEach(patientType => {\n      patientTypesForPhase[patientType].forEach(product => {\n        if (!product.includes('(Type')) {\n          commonProducts.add(product);\n        }\n      });\n    });\n    \n    // Add common products first\n    phaseProducts.push(...Array.from(commonProducts));\n    \n    // Check for Type 3/4 specific products\n    const type34Products = new Set();\n    patientTypesForPhase['3'].forEach(product => {\n      if (\n        patientTypesForPhase['4'].includes(product) && \n        !patientTypesForPhase['1'].includes(product) && \n        !patientTypesForPhase['2'].includes(product) &&\n        !product.includes('(Type')\n      ) {\n        type34Products.add(`${product} (Type 3/4 Only)`);\n      }\n    });\n    \n    // Add Type 3/4 specific products\n    phaseProducts.push(...Array.from(type34Products));\n    \n    // Update the condition's products for this phase\n    updatedConditions[conditionIndex].products[phase] = phaseProducts;\n    \n    // Ensure all products have product details\n    const allProductsToCheck = [...commonProducts, ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', ''))];\n    \n    // Initialize productDetails if it doesn't exist\n    if (!updatedConditions[conditionIndex].productDetails) {\n      updatedConditions[conditionIndex].productDetails = {};\n    }\n    \n    // Make sure all products have details\n    allProductsToCheck.forEach(product => {\n      const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n      \n      // If product doesn't have details yet, create empty details\n      if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n        updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n          usage: '',\n          rationale: '',\n          competitive: '',\n          objection: '',\n          factSheet: '#'\n        };\n        \n        // Try to find product details from other conditions\n        for (const condition of updatedConditions) {\n          if (condition.productDetails && condition.productDetails[cleanProductName]) {\n            updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n              ...condition.productDetails[cleanProductName]\n            };\n            break;\n          }\n        }\n      }\n    });\n  });\n  \n  return updatedConditions;\n};\n  \n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n    \n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n  \n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n  \n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => \n        condition.name === conditionId\n          ? { ...condition, [field]: value }\n          : condition\n      )\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({ ...prev, [field]: value }));\n    }\n  };\n  \n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.name === conditionId) {\n          const updatedProductDetails = { ...condition.productDetails };\n          if (!updatedProductDetails[productName]) {\n            updatedProductDetails[productName] = {};\n          }\n          updatedProductDetails[productName][field] = value;\n          return { ...condition, productDetails: updatedProductDetails };\n        }\n        return condition;\n      })\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = { ...selectedCondition.productDetails };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({ \n        ...prev, \n        productDetails: updatedProductDetails \n      }));\n    }\n  };\n  \n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n  \n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n      \n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n        \n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => \n          updated[phase][type].includes(productName)\n        );\n        \n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      \n      return updated;\n    });\n  };\n  \n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n        \n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      \n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n  \n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n  \n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n  setIsEditing(true);\n  \n  if (modalType === 'product') {\n    const productName = newItemData.name;\n    \n    if (editingProductId && editingProductId !== productName) {\n      // Product name was changed - need to update all references\n      setEditedConditions(prev => \n        prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = { ...condition.products };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => \n              p === editingProductId ? productName : \n              p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p\n            );\n          });\n          \n          // Update product details\n          const updatedProductDetails = { ...condition.productDetails };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          \n          return { \n            ...condition, \n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        })\n      );\n      \n      // Update allProducts list\n      setAllProducts(prev => {\n        const index = prev.indexOf(editingProductId);\n        if (index !== -1) {\n          const updated = [...prev];\n          updated[index] = productName;\n          return updated;\n        }\n        return [...prev, productName];\n      });\n      \n      // Update patient-specific products if currently editing\n      if (selectedCondition) {\n        setPatientSpecificProducts(prev => {\n          const updated = { ...prev };\n          Object.keys(updated).forEach(phase => {\n            Object.keys(updated[phase]).forEach(type => {\n              updated[phase][type] = updated[phase][type].map(p => \n                p === editingProductId ? productName : p\n              );\n            });\n          });\n          return updated;\n        });\n      }\n    } else if (editingProductId) {\n      // Only details changed, not the name\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          }\n          return condition;\n        })\n      );\n    } else {\n      // This is a new product (original code for adding a new product)\n      if (!allProducts.includes(productName)) {\n        setAllProducts(prev => [...prev, productName]);\n        \n        // Add product details to all conditions that use it\n        setEditedConditions(prev => \n          prev.map(condition => {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          })\n        );\n      }\n    }\n  } else if (modalType === 'condition') {\n    // ... keep existing code for condition\n  } else if (modalType === 'category') {\n    // ... keep existing code for category\n  } else if (modalType === 'ddsType') {\n    // ... keep existing code for ddsType\n  }\n  \n  setShowAddModal(false);\n  setNewItemData({});\n  setEditingProductId(null);\n};\n  \n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({ type, item });\n    setShowDeleteModal(true);\n  };\n  \n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const { type, item } = itemToDelete;\n    \n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n      \n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => \n        prev.map(condition => {\n          const updatedProducts = { ...condition.products };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].filter(p => \n              p !== item && p !== `${item} (Type 3/4 Only)`\n            );\n          });\n          \n          const updatedProductDetails = { ...condition.productDetails };\n          delete updatedProductDetails[item];\n          \n          return { \n            ...condition, \n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        })\n      );\n      \n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n      \n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = { ...prev };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    }\n    \n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n  \n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = (phase) => {\n    return (\n      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-medium\">Patient-Specific Product Configuration</h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Filter by:</span>\n            <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n              <Select.Trigger className=\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\">\n                <User size={15} className=\"mr-1 text-gray-500\" />\n                <Select.Value />\n                <Select.Icon><ChevronDown size={15} /></Select.Icon>\n              </Select.Trigger>\n              <Select.Portal>\n                <Select.Content className=\"bg-white rounded-md shadow-lg border min-w-[220px]\">\n                  <Select.Viewport className=\"p-1\">\n                    {Object.entries(PATIENT_TYPES).map(([type, label]) => (\n                      <Select.Item\n                        key={type}\n                        value={type}\n                        className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        <Select.ItemText>{label}</Select.ItemText>\n                      </Select.Item>\n                    ))}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Portal>\n            </Select.Root>\n          </div>\n        </div>\n        \n        {activePatientType !== 'all' && (\n          <div className=\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\">\n            <Info size={15} className=\"mr-1 flex-shrink-0\" />\n            <span>\n              Configuring products specifically for <strong>{PATIENT_TYPES[activePatientType]}</strong>.\n              Products added here will only be recommended for this patient type.\n            </span>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Products for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}</span>\n          <select\n            onChange={(e) => {\n              if (e.target.value) {\n                addProductToPatientType(phase, activePatientType, e.target.value);\n                e.target.value = ''; // Reset select\n              }\n            }}\n            className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n          >\n            <option value=\"\">Add product...</option>\n            {allProducts\n              .filter(product => {\n                // Only show products that aren't already added for this patient type\n                if (!patientSpecificProducts[phase]) return true;\n                return !patientSpecificProducts[phase][activePatientType]?.includes(product);\n              })\n              .map((product) => (\n                <option key={product} value={product}>\n                  {product}\n                </option>\n              ))}\n          </select>\n        </div>\n        \n        {patientSpecificProducts[phase] && patientSpecificProducts[phase][activePatientType]?.length > 0 ? (\n          <ul className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {patientSpecificProducts[phase][activePatientType].map((product) => (\n              <li \n                key={product}\n                className=\"bg-white border rounded-md p-2 flex justify-between items-center\"\n              >\n                <span>{product}</span>\n                <button\n                  onClick={() => removeProductFromPatientType(phase, activePatientType, product)}\n                  className=\"text-red-500 hover:text-red-700 p-1\"\n                >\n                  <Trash2 size={15} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\">\n            No products configured for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}.\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-gray-500\">\n        No conditions data available to edit.\n      </div>\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h2 className=\"text-xl font-bold\">Knowledge Base Administrator</h2>\n          <div className=\"flex items-center space-x-2\">\n            {/* Action buttons */}\n            {isEditing && (\n              <>\n                <button\n                  onClick={handleResetChanges}\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\"\n                  disabled={isSaving}\n                >\n                  Reset Changes\n                </button>\n                <button\n                  onClick={handleSaveChanges}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${\n                    isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>Saving...</>\n                  ) : (\n                    <>\n                      <Save size={16} className=\"mr-1\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Save success notification */}\n        {showSuccess && (\n          <div className=\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\">\n            <Check size={20} className=\"mr-2\" />\n            Changes saved successfully!\n          </div>\n        )}\n        \n        {/* Tabs */}\n        <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n          <Tabs.List className=\"flex border-b\">\n            <Tabs.Trigger\n              value=\"importExport\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"importExport\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Import/Export\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"conditions\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"conditions\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Conditions\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"products\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"products\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Products\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"categories\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"categories\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Categories & DDS Types\n            </Tabs.Trigger>\n          </Tabs.List>\n          \n          {/* Import/Export Tab */}\n          <Tabs.Content value=\"importExport\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2\">Knowledge Base Management</h3>\n              <p className=\"text-gray-600\">\n                Import and export your knowledge base data for backup purposes or to transfer between environments.\n              </p>\n            </div>\n            \n            <DataImportExport \n              conditions={editedConditions} \n              onImport={(importedData) => {\n                setEditedConditions(importedData);\n                setIsEditing(true);\n              }} \n            />\n          </Tabs.Content>\n          \n          {/* Conditions Tab */}\n          <Tabs.Content value=\"conditions\" className=\"flex-grow overflow-auto\">\n            <div className=\"flex h-full\">\n              {/* Conditions List */}\n              <div className=\"w-1/3 border-r p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">All Conditions</h3>\n                  <button\n                    onClick={handleAddCondition}\n                    className=\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add New\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-1\">\n                  {editedConditions.map((condition) => (\n                    <li \n                      key={condition.name}\n                      className={clsx(\n                        \"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",\n                        selectedCondition && selectedCondition.name === condition.name\n                          ? \"bg-blue-100\"\n                          : \"hover:bg-gray-100\"\n                      )}\n                      onClick={() => handleConditionSelect(condition)}\n                    >\n                      <div>\n                        <div className=\"font-medium text-sm\">{condition.name}</div>\n                        <div className=\"text-xs text-gray-500\">{condition.category}</div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          confirmDelete('condition', condition);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* Condition Editor */}\n              <div className=\"w-2/3 p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                {selectedCondition ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {/* Condition Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Condition Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={selectedCondition.name}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n                      \n                      {/* Category */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Category\n                        </label>\n                        <select\n                          value={selectedCondition.category}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'category', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          {categories.map((category) => (\n                            <option key={category} value={category}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    \n                    {/* Patient Type */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Patient Type\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={selectedCondition.patientType}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'patientType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Format: \"Types 1 to 4\" or \"Types 3 to 4\"</p>\n                    </div>\n                    \n                    {/* DDS Types */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        DDS Types\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.dds.map((dds) => (\n                            <span \n                              key={dds} \n                              className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {dds}\n                              <button\n                                onClick={() => {\n                                  const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                                  updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                                }}\n                                className=\"ml-1 text-blue-700 hover:text-blue-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <select\n                        onChange={(e) => {\n                          if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                            const updatedDds = [...selectedCondition.dds, e.target.value];\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          }\n                          e.target.value = ''; // Reset select\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Add DDS Type...</option>\n                        {ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map((dds) => (\n                          <option key={dds} value={dds}>\n                            {dds}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Pitch Points */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Pitch Points\n                      </label>\n                      <textarea\n                        value={selectedCondition.pitchPoints}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    \n                    {/* Phases */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Treatment Phases\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.phases.map((phase) => (\n                            <span \n                              key={phase} \n                              className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {phase}\n                              <button\n                                onClick={() => {\n                                  const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                                  updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                                }}\n                                className=\"ml-1 text-purple-700 hover:text-purple-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"New phase name...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                              const updatedPhases = [...selectedCondition.phases, e.target.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              e.target.value = '';\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={(e) => {\n                            const input = e.target.previousElementSibling;\n                            if (input.value && !selectedCondition.phases.includes(input.value)) {\n                              const updatedPhases = [...selectedCondition.phases, input.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              input.value = '';\n                            }\n                          }}\n                          className=\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                    {/* Products by Phase with Patient Type Filtering */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Products by Phase</h3>\n                      \n                      <Tabs.Root defaultValue={selectedCondition.phases[0]} className=\"border rounded-md\">\n                        <Tabs.List className=\"flex border-b bg-gray-50\">\n                          {selectedCondition.phases.map((phase) => (\n                            <Tabs.Trigger\n                              key={phase}\n                              value={phase}\n                              className={clsx(\n                                \"flex-1 px-4 py-2 text-sm font-medium\",\n                                \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\n                                \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"\n                              )}\n                            >\n                              {phase} Phase\n                            </Tabs.Trigger>\n                          ))}\n                        </Tabs.List>\n                        \n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                            {/* Patient-specific product configuration */}\n                            {renderPatientTypeProductConfig(phase)}\n                          </Tabs.Content>\n                        ))}\n                      </Tabs.Root>\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Product Details</h3>\n                      \n                      {Object.keys(selectedCondition.productDetails || {}).length > 0 ? (\n                        <div className=\"space-y-6\">\n                          {Object.keys(selectedCondition.productDetails).map((productName) => (\n                            <div key={productName} className=\"border rounded-md p-4 bg-gray-50\">\n                              <h4 className=\"font-medium text-md mb-3\">{productName}</h4>\n                              \n                              <div className=\"space-y-3\">\n                                {/* Usage Instructions */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Usage Instructions\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].usage || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'usage', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Clinical Rationale */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Clinical Rationale\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].rationale || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'rationale', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Competitive Advantage */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Competitive Advantage\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].competitive || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'competitive', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Objection Handling */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Objection Handling\n                                  </label>\n                                  <textarea\n                                    value={selectedCondition.productDetails[productName].objection || ''}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'objection', \n                                      e.target.value\n                                    )}\n                                    rows={2}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                </div>\n                                \n                                {/* Fact Sheet Link */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Fact Sheet Link\n                                  </label>\n                                  <input\n                                    type=\"text\"\n                                    value={selectedCondition.productDetails[productName].factSheet || '#'}\n                                    onChange={(e) => updateProductDetail(\n                                      selectedCondition.name, \n                                      productName, \n                                      'factSheet', \n                                      e.target.value\n                                    )}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                                  />\n                                  <p className=\"mt-1 text-xs text-gray-500\">\n                                    Use # for placeholder or enter a valid URL\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-gray-500 text-sm italic\">\n                          No product details available. Add products to phases first.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-10 text-gray-500\">\n                    Select a condition to edit or create a new one\n                  </div>\n                )}\n              </div>\n            </div>\n          </Tabs.Content>\n          \n          {/* Products Tab */}\n          <Tabs.Content value=\"products\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-medium\">Product Library</h3>\n              <button\n                onClick={handleAddProduct}\n                className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n              >\n                <Plus size={16} className=\"mr-1\" />\n                Add New Product\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {allProducts.map((product) => (\n                <div key={product} className=\"border rounded-lg p-4 hover:bg-gray-50 group\">\n                  <div className=\"flex justify-between items-start\">\n                    <h4 className=\"font-medium text-md\">{product}</h4>\n                    <button\n                      onClick={() => confirmDelete('product', product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                  \n                  {editedConditions[0]?.productDetails?.[product] && (\n                    <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                      <div className=\"truncate\">\n                        <span className=\"font-medium\">Usage: </span>\n                        {editedConditions[0].productDetails[product].usage}\n                      </div>\n                      <div className=\"truncate\">\n                        <span className=\"font-medium\">Conditions: </span>\n                        {editedConditions.filter(c => \n                          Object.values(c.products || {}).some(products => \n                            products.includes(product) || products.includes(`${product} (Type 3/4 Only)`)\n                          )\n                        ).length} conditions\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </Tabs.Content>\n          \n          {/* Categories & DDS Types Tab */}\n          <Tabs.Content value=\"categories\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {/* Categories */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">Categories</h3>\n                  <button\n                    onClick={handleAddCategory}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add Category\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-2\">\n                  {categories.map((category) => (\n                    <li \n                      key={category}\n                      className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50\"\n                    >\n                      <span>{category}</span>\n                      <div className=\"text-sm text-gray-500\">\n                        {editedConditions.filter(c => c.category === category).length} conditions\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* DDS Types */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">DDS Types</h3>\n                  <button\n                    onClick={handleAddDdsType}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add DDS Type\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-2\">\n                  {ddsTypes.map((ddsType) => (\n                    <li \n                      key={ddsType}\n                      className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50\"\n                    >\n                      <span>{ddsType}</span>\n                      <div className=\"text-sm text-gray-500\">\n                        {editedConditions.filter(c => c.dds.includes(ddsType)).length} conditions\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </Tabs.Content>\n        </Tabs.Root>\n\n        {/* Add New Item Modal */}\n        <Dialog.Root open={showAddModal} onOpenChange={setShowAddModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-4\">\n                {modalType === 'condition' && 'Add New Condition'}\n                {modalType === 'category' && 'Add New Category'}\n                {modalType === 'ddsType' && 'Add New DDS Type'}\n                {modalType === 'product' && 'Add New Product'}\n              </Dialog.Title>\n              \n              <div className=\"space-y-4\">\n                {modalType === 'condition' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Condition Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Category\n                      </label>\n                      <select\n                        value={newItemData.category || ''}\n                        onChange={(e) => setNewItemData({...newItemData, category: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      >\n                        {categories.map((category) => (\n                          <option key={category} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </>\n                )}\n                \n                {modalType === 'category' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'ddsType' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      DDS Type Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'product' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Product Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Usage Instructions\n                      </label>\n                      <textarea\n                        value={newItemData.usage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, usage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, rationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitive || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitive: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Objection Handling\n                      </label>\n                      <textarea\n                        value={newItemData.objection || ''}\n                        onChange={(e) => setNewItemData({...newItemData, objection: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleSubmitNewItem}\n                  disabled={!newItemData.name}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm ${\n                    newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'\n                  }`}\n                >\n                  Add\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n        \n        {/* Delete Confirmation Modal */}\n        <Dialog.Root open={showDeleteModal} onOpenChange={setShowDeleteModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-2 flex items-center text-red-600\">\n                <AlertTriangle size={20} className=\"mr-2\" />\n                Confirm Deletion\n              </Dialog.Title>\n              \n              <Dialog.Description className=\"text-gray-600 mb-4\">\n                {itemToDelete?.type === 'condition' && \n                  `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`}\n                \n                {itemToDelete?.type === 'product' && \n                  `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`}\n              </Dialog.Description>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}