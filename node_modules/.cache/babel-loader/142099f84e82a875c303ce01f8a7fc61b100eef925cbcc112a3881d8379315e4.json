{"ast":null,"code":"var _jsxFileName = \"/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\n// Modify the saveToBackend function to also save the products list\nconst saveToBackend = async (data, categoriesList, ddsTypesList, productsList) => {\n  // Simulate API call\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      console.log('Categories saved:', categoriesList);\n      console.log('DDS Types saved:', ddsTypesList);\n      console.log('Products saved:', productsList);\n\n      // Save everything to localStorage\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      localStorage.setItem('categories_data', JSON.stringify(categoriesList));\n      localStorage.setItem('dds_types_data', JSON.stringify(ddsTypesList));\n      localStorage.setItem('products_data', JSON.stringify(productsList));\n      resolve({\n        success: true\n      });\n    }, 1500);\n  });\n};\n\n// Modify the handleSaveChanges function to pass the products list\nconst handleSaveChanges = async () => {\n  setIsSaving(true);\n  try {\n    // Apply patient-specific products to condition\n    const updatedConditions = applyPatientSpecificProducts();\n\n    // Save all data: conditions, categories, and DDS types, and products\n    const result = await saveToBackend(updatedConditions, categories, ddsTypes, allProducts);\n    if (result.success) {\n      // Pass the updated data back to parent component\n      onConditionsUpdate(updatedConditions, categories, ddsTypes, allProducts);\n      setShowSuccess(true);\n      setTimeout(() => setShowSuccess(false), 3000);\n    }\n  } catch (error) {\n    console.error('Error saving changes:', error);\n    // Handle error (show error notification, etc.)\n  } finally {\n    setIsSaving(false);\n  }\n};\n\n// Update the useEffect initialization function to load saved products\nuseEffect(() => {\n  if (conditions) {\n    setEditedConditions([...conditions]);\n\n    // Try to load saved categories, DDS types, and products from localStorage first\n    const savedCategories = localStorage.getItem('categories_data');\n    const savedDdsTypes = localStorage.getItem('dds_types_data');\n    const savedProducts = localStorage.getItem('products_data');\n    let categoriesFromStorage = [];\n    let ddsTypesFromStorage = [];\n    let productsFromStorage = [];\n\n    // Parse saved categories if available\n    if (savedCategories) {\n      try {\n        categoriesFromStorage = JSON.parse(savedCategories);\n        if (!Array.isArray(categoriesFromStorage)) {\n          categoriesFromStorage = [];\n        }\n      } catch (e) {\n        console.error('Error parsing saved categories:', e);\n      }\n    }\n\n    // Parse saved DDS types if available\n    if (savedDdsTypes) {\n      try {\n        ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n        if (!Array.isArray(ddsTypesFromStorage)) {\n          ddsTypesFromStorage = [];\n        }\n      } catch (e) {\n        console.error('Error parsing saved DDS types:', e);\n      }\n    }\n\n    // Parse saved products if available\n    if (savedProducts) {\n      try {\n        productsFromStorage = JSON.parse(savedProducts);\n        if (!Array.isArray(productsFromStorage)) {\n          productsFromStorage = [];\n        }\n      } catch (e) {\n        console.error('Error parsing saved products:', e);\n      }\n    }\n\n    // Extract unique categories from conditions\n    const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n\n    // Extract unique DDS types from conditions\n    const allDdsTypes = [];\n    conditions.forEach(condition => {\n      condition.dds.forEach(dds => {\n        if (!allDdsTypes.includes(dds)) {\n          allDdsTypes.push(dds);\n        }\n      });\n    });\n\n    // Extract all products from conditions\n    const productsSet = new Set();\n    conditions.forEach(condition => {\n      if (condition.productDetails) {\n        Object.keys(condition.productDetails).forEach(product => {\n          productsSet.add(product);\n        });\n      }\n    });\n    const productsFromConditions = Array.from(productsSet);\n\n    // Merge saved categories with ones from conditions and remove duplicates\n    const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n\n    // Merge saved DDS types with ones from conditions and remove duplicates\n    const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n\n    // Merge saved products with ones from conditions and remove duplicates\n    const mergedProducts = [...new Set([...productsFromStorage, ...productsFromConditions])];\n\n    // Set the merged lists\n    setCategories(mergedCategories);\n    setDdsTypes(mergedDdsTypes);\n    setAllProducts(mergedProducts);\n\n    // Select first condition by default\n    if (conditions.length > 0 && !selectedCondition) {\n      setSelectedCondition(conditions[0]);\n\n      // Initialize patient-specific product configuration\n      const firstCondition = conditions[0];\n      initializePatientSpecificProducts(firstCondition);\n    }\n  }\n}, [conditions]);\nfunction AdminPanel({\n  conditions,\n  onConditionsUpdate,\n  onClose\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n\n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n\n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n\n      // Try to load saved categories and DDS types from localStorage first\n      const savedCategories = localStorage.getItem('categories_data');\n      const savedDdsTypes = localStorage.getItem('dds_types_data');\n      let categoriesFromStorage = [];\n      let ddsTypesFromStorage = [];\n\n      // Parse saved categories if available\n      if (savedCategories) {\n        try {\n          categoriesFromStorage = JSON.parse(savedCategories);\n          if (!Array.isArray(categoriesFromStorage)) {\n            categoriesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved categories:', e);\n        }\n      }\n\n      // Parse saved DDS types if available\n      if (savedDdsTypes) {\n        try {\n          ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n          if (!Array.isArray(ddsTypesFromStorage)) {\n            ddsTypesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved DDS types:', e);\n        }\n      }\n\n      // Extract unique categories from conditions\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n\n      // Extract unique DDS types from conditions\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n\n      // Merge saved categories with ones from conditions and remove duplicates\n      const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n\n      // Merge saved DDS types with ones from conditions and remove duplicates\n      const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n\n      // Set the merged lists\n      setCategories(mergedCategories);\n      setDdsTypes(mergedDdsTypes);\n\n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n\n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = condition => {\n    if (!condition) return;\n    const patientProducts = {};\n\n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n\n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n\n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        }\n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n\n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n\n      // For conditions where Type 3/4 get additional products\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Acute' || condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute') {\n        if (patientProducts[phase]['3'].includes('Synvaza') && !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    setPatientSpecificProducts(patientProducts);\n  };\n  const handleEditProduct = product => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = {\n      name: product,\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    };\n\n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#'\n        };\n        break;\n      }\n    }\n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n\n      // Save all data: conditions, categories, and DDS types\n      const result = await saveToBackend(updatedConditions, categories, ddsTypes);\n      if (result.success) {\n        // Pass the updated data back to parent component\n        onConditionsUpdate(updatedConditions, categories, ddsTypes);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n\n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n\n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n\n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n\n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n\n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n\n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n\n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n\n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n\n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => (patientTypesForPhase[patientType] || []).includes(product));\n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n\n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n\n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if ((patientTypesForPhase['4'] || []).includes(product) && !(patientTypesForPhase['1'] || []).includes(product) && !(patientTypesForPhase['2'] || []).includes(product) && !product.includes('(Type')) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n\n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n\n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n\n      // Ensure all products have product details\n      const allProductsToCheck = [...commonProducts, ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n      // Add products that are only in some patient types\n      ...[...productsInAllTypes].filter(p => !commonProducts.has(p))];\n\n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n\n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n\n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#'\n          };\n\n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName]\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    return updatedConditions;\n  };\n\n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n\n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n\n  // Handle condition selection\n  const handleConditionSelect = condition => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n\n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => condition.name === conditionId ? {\n      ...condition,\n      [field]: value\n    } : condition));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => prev.map(condition => {\n      if (condition.name === conditionId) {\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        if (!updatedProductDetails[productName]) {\n          updatedProductDetails[productName] = {};\n        }\n        updatedProductDetails[productName][field] = value;\n        return {\n          ...condition,\n          productDetails: updatedProductDetails\n        };\n      }\n      return condition;\n    }));\n\n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = {\n        ...selectedCondition.productDetails\n      };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({\n        ...prev,\n        productDetails: updatedProductDetails\n      }));\n    }\n  };\n\n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = type => {\n    setActivePatientType(type);\n  };\n\n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n\n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n\n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => updated[phase][type].includes(productName));\n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      return updated;\n    });\n  };\n\n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n\n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n\n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({\n      name: ''\n    });\n    setShowAddModal(true);\n  };\n\n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n\n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    if (modalType === 'product') {\n      const productName = newItemData.name;\n      if (editingProductId && editingProductId !== productName) {\n        // Product name was changed - need to update all references\n        setEditedConditions(prev => prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = {\n            ...condition.products\n          };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => p === editingProductId ? productName : p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p);\n          });\n\n          // Update product details\n          const updatedProductDetails = {\n            ...condition.productDetails\n          };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          return {\n            ...condition,\n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        }));\n\n        // Update allProducts list\n        setAllProducts(prev => {\n          const index = prev.indexOf(editingProductId);\n          if (index !== -1) {\n            const updated = [...prev];\n            updated[index] = productName;\n            return updated;\n          }\n          return [...prev, productName];\n        });\n\n        // Update patient-specific products if currently editing\n        if (selectedCondition) {\n          setPatientSpecificProducts(prev => {\n            const updated = {\n              ...prev\n            };\n            Object.keys(updated).forEach(phase => {\n              Object.keys(updated[phase]).forEach(type => {\n                updated[phase][type] = updated[phase][type].map(p => p === editingProductId ? productName : p);\n              });\n            });\n            return updated;\n          });\n        }\n      } else if (editingProductId) {\n        // Only details changed, not the name\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }\n          return condition;\n        }));\n      } else {\n        // This is a new product\n        if (!allProducts.includes(productName)) {\n          setAllProducts(prev => [...prev, productName]);\n\n          // Add product details to all conditions that use it\n          setEditedConditions(prev => prev.map(condition => {\n            const updatedProductDetails = {\n              ...condition.productDetails\n            };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return {\n              ...condition,\n              productDetails: updatedProductDetails\n            };\n          }));\n        }\n      }\n    } else if (modalType === 'condition') {\n      // Add new condition\n      if (newItemData.name && !editedConditions.find(c => c.name === newItemData.name)) {\n        const newCondition = {\n          name: newItemData.name,\n          category: newItemData.category || categories[0] || '',\n          phases: newItemData.phases || ['Prep', 'Acute', 'Maintenance'],\n          dds: newItemData.dds || [],\n          patientType: newItemData.patientType || 'Types 1 to 4',\n          products: newItemData.products || {\n            Prep: [],\n            Acute: [],\n            Maintenance: []\n          },\n          pitchPoints: newItemData.pitchPoints || '',\n          productDetails: {}\n        };\n        setEditedConditions(prev => [...prev, newCondition]);\n        setSelectedCondition(newCondition);\n      }\n    } else if (modalType === 'category') {\n      // Add new category\n      if (newItemData.name && !categories.includes(newItemData.name)) {\n        // Update categories list\n        setCategories(prev => [...prev, newItemData.name]);\n\n        // Add new category to all conditions that need it\n        setEditedConditions(prev => prev.map(condition => {\n          if (condition.category === '') {\n            return {\n              ...condition,\n              category: newItemData.name\n            };\n          }\n          return condition;\n        }));\n      }\n    } else if (modalType === 'ddsType') {\n      // Add new DDS type\n      if (newItemData.name && !ddsTypes.includes(newItemData.name)) {\n        setDdsTypes(prev => [...prev, newItemData.name]);\n      }\n    }\n    setShowAddModal(false);\n    setNewItemData({});\n    setEditingProductId(null);\n  };\n\n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({\n      type,\n      item\n    });\n    setShowDeleteModal(true);\n  };\n\n  // Handle delete\n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const {\n      type,\n      item\n    } = itemToDelete;\n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n\n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => prev.map(condition => {\n        const updatedProducts = {\n          ...condition.products\n        };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => p !== item && p !== `${item} (Type 3/4 Only)`);\n        });\n        const updatedProductDetails = {\n          ...condition.productDetails\n        };\n        delete updatedProductDetails[item];\n        return {\n          ...condition,\n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      }));\n\n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n\n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    } else if (type === 'category') {\n      // Don't allow deleting the 'All' category\n      if (item === 'All') {\n        setShowDeleteModal(false);\n        setItemToDelete(null);\n        return;\n      }\n\n      // Remove the category from the list\n      setCategories(prev => prev.filter(c => c !== item));\n\n      // Update conditions that use this category (set to first available category or empty string)\n      setEditedConditions(prev => prev.map(condition => {\n        if (condition.category === item) {\n          const newCategory = categories.find(c => c !== item && c !== 'All') || '';\n          return {\n            ...condition,\n            category: newCategory\n          };\n        }\n        return condition;\n      }));\n    } else if (type === 'ddsType') {\n      // Don't allow deleting the 'All' DDS type\n      if (item === 'All') {\n        setShowDeleteModal(false);\n        setItemToDelete(null);\n        return;\n      }\n\n      // Remove the DDS type from the list\n      setDdsTypes(prev => prev.filter(d => d !== item));\n\n      // Update conditions that use this DDS type (remove it from their dds array)\n      setEditedConditions(prev => prev.map(condition => {\n        if (condition.dds.includes(item)) {\n          return {\n            ...condition,\n            dds: condition.dds.filter(d => d !== item)\n          };\n        }\n        return condition;\n      }));\n    }\n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n\n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = phase => {\n    var _patientSpecificProdu2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 border rounded-lg p-4 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Patient-Specific Product Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Filter by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select.Root, {\n            value: activePatientType,\n            onValueChange: handlePatientTypeSelect,\n            children: [/*#__PURE__*/_jsxDEV(Select.Trigger, {\n              className: \"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 15,\n                className: \"mr-1 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Value, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select.Icon, {\n                children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 950,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Portal, {\n              children: /*#__PURE__*/_jsxDEV(Select.Content, {\n                className: \"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\",\n                children: /*#__PURE__*/_jsxDEV(Select.Viewport, {\n                  className: \"p-1\",\n                  children: Object.entries(PATIENT_TYPES).map(([type, label]) => /*#__PURE__*/_jsxDEV(Select.Item, {\n                    value: type,\n                    className: \"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(Select.ItemText, {\n                      children: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 961,\n                      columnNumber: 25\n                    }, this)\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 956,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 9\n      }, this), activePatientType !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          size: 15,\n          className: \"mr-1 flex-shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Configuring products specifically for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: PATIENT_TYPES[activePatientType]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 53\n          }, this), \". Products added here will only be recommended for this patient type.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: [\"Products for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            if (e.target.value) {\n              addProductToPatientType(phase, activePatientType, e.target.value);\n              e.target.value = ''; // Reset select\n            }\n          },\n          className: \"px-3 py-1 border border-gray-300 rounded-md text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Add product...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 13\n          }, this), allProducts.filter(product => {\n            var _patientSpecificProdu;\n            // Only show products that aren't already added for this patient type\n            if (!patientSpecificProducts[phase]) return true;\n            return !((_patientSpecificProdu = patientSpecificProducts[phase][activePatientType]) !== null && _patientSpecificProdu !== void 0 && _patientSpecificProdu.includes(product));\n          }).map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product,\n            children: product\n          }, product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 9\n      }, this), patientSpecificProducts[phase] && ((_patientSpecificProdu2 = patientSpecificProducts[phase][activePatientType]) === null || _patientSpecificProdu2 === void 0 ? void 0 : _patientSpecificProdu2.length) > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2 max-h-60 overflow-y-auto\",\n        children: patientSpecificProducts[phase][activePatientType].map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"bg-white border rounded-md p-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProductFromPatientType(phase, activePatientType, product),\n            className: \"text-red-500 hover:text-red-700 p-1\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 17\n          }, this)]\n        }, product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 text-center text-gray-500 bg-gray-100 rounded-md\",\n        children: [\"No products configured for \", activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-gray-500\",\n      children: \"No conditions data available to edit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Knowledge Base Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResetChanges,\n              className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n              disabled: isSaving,\n              children: \"Reset Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveChanges,\n              className: `px-3 py-1.5 rounded-md text-white text-sm flex items-center ${isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'}`,\n              disabled: isSaving,\n              children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Saving...\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Save, {\n                  size: 16,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 23\n                }, this), \"Save Changes\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-500 hover:text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 9\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(Check, {\n          size: 20,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 13\n        }, this), \"Changes saved successfully!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n        value: activeTab,\n        onValueChange: setActiveTab,\n        children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n          className: \"flex border-b\",\n          children: [/*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"importExport\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"importExport\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Import/Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"conditions\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"conditions\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"products\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"products\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n            value: \"categories\",\n            className: clsx(\"px-6 py-3 text-sm font-medium\", activeTab === \"categories\" ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-500 hover:text-gray-700\"),\n            children: \"Categories & DDS Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"importExport\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-2\",\n              children: \"Knowledge Base Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Import and export your knowledge base data for backup purposes or to transfer between environments.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataImportExport, {\n            conditions: editedConditions,\n            onImport: importedData => {\n              setEditedConditions(importedData);\n              setIsEditing(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"conditions\",\n          className: \"flex-grow overflow-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/3 border-r p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-medium\",\n                  children: \"All Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1163,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCondition,\n                  className: \"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1168,\n                    columnNumber: 21\n                  }, this), \"Add New\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1164,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-1\",\n                children: editedConditions.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: clsx(\"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\", selectedCondition && selectedCondition.name === condition.name ? \"bg-blue-100\" : \"hover:bg-gray-100\"),\n                  onClick: () => handleConditionSelect(condition),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium text-sm\",\n                      children: condition.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1186,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: condition.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1187,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      e.stopPropagation();\n                      confirmDelete('condition', condition);\n                    },\n                    className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1196,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1189,\n                    columnNumber: 23\n                  }, this)]\n                }, condition.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1175,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2/3 p-4\",\n              style: {\n                maxHeight: \"calc(90vh - 160px)\",\n                overflowY: \"auto\"\n              },\n              children: selectedCondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Condition Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1210,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: selectedCondition.name,\n                      onChange: e => updateConditionField(selectedCondition.name, 'name', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1213,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1209,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700 mb-1\",\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1223,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedCondition.category,\n                      onChange: e => updateConditionField(selectedCondition.name, 'category', e.target.value),\n                      className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: category,\n                        children: category\n                      }, category, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1232,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1226,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1222,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Patient Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1242,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: selectedCondition.patientType,\n                    onChange: e => updateConditionField(selectedCondition.name, 'patientType', e.target.value),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1245,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mt-1 text-xs text-gray-500\",\n                    children: \"Format: \\\"Types 1 to 4\\\" or \\\"Types 3 to 4\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1251,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"DDS Types\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.dds.map(dds => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [dds, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          },\n                          className: \"ml-1 text-blue-700 hover:text-blue-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1274,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1267,\n                          columnNumber: 31\n                        }, this)]\n                      }, dds, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1262,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1260,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => {\n                      if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                        const updatedDds = [...selectedCondition.dds, e.target.value];\n                        updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                      }\n                      e.target.value = ''; // Reset select\n                    },\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Add DDS Type...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1290,\n                      columnNumber: 25\n                    }, this), ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map(dds => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dds,\n                      children: dds\n                    }, dds, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1292,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1280,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1301,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.pitchPoints,\n                    onChange: e => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1304,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1314,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.competitiveAdvantage || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1317,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1313,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Handling Objections\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1327,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: selectedCondition.handlingObjections || '',\n                    onChange: e => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1330,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Treatment Phases\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1339,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-300 rounded-md p-2 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\",\n                        children: [phase, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                            updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          },\n                          className: \"ml-1 text-purple-700 hover:text-purple-900\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1357,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1350,\n                          columnNumber: 31\n                        }, this)]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1345,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1343,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1342,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"New phase name...\",\n                      className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n                      onKeyDown: e => {\n                        if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                          const updatedPhases = [...selectedCondition.phases, e.target.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          e.target.value = '';\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1364,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        const input = e.target.previousElementSibling;\n                        if (input.value && !selectedCondition.phases.includes(input.value)) {\n                          const updatedPhases = [...selectedCondition.phases, input.value];\n                          updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                          input.value = '';\n                        }\n                      },\n                      className: \"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\",\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1376,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1363,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1338,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Products by Phase\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1393,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tabs.Root, {\n                    defaultValue: selectedCondition.phases[0],\n                    className: \"border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(Tabs.List, {\n                      className: \"flex border-b bg-gray-50\",\n                      children: selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Trigger, {\n                        value: phase,\n                        className: clsx(\"flex-1 px-4 py-2 text-sm font-medium\", \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\", \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"),\n                        children: [phase, \" Phase\"]\n                      }, phase, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1398,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1396,\n                      columnNumber: 25\n                    }, this), selectedCondition.phases.map(phase => /*#__PURE__*/_jsxDEV(Tabs.Content, {\n                      value: phase,\n                      className: \"p-4\",\n                      children: renderPatientTypeProductConfig(phase)\n                    }, phase, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1413,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1395,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1392,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium text-lg mb-3\",\n                    children: \"Product Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1423,\n                    columnNumber: 23\n                  }, this), Object.keys(selectedCondition.productDetails || {}).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-6\",\n                    children: Object.keys(selectedCondition.productDetails).map(productName => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border rounded-md p-4 bg-gray-50\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-md mb-3\",\n                        children: productName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1429,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Supporting Research Articles\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1436,\n                            columnNumber: 35\n                          }, this), selectedCondition.productDetails[productName].researchArticles && selectedCondition.productDetails[productName].researchArticles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex space-x-2 mb-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"flex-grow space-y-2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Article title\",\n                                value: article.title || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].title = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1444,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Author/Source\",\n                                value: article.author || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].author = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1461,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                                placeholder: \"Abstract (optional)\",\n                                value: article.abstract || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].abstract = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                rows: 3,\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1478,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                placeholder: \"URL (optional)\",\n                                value: article.url || '',\n                                onChange: e => {\n                                  const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                  updatedArticles[index].url = e.target.value;\n                                  updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                                },\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1495,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1443,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => {\n                                const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                updatedArticles.splice(index, 1);\n                                updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                              },\n                              className: \"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",\n                              children: /*#__PURE__*/_jsxDEV(X, {\n                                size: 16\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1526,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1513,\n                              columnNumber: 39\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1442,\n                            columnNumber: 37\n                          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                              const updatedArticles = [...currentArticles, {\n                                title: '',\n                                author: '',\n                                url: ''\n                              }];\n                              updateProductDetail(selectedCondition.name, productName, 'researchArticles', updatedArticles);\n                            },\n                            className: \"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",\n                            children: [/*#__PURE__*/_jsxDEV(Plus, {\n                              size: 16,\n                              className: \"mr-1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1544,\n                              columnNumber: 37\n                            }, this), \"Add Research Article\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1531,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1435,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1431,\n                        columnNumber: 31\n                      }, this)]\n                    }, productName, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1428,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1426,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm italic\",\n                    children: \"No product details available. Add products to phases first.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1553,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1422,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-10 text-gray-500\",\n                children: \"Select a condition to edit or create a new one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1560,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"products\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium\",\n              children: \"Product Library\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddProduct,\n              className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16,\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1576,\n                columnNumber: 17\n              }, this), \"Add New Product\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1572,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1570,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n            children: allProducts.map(product => {\n              var _editedConditions$, _editedConditions$$pr;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4 hover:bg-gray-50 group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-md\",\n                    children: product\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1585,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEditProduct(product),\n                      className: \"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\",\n                      title: \"Edit product details\",\n                      children: /*#__PURE__*/_jsxDEV(Edit, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1592,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1587,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => confirmDelete('product', product),\n                      className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                      title: \"Delete product\",\n                      children: /*#__PURE__*/_jsxDEV(Trash2, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1599,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1594,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1586,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1584,\n                  columnNumber: 17\n                }, this), ((_editedConditions$ = editedConditions[0]) === null || _editedConditions$ === void 0 ? void 0 : (_editedConditions$$pr = _editedConditions$.productDetails) === null || _editedConditions$$pr === void 0 ? void 0 : _editedConditions$$pr[product]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-sm text-gray-600 space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Usage: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1607,\n                      columnNumber: 23\n                    }, this), editedConditions[0].productDetails[product].usage]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1606,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: \"Conditions: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1611,\n                      columnNumber: 23\n                    }, this), editedConditions.filter(c => Object.values(c.products || {}).some(products => products.includes(product) || products.includes(`${product} (Type 3/4 Only)`))).length, \" conditions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1610,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1605,\n                  columnNumber: 19\n                }, this)]\n              }, product, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1583,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1581,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.Content, {\n          value: \"categories\",\n          className: \"p-6\",\n          style: {\n            maxHeight: \"calc(90vh - 160px)\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1631,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddCategory,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1636,\n                    columnNumber: 21\n                  }, this), \"Add Category\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1632,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1630,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-h-[60vh] overflow-y-auto pr-1\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-2\",\n                  children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1648,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-500 mr-3\",\n                        children: [editedConditions.filter(c => c.category === category).length, \" conditions\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1650,\n                        columnNumber: 27\n                      }, this), category !== 'All' && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => confirmDelete('category', category),\n                        className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                        title: \"Delete category\",\n                        children: /*#__PURE__*/_jsxDEV(Trash2, {\n                          size: 16\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1659,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1654,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1649,\n                      columnNumber: 25\n                    }, this)]\n                  }, category, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1644,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1642,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1641,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: \"DDS Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1672,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleAddDdsType,\n                  className: \"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1677,\n                    columnNumber: 21\n                  }, this), \"Add DDS Type\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1673,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1671,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-h-[60vh] overflow-y-auto pr-1\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-2\",\n                  children: ddsTypes.map(ddsType => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: ddsType\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1689,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-500 mr-3\",\n                        children: [editedConditions.filter(c => c.dds.includes(ddsType)).length, \" conditions\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1691,\n                        columnNumber: 27\n                      }, this), ddsType !== 'All' && /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => confirmDelete('ddsType', ddsType),\n                        className: \"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",\n                        title: \"Delete DDS type\",\n                        children: /*#__PURE__*/_jsxDEV(Trash2, {\n                          size: 16\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1700,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1695,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1690,\n                      columnNumber: 25\n                    }, this)]\n                  }, ddsType, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1685,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1683,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1682,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1670,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1626,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showAddModal,\n        onOpenChange: setShowAddModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-4\",\n              children: [modalType === 'condition' && 'Add New Condition', modalType === 'category' && 'Add New Category', modalType === 'ddsType' && 'Add New DDS Type', modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1718,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [modalType === 'condition' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Condition Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1730,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1733,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1729,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1742,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newItemData.category || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      category: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: category,\n                      children: category\n                    }, category, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1751,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1745,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1741,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Key Pitch Points\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1758,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.pitchPoints || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      pitchPoints: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1761,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1757,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1770,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitiveAdvantage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitiveAdvantage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1773,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1769,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Handling Objections\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1782,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.handlingObjections || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      handlingObjections: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1785,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1781,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), modalType === 'category' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"Category Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1797,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1800,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1796,\n                columnNumber: 19\n              }, this), modalType === 'ddsType' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"DDS Type Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1811,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: newItemData.name || '',\n                  onChange: e => setNewItemData({\n                    ...newItemData,\n                    name: e.target.value\n                  }),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1814,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1810,\n                columnNumber: 19\n              }, this), modalType === 'product' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Product Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1826,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: newItemData.name || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      name: e.target.value\n                    }),\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1829,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1825,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Usage Instructions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1838,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.usage || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      usage: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1841,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1837,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Clinical Rationale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1850,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.rationale || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      rationale: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1853,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1849,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Competitive Advantage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1862,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.competitive || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      competitive: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1865,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1861,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Objection Handling\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1874,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: newItemData.objection || '',\n                    onChange: e => setNewItemData({\n                      ...newItemData,\n                      objection: e.target.value\n                    }),\n                    rows: 2,\n                    className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1877,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1873,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Supporting Research Articles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1887,\n                    columnNumber: 23\n                  }, this), newItemData.researchArticles && newItemData.researchArticles.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2 mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow space-y-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Article title\",\n                        value: article.title || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].title = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1894,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Author/Source\",\n                        value: article.author || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].author = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1906,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        placeholder: \"Abstract (optional)\",\n                        value: article.abstract || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].abstract = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        rows: 3,\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1918,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"URL (optional)\",\n                        value: article.url || '',\n                        onChange: e => {\n                          const updatedArticles = [...newItemData.researchArticles];\n                          updatedArticles[index].url = e.target.value;\n                          setNewItemData({\n                            ...newItemData,\n                            researchArticles: updatedArticles\n                          });\n                        },\n                        className: \"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1930,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1893,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        const updatedArticles = [...newItemData.researchArticles];\n                        updatedArticles.splice(index, 1);\n                        setNewItemData({\n                          ...newItemData,\n                          researchArticles: updatedArticles\n                        });\n                      },\n                      className: \"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",\n                      children: /*#__PURE__*/_jsxDEV(X, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1951,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1943,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1892,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const updatedArticles = [...(newItemData.researchArticles || []), {\n                        title: '',\n                        author: '',\n                        url: ''\n                      }];\n                      setNewItemData({\n                        ...newItemData,\n                        researchArticles: updatedArticles\n                      });\n                    },\n                    className: \"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Plus, {\n                      size: 16,\n                      className: \"mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1963,\n                      columnNumber: 25\n                    }, this), \"Add Research Article\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1956,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1886,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1726,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1973,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1972,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmitNewItem,\n                disabled: !newItemData.name,\n                className: `px-3 py-1.5 rounded-md text-white text-sm ${newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'}`,\n                children: editingProductId ? 'Save Changes' : 'Add'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1978,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1971,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1717,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1715,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog.Root, {\n        open: showDeleteModal,\n        onOpenChange: setShowDeleteModal,\n        children: /*#__PURE__*/_jsxDEV(Dialog.Portal, {\n          children: [/*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0 bg-black/50 z-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1995,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog.Content, {\n            className: \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",\n            children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n              className: \"text-lg font-semibold mb-2 flex items-center text-red-600\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1998,\n                columnNumber: 17\n              }, this), \"Confirm Deletion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1997,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dialog.Description, {\n              className: \"text-gray-600 mb-4\",\n              children: [(itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'condition' && `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`, (itemToDelete === null || itemToDelete === void 0 ? void 0 : itemToDelete.type) === 'product' && `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2002,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 flex justify-end space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Dialog.Close, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2012,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2011,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDelete,\n                className: \"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2017,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2010,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1996,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1994,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1993,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1042,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"xZdfQKuwjBuI/kMmcPtCdhp06sI=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Save","Plus","Edit","Trash2","X","ChevronDown","Info","AlertTriangle","Lock","Check","User","Filter","clsx","DataImportExport","jsxDEV","_jsxDEV","Fragment","_Fragment","PATIENT_TYPES","saveToBackend","data","categoriesList","ddsTypesList","productsList","Promise","resolve","setTimeout","console","log","localStorage","setItem","JSON","stringify","success","handleSaveChanges","setIsSaving","updatedConditions","applyPatientSpecificProducts","result","categories","ddsTypes","allProducts","onConditionsUpdate","setShowSuccess","error","conditions","setEditedConditions","savedCategories","getItem","savedDdsTypes","savedProducts","categoriesFromStorage","ddsTypesFromStorage","productsFromStorage","parse","Array","isArray","e","uniqueCategories","Set","map","c","category","allDdsTypes","forEach","condition","dds","includes","push","productsSet","productDetails","Object","keys","product","add","productsFromConditions","from","mergedCategories","mergedDdsTypes","mergedProducts","setCategories","setDdsTypes","setAllProducts","length","selectedCondition","setSelectedCondition","firstCondition","initializePatientSpecificProducts","AdminPanel","onClose","_s","activeTab","setActiveTab","editedConditions","editingProductId","setEditingProductId","isEditing","setIsEditing","isSaving","showSuccess","activePatientType","setActivePatientType","patientSpecificProducts","setPatientSpecificProducts","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showAddModal","setShowAddModal","modalType","setModalType","newItemData","setNewItemData","patientProducts","phases","phase","products","baseProduct","replace","name","handleEditProduct","usage","rationale","competitive","objection","factSheet","conditionIndex","findIndex","patientSpecificConfig","phaseProducts","patientTypesForPhase","commonProducts","allPatientTypes","productsInAllTypes","patientType","isInAllTypes","every","type34Products","allProductsToCheck","p","filter","has","cleanProductName","handleResetChanges","handleConditionSelect","updateConditionField","conditionId","field","value","prev","updateProductDetail","productName","updatedProductDetails","handlePatientTypeSelect","type","addProductToPatientType","updated","removeProductFromPatientType","handleAddCondition","Prep","Acute","Maintenance","pitchPoints","competitiveAdvantage","handlingObjections","handleAddCategory","handleAddDdsType","handleAddProduct","handleSubmitNewItem","updatedProducts","index","indexOf","find","newCondition","confirmDelete","item","handleDelete","remainingConditions","newCategory","d","renderPatientTypeProductConfig","_patientSpecificProdu2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Root","onValueChange","Trigger","size","Value","Icon","Portal","Content","Viewport","entries","label","Item","ItemText","onChange","target","_patientSpecificProdu","onClick","disabled","List","style","maxHeight","overflowY","onImport","importedData","stopPropagation","updatedDds","rows","updatedPhases","placeholder","onKeyDown","key","input","previousElementSibling","defaultValue","researchArticles","article","title","updatedArticles","author","abstract","url","splice","currentArticles","_editedConditions$","_editedConditions$$pr","values","some","ddsType","open","onOpenChange","Overlay","Title","Close","asChild","Description","_c","$RefreshReg$"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\n// Modify the saveToBackend function to also save the products list\nconst saveToBackend = async (data, categoriesList, ddsTypesList, productsList) => {\n  // Simulate API call\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      console.log('Categories saved:', categoriesList);\n      console.log('DDS Types saved:', ddsTypesList);\n      console.log('Products saved:', productsList);\n      \n      // Save everything to localStorage\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      localStorage.setItem('categories_data', JSON.stringify(categoriesList));\n      localStorage.setItem('dds_types_data', JSON.stringify(ddsTypesList));\n      localStorage.setItem('products_data', JSON.stringify(productsList));\n      \n      resolve({ success: true });\n    }, 1500);\n  });\n};\n\n// Modify the handleSaveChanges function to pass the products list\nconst handleSaveChanges = async () => {\n  setIsSaving(true);\n  try {\n    // Apply patient-specific products to condition\n    const updatedConditions = applyPatientSpecificProducts();\n    \n    // Save all data: conditions, categories, and DDS types, and products\n    const result = await saveToBackend(updatedConditions, categories, ddsTypes, allProducts);\n    \n    if (result.success) {\n      // Pass the updated data back to parent component\n      onConditionsUpdate(updatedConditions, categories, ddsTypes, allProducts);\n      setShowSuccess(true);\n      setTimeout(() => setShowSuccess(false), 3000);\n    }\n  } catch (error) {\n    console.error('Error saving changes:', error);\n    // Handle error (show error notification, etc.)\n  } finally {\n    setIsSaving(false);\n  }\n};\n\n// Update the useEffect initialization function to load saved products\nuseEffect(() => {\n  if (conditions) {\n    setEditedConditions([...conditions]);\n    \n    // Try to load saved categories, DDS types, and products from localStorage first\n    const savedCategories = localStorage.getItem('categories_data');\n    const savedDdsTypes = localStorage.getItem('dds_types_data');\n    const savedProducts = localStorage.getItem('products_data');\n    \n    let categoriesFromStorage = [];\n    let ddsTypesFromStorage = [];\n    let productsFromStorage = [];\n    \n    // Parse saved categories if available\n    if (savedCategories) {\n      try {\n        categoriesFromStorage = JSON.parse(savedCategories);\n        if (!Array.isArray(categoriesFromStorage)) {\n          categoriesFromStorage = [];\n        }\n      } catch (e) {\n        console.error('Error parsing saved categories:', e);\n      }\n    }\n    \n    // Parse saved DDS types if available\n    if (savedDdsTypes) {\n      try {\n        ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n        if (!Array.isArray(ddsTypesFromStorage)) {\n          ddsTypesFromStorage = [];\n        }\n      } catch (e) {\n        console.error('Error parsing saved DDS types:', e);\n      }\n    }\n    \n    // Parse saved products if available\n    if (savedProducts) {\n      try {\n        productsFromStorage = JSON.parse(savedProducts);\n        if (!Array.isArray(productsFromStorage)) {\n          productsFromStorage = [];\n        }\n      } catch (e) {\n        console.error('Error parsing saved products:', e);\n      }\n    }\n    \n    // Extract unique categories from conditions\n    const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n    \n    // Extract unique DDS types from conditions\n    const allDdsTypes = [];\n    conditions.forEach(condition => {\n      condition.dds.forEach(dds => {\n        if (!allDdsTypes.includes(dds)) {\n          allDdsTypes.push(dds);\n        }\n      });\n    });\n    \n    // Extract all products from conditions\n    const productsSet = new Set();\n    conditions.forEach(condition => {\n      if (condition.productDetails) {\n        Object.keys(condition.productDetails).forEach(product => {\n          productsSet.add(product);\n        });\n      }\n    });\n    const productsFromConditions = Array.from(productsSet);\n    \n    // Merge saved categories with ones from conditions and remove duplicates\n    const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n    \n    // Merge saved DDS types with ones from conditions and remove duplicates\n    const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n    \n    // Merge saved products with ones from conditions and remove duplicates\n    const mergedProducts = [...new Set([...productsFromStorage, ...productsFromConditions])];\n    \n    // Set the merged lists\n    setCategories(mergedCategories);\n    setDdsTypes(mergedDdsTypes);\n    setAllProducts(mergedProducts);\n    \n    // Select first condition by default\n    if (conditions.length > 0 && !selectedCondition) {\n      setSelectedCondition(conditions[0]);\n      \n      // Initialize patient-specific product configuration\n      const firstCondition = conditions[0];\n      initializePatientSpecificProducts(firstCondition);\n    }\n  }\n}, [conditions]);\n\nfunction AdminPanel({ conditions, onConditionsUpdate, onClose }) {\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  \n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n  \n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n  \n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n      \n      // Try to load saved categories and DDS types from localStorage first\n      const savedCategories = localStorage.getItem('categories_data');\n      const savedDdsTypes = localStorage.getItem('dds_types_data');\n      \n      let categoriesFromStorage = [];\n      let ddsTypesFromStorage = [];\n      \n      // Parse saved categories if available\n      if (savedCategories) {\n        try {\n          categoriesFromStorage = JSON.parse(savedCategories);\n          if (!Array.isArray(categoriesFromStorage)) {\n            categoriesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved categories:', e);\n        }\n      }\n      \n      // Parse saved DDS types if available\n      if (savedDdsTypes) {\n        try {\n          ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n          if (!Array.isArray(ddsTypesFromStorage)) {\n            ddsTypesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved DDS types:', e);\n        }\n      }\n      \n      // Extract unique categories from conditions\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      \n      // Extract unique DDS types from conditions\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      \n      // Merge saved categories with ones from conditions and remove duplicates\n      const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n      \n      // Merge saved DDS types with ones from conditions and remove duplicates\n      const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n      \n      // Set the merged lists\n      setCategories(mergedCategories);\n      setDdsTypes(mergedDdsTypes);\n      \n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n        \n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = (condition) => {\n    if (!condition) return;\n    \n    const patientProducts = {};\n    \n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n      \n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        } \n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n      \n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n      \n      // For conditions where Type 3/4 get additional products\n      if (\n        (condition.name === 'Gingival Recession Surgery' && phase === 'Acute') ||\n        (condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute')\n      ) {\n        if (patientProducts[phase]['3'].includes('Synvaza') && \n            !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  };\n\n  const handleEditProduct = (product) => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = { name: product, usage: '', rationale: '', competitive: '', objection: '', factSheet: '#' };\n    \n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#'\n        };\n        break;\n      }\n    }\n    \n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\nconst handleSaveChanges = async () => {\n  setIsSaving(true);\n  try {\n    // Apply patient-specific products to condition\n    const updatedConditions = applyPatientSpecificProducts();\n    \n    // Save all data: conditions, categories, and DDS types\n    const result = await saveToBackend(updatedConditions, categories, ddsTypes);\n    \n    if (result.success) {\n      // Pass the updated data back to parent component\n      onConditionsUpdate(updatedConditions, categories, ddsTypes);\n      setShowSuccess(true);\n      setTimeout(() => setShowSuccess(false), 3000);\n    }\n  } catch (error) {\n    console.error('Error saving changes:', error);\n    // Handle error (show error notification, etc.)\n  } finally {\n    setIsSaving(false);\n  }\n};\n  \n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n    \n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n    \n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n    \n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n    \n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n    \n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n      \n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      \n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n      \n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n      \n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => \n          (patientTypesForPhase[patientType] || []).includes(product)\n        );\n        \n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n      \n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n      \n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      \n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if (\n          (patientTypesForPhase['4'] || []).includes(product) && \n          !(patientTypesForPhase['1'] || []).includes(product) && \n          !(patientTypesForPhase['2'] || []).includes(product) &&\n          !product.includes('(Type')\n        ) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n      \n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n      \n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n      \n      // Ensure all products have product details\n      const allProductsToCheck = [\n        ...commonProducts, \n        ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n        // Add products that are only in some patient types\n        ...[...productsInAllTypes].filter(p => !commonProducts.has(p))\n      ];\n      \n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n      \n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n        \n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#'\n          };\n          \n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName]\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    \n    return updatedConditions;\n  };\n  \n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n    \n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n  \n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n  \n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => \n        condition.name === conditionId\n          ? { ...condition, [field]: value }\n          : condition\n      )\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({ ...prev, [field]: value }));\n    }\n  };\n  \n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.name === conditionId) {\n          const updatedProductDetails = { ...condition.productDetails };\n          if (!updatedProductDetails[productName]) {\n            updatedProductDetails[productName] = {};\n          }\n          updatedProductDetails[productName][field] = value;\n          return { ...condition, productDetails: updatedProductDetails };\n        }\n        return condition;\n      })\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = { ...selectedCondition.productDetails };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({ \n        ...prev, \n        productDetails: updatedProductDetails \n      }));\n    }\n  };\n  \n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n  \n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n      \n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n        \n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => \n          updated[phase][type].includes(productName)\n        );\n        \n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      \n      return updated;\n    });\n  };\n  \n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n        \n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      \n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n  \n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n  \n  // Submit new item from modal\nconst handleSubmitNewItem = () => {\n  setIsEditing(true);\n  \n  if (modalType === 'product') {\n    const productName = newItemData.name;\n    \n    if (editingProductId && editingProductId !== productName) {\n      // Product name was changed - need to update all references\n      setEditedConditions(prev => \n        prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = { ...condition.products };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => \n              p === editingProductId ? productName : \n              p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p\n            );\n          });\n          \n          // Update product details\n          const updatedProductDetails = { ...condition.productDetails };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          \n          return { \n            ...condition, \n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        })\n      );\n      \n      // Update allProducts list\n      setAllProducts(prev => {\n        const index = prev.indexOf(editingProductId);\n        if (index !== -1) {\n          const updated = [...prev];\n          updated[index] = productName;\n          return updated;\n        }\n        return [...prev, productName];\n      });\n      \n      // Update patient-specific products if currently editing\n      if (selectedCondition) {\n        setPatientSpecificProducts(prev => {\n          const updated = { ...prev };\n          Object.keys(updated).forEach(phase => {\n            Object.keys(updated[phase]).forEach(type => {\n              updated[phase][type] = updated[phase][type].map(p => \n                p === editingProductId ? productName : p\n              );\n            });\n          });\n          return updated;\n        });\n      }\n    } else if (editingProductId) {\n      // Only details changed, not the name\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          }\n          return condition;\n        })\n      );\n    } else {\n      // This is a new product\n      if (!allProducts.includes(productName)) {\n        setAllProducts(prev => [...prev, productName]);\n        \n        // Add product details to all conditions that use it\n        setEditedConditions(prev => \n          prev.map(condition => {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          })\n        );\n      }\n    }\n  } else if (modalType === 'condition') {\n    // Add new condition\n    if (newItemData.name && !editedConditions.find(c => c.name === newItemData.name)) {\n      const newCondition = {\n        name: newItemData.name,\n        category: newItemData.category || categories[0] || '',\n        phases: newItemData.phases || ['Prep', 'Acute', 'Maintenance'],\n        dds: newItemData.dds || [],\n        patientType: newItemData.patientType || 'Types 1 to 4',\n        products: newItemData.products || {\n          Prep: [],\n          Acute: [],\n          Maintenance: []\n        },\n        pitchPoints: newItemData.pitchPoints || '',\n        productDetails: {}\n      };\n      \n      setEditedConditions(prev => [...prev, newCondition]);\n      setSelectedCondition(newCondition);\n    }\n  } else if (modalType === 'category') {\n    // Add new category\n    if (newItemData.name && !categories.includes(newItemData.name)) {\n      // Update categories list\n      setCategories(prev => [...prev, newItemData.name]);\n      \n      // Add new category to all conditions that need it\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.category === '') {\n            return { ...condition, category: newItemData.name };\n          }\n          return condition;\n        })\n      );\n    }\n  } else if (modalType === 'ddsType') {\n    // Add new DDS type\n    if (newItemData.name && !ddsTypes.includes(newItemData.name)) {\n      setDdsTypes(prev => [...prev, newItemData.name]);\n    }\n  }\n  \n  setShowAddModal(false);\n  setNewItemData({});\n  setEditingProductId(null);\n};\n  \n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({ type, item });\n    setShowDeleteModal(true);\n  };\n  \n  // Handle delete\n  // Handle delete\nconst handleDelete = () => {\n  setIsEditing(true);\n  const { type, item } = itemToDelete;\n  \n  if (type === 'condition') {\n    setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n    \n    // Select a new condition if the deleted one was selected\n    if (selectedCondition && selectedCondition.name === item.name) {\n      const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n      setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n    }\n  } else if (type === 'product') {\n    // Remove product from all conditions\n    setEditedConditions(prev => \n      prev.map(condition => {\n        const updatedProducts = { ...condition.products };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => \n            p !== item && p !== `${item} (Type 3/4 Only)`\n          );\n        });\n        \n        const updatedProductDetails = { ...condition.productDetails };\n        delete updatedProductDetails[item];\n        \n        return { \n          ...condition, \n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      })\n    );\n    \n    // Update allProducts list\n    setAllProducts(prev => prev.filter(p => p !== item));\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      Object.keys(updated).forEach(phase => {\n        Object.keys(updated[phase]).forEach(type => {\n          updated[phase][type] = updated[phase][type].filter(p => p !== item);\n        });\n      });\n      return updated;\n    });\n  } else if (type === 'category') {\n    // Don't allow deleting the 'All' category\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the category from the list\n    setCategories(prev => prev.filter(c => c !== item));\n    \n    // Update conditions that use this category (set to first available category or empty string)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.category === item) {\n          const newCategory = categories.find(c => c !== item && c !== 'All') || '';\n          return { ...condition, category: newCategory };\n        }\n        return condition;\n      })\n    );\n  } else if (type === 'ddsType') {\n    // Don't allow deleting the 'All' DDS type\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the DDS type from the list\n    setDdsTypes(prev => prev.filter(d => d !== item));\n    \n    // Update conditions that use this DDS type (remove it from their dds array)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.dds.includes(item)) {\n          return { \n            ...condition, \n            dds: condition.dds.filter(d => d !== item)\n          };\n        }\n        return condition;\n      })\n    );\n  }\n  \n  setShowDeleteModal(false);\n  setItemToDelete(null);\n};\n  \n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = (phase) => {\n    return (\n      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-medium\">Patient-Specific Product Configuration</h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Filter by:</span>\n            <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n              <Select.Trigger className=\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\">\n                <User size={15} className=\"mr-1 text-gray-500\" />\n                <Select.Value />\n                <Select.Icon><ChevronDown size={15} /></Select.Icon>\n              </Select.Trigger>\n              <Select.Portal>\n                <Select.Content className=\"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\">\n                  <Select.Viewport className=\"p-1\">\n                    {Object.entries(PATIENT_TYPES).map(([type, label]) => (\n                      <Select.Item\n                        key={type}\n                        value={type}\n                        className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        <Select.ItemText>{label}</Select.ItemText>\n                      </Select.Item>\n                    ))}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Portal>\n            </Select.Root>\n          </div>\n        </div>\n        \n        {activePatientType !== 'all' && (\n          <div className=\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\">\n            <Info size={15} className=\"mr-1 flex-shrink-0\" />\n            <span>\n              Configuring products specifically for <strong>{PATIENT_TYPES[activePatientType]}</strong>.\n              Products added here will only be recommended for this patient type.\n            </span>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Products for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}</span>\n          <select\n            onChange={(e) => {\n              if (e.target.value) {\n                addProductToPatientType(phase, activePatientType, e.target.value);\n                e.target.value = ''; // Reset select\n              }\n            }}\n            className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n          >\n            <option value=\"\">Add product...</option>\n            {allProducts\n              .filter(product => {\n                // Only show products that aren't already added for this patient type\n                if (!patientSpecificProducts[phase]) return true;\n                return !patientSpecificProducts[phase][activePatientType]?.includes(product);\n              })\n              .map((product) => (\n                <option key={product} value={product}>\n                  {product}\n                </option>\n              ))}\n          </select>\n        </div>\n        \n        {patientSpecificProducts[phase] && patientSpecificProducts[phase][activePatientType]?.length > 0 ? (\n          <ul className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {patientSpecificProducts[phase][activePatientType].map((product) => (\n              <li \n                key={product}\n                className=\"bg-white border rounded-md p-2 flex justify-between items-center\"\n              >\n                <span>{product}</span>\n                <button\n                  onClick={() => removeProductFromPatientType(phase, activePatientType, product)}\n                  className=\"text-red-500 hover:text-red-700 p-1\"\n                >\n                  <Trash2 size={15} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\">\n            No products configured for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}.\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-gray-500\">\n        No conditions data available to edit.\n      </div>\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h2 className=\"text-xl font-bold\">Knowledge Base Administrator</h2>\n          <div className=\"flex items-center space-x-2\">\n            {/* Action buttons */}\n            {isEditing && (\n              <>\n                <button\n                  onClick={handleResetChanges}\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\"\n                  disabled={isSaving}\n                >\n                  Reset Changes\n                </button>\n                <button\n                  onClick={handleSaveChanges}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${\n                    isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>Saving...</>\n                  ) : (\n                    <>\n                      <Save size={16} className=\"mr-1\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Save success notification */}\n        {showSuccess && (\n          <div className=\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\">\n            <Check size={20} className=\"mr-2\" />\n            Changes saved successfully!\n          </div>\n        )}\n        \n        {/* Tabs */}\n        <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n          <Tabs.List className=\"flex border-b\">\n            <Tabs.Trigger\n              value=\"importExport\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"importExport\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Import/Export\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"conditions\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"conditions\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Conditions\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"products\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"products\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Products\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"categories\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"categories\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Categories & DDS Types\n            </Tabs.Trigger>\n          </Tabs.List>\n          \n          {/* Import/Export Tab */}\n          <Tabs.Content value=\"importExport\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2\">Knowledge Base Management</h3>\n              <p className=\"text-gray-600\">\n                Import and export your knowledge base data for backup purposes or to transfer between environments.\n              </p>\n            </div>\n            \n            <DataImportExport \n              conditions={editedConditions} \n              onImport={(importedData) => {\n                setEditedConditions(importedData);\n                setIsEditing(true);\n              }} \n            />\n          </Tabs.Content>\n          \n          {/* Conditions Tab */}\n          <Tabs.Content value=\"conditions\" className=\"flex-grow overflow-auto\">\n            <div className=\"flex h-full\">\n              {/* Conditions List */}\n              <div className=\"w-1/3 border-r p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">All Conditions</h3>\n                  <button\n                    onClick={handleAddCondition}\n                    className=\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add New\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-1\">\n                  {editedConditions.map((condition) => (\n                    <li \n                      key={condition.name}\n                      className={clsx(\n                        \"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",\n                        selectedCondition && selectedCondition.name === condition.name\n                          ? \"bg-blue-100\"\n                          : \"hover:bg-gray-100\"\n                      )}\n                      onClick={() => handleConditionSelect(condition)}\n                    >\n                      <div>\n                        <div className=\"font-medium text-sm\">{condition.name}</div>\n                        <div className=\"text-xs text-gray-500\">{condition.category}</div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          confirmDelete('condition', condition);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* Condition Editor */}\n              <div className=\"w-2/3 p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                {selectedCondition ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {/* Condition Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Condition Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={selectedCondition.name}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n                      \n                      {/* Category */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Category\n                        </label>\n                        <select\n                          value={selectedCondition.category}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'category', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          {categories.map((category) => (\n                            <option key={category} value={category}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    \n                    {/* Patient Type */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Patient Type\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={selectedCondition.patientType}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'patientType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Format: \"Types 1 to 4\" or \"Types 3 to 4\"</p>\n                    </div>\n                    \n                    {/* DDS Types */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        DDS Types\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.dds.map((dds) => (\n                            <span \n                              key={dds} \n                              className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {dds}\n                              <button\n                                onClick={() => {\n                                  const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                                  updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                                }}\n                                className=\"ml-1 text-blue-700 hover:text-blue-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <select\n                        onChange={(e) => {\n                          if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                            const updatedDds = [...selectedCondition.dds, e.target.value];\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          }\n                          e.target.value = ''; // Reset select\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Add DDS Type...</option>\n                        {ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map((dds) => (\n                          <option key={dds} value={dds}>\n                            {dds}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Pitch Points */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Pitch Points\n                      </label>\n                      <textarea\n                        value={selectedCondition.pitchPoints}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    \n                    {/* Competitive Advantage */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={selectedCondition.competitiveAdvantage || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Handling Objections */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={selectedCondition.handlingObjections || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    {/* Phases */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Treatment Phases\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.phases.map((phase) => (\n                            <span \n                              key={phase} \n                              className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {phase}\n                              <button\n                                onClick={() => {\n                                  const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                                  updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                                }}\n                                className=\"ml-1 text-purple-700 hover:text-purple-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"New phase name...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                              const updatedPhases = [...selectedCondition.phases, e.target.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              e.target.value = '';\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={(e) => {\n                            const input = e.target.previousElementSibling;\n                            if (input.value && !selectedCondition.phases.includes(input.value)) {\n                              const updatedPhases = [...selectedCondition.phases, input.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              input.value = '';\n                            }\n                          }}\n                          className=\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                    {/* Products by Phase with Patient Type Filtering */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Products by Phase</h3>\n                      \n                      <Tabs.Root defaultValue={selectedCondition.phases[0]} className=\"border rounded-md\">\n                        <Tabs.List className=\"flex border-b bg-gray-50\">\n                          {selectedCondition.phases.map((phase) => (\n                            <Tabs.Trigger\n                              key={phase}\n                              value={phase}\n                              className={clsx(\n                                \"flex-1 px-4 py-2 text-sm font-medium\",\n                                \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\n                                \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"\n                              )}\n                            >\n                              {phase} Phase\n                            </Tabs.Trigger>\n                          ))}\n                        </Tabs.List>\n                        \n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                            {/* Patient-specific product configuration */}\n                            {renderPatientTypeProductConfig(phase)}\n                          </Tabs.Content>\n                        ))}\n                      </Tabs.Root>\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Product Details</h3>\n                      \n                      {Object.keys(selectedCondition.productDetails || {}).length > 0 ? (\n                        <div className=\"space-y-6\">\n                          {Object.keys(selectedCondition.productDetails).map((productName) => (\n                            <div key={productName} className=\"border rounded-md p-4 bg-gray-50\">\n                              <h4 className=\"font-medium text-md mb-3\">{productName}</h4>\n                              \n                              <div className=\"space-y-3\">\n                                {/* ...existing fields... */}\n                                \n                                {/* Research Articles Section */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Supporting Research Articles\n                                  </label>\n                                  \n                                  {selectedCondition.productDetails[productName].researchArticles && \n                                    selectedCondition.productDetails[productName].researchArticles.map((article, index) => (\n                                    <div key={index} className=\"flex space-x-2 mb-2\">\n                                      <div className=\"flex-grow space-y-2\">\n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Article title\"\n                                          value={article.title || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].title = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Author/Source\"\n                                          value={article.author || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].author = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <textarea\n                                          placeholder=\"Abstract (optional)\"\n                                          value={article.abstract || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].abstract = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          rows={3}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"URL (optional)\"\n                                          value={article.url || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].url = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                      </div>\n                                      \n                                      <button\n                                        onClick={() => {\n                                          const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                          updatedArticles.splice(index, 1);\n                                          updateProductDetail(\n                                            selectedCondition.name, \n                                            productName, \n                                            'researchArticles', \n                                            updatedArticles\n                                          );\n                                        }}\n                                        className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                                      >\n                                        <X size={16} />\n                                      </button>\n                                    </div>\n                                  ))}\n                                  \n                                  <button\n                                    onClick={() => {\n                                      const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                                      const updatedArticles = [...currentArticles, { title: '', author: '', url: '' }];\n                                      updateProductDetail(\n                                        selectedCondition.name, \n                                        productName, \n                                        'researchArticles', \n                                        updatedArticles\n                                      );\n                                    }}\n                                    className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                                  >\n                                    <Plus size={16} className=\"mr-1\" />\n                                    Add Research Article\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-gray-500 text-sm italic\">\n                          No product details available. Add products to phases first.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-10 text-gray-500\">\n                    Select a condition to edit or create a new one\n                  </div>\n                )}\n              </div>\n            </div>\n          </Tabs.Content>\n          \n          {/* Products Tab */}\n          <Tabs.Content value=\"products\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-medium\">Product Library</h3>\n              <button\n                onClick={handleAddProduct}\n                className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n              >\n                <Plus size={16} className=\"mr-1\" />\n                Add New Product\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {allProducts.map((product) => (\n                <div key={product} className=\"border rounded-lg p-4 hover:bg-gray-50 group\">\n                <div className=\"flex justify-between items-start\">\n                  <h4 className=\"font-medium text-md\">{product}</h4>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => handleEditProduct(product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\"\n                      title=\"Edit product details\"\n                    >\n                      <Edit size={16} />\n                    </button>\n                    <button\n                      onClick={() => confirmDelete('product', product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      title=\"Delete product\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                </div>\n                  \n                {editedConditions[0]?.productDetails?.[product] && (\n                  <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Usage: </span>\n                      {editedConditions[0].productDetails[product].usage}\n                    </div>\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Conditions: </span>\n                      {editedConditions.filter(c => \n                        Object.values(c.products || {}).some(products => \n                          products.includes(product) || products.includes(`${product} (Type 3/4 Only)`)\n                        )\n                      ).length} conditions\n                    </div>\n                  </div>\n                )}\n              </div>\n              ))}\n            </div>\n          </Tabs.Content>\n          \n          {/* Categories & DDS Types Tab */}\n          <Tabs.Content value=\"categories\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {/* Categories */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">Categories</h3>\n                  <button\n                    onClick={handleAddCategory}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add Category\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {categories.map((category) => (\n                      <li \n                        key={category}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{category}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.category === category).length} conditions\n                          </div>\n                          {category !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('category', category)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete category\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              \n              {/* DDS Types */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">DDS Types</h3>\n                  <button\n                    onClick={handleAddDdsType}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add DDS Type\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {ddsTypes.map((ddsType) => (\n                      <li \n                        key={ddsType}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{ddsType}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.dds.includes(ddsType)).length} conditions\n                          </div>\n                          {ddsType !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('ddsType', ddsType)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete DDS type\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </Tabs.Content>\n        </Tabs.Root>\n\n        {/* Add New Item Modal */}\n        <Dialog.Root open={showAddModal} onOpenChange={setShowAddModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n            <Dialog.Title className=\"text-lg font-semibold mb-4\">\n              {modalType === 'condition' && 'Add New Condition'}\n              {modalType === 'category' && 'Add New Category'}\n              {modalType === 'ddsType' && 'Add New DDS Type'}\n              {modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')}\n            </Dialog.Title>\n\n              \n              <div className=\"space-y-4\">\n                {modalType === 'condition' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Condition Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Category\n                      </label>\n                      <select\n                        value={newItemData.category || ''}\n                        onChange={(e) => setNewItemData({...newItemData, category: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      >\n                        {categories.map((category) => (\n                          <option key={category} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Key Pitch Points\n                      </label>\n                      <textarea\n                        value={newItemData.pitchPoints || ''}\n                        onChange={(e) => setNewItemData({...newItemData, pitchPoints: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitiveAdvantage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitiveAdvantage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={newItemData.handlingObjections || ''}\n                        onChange={(e) => setNewItemData({...newItemData, handlingObjections: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </>\n                )}\n                \n                {modalType === 'category' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'ddsType' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      DDS Type Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'product' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Product Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Usage Instructions\n                      </label>\n                      <textarea\n                        value={newItemData.usage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, usage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, rationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitive || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitive: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Objection Handling\n                      </label>\n                      <textarea\n                        value={newItemData.objection || ''}\n                        onChange={(e) => setNewItemData({...newItemData, objection: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    {/* New Research Articles Section */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Supporting Research Articles\n                      </label>\n                      \n                      {newItemData.researchArticles && newItemData.researchArticles.map((article, index) => (\n                        <div key={index} className=\"flex space-x-2 mb-2\">\n                          <div className=\"flex-grow space-y-2\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Article title\"\n                              value={article.title || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].title = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"Author/Source\"\n                              value={article.author || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].author = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <textarea\n                              placeholder=\"Abstract (optional)\"\n                              value={article.abstract || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].abstract = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              rows={3}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"URL (optional)\"\n                              value={article.url || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].url = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                          </div>\n                          \n                          <button\n                            onClick={() => {\n                              const updatedArticles = [...newItemData.researchArticles];\n                              updatedArticles.splice(index, 1);\n                              setNewItemData({...newItemData, researchArticles: updatedArticles});\n                            }}\n                            className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                          >\n                            <X size={16} />\n                          </button>\n                        </div>\n                      ))}\n                      \n                      <button\n                        onClick={() => {\n                          const updatedArticles = [...(newItemData.researchArticles || []), { title: '', author: '', url: '' }];\n                          setNewItemData({...newItemData, researchArticles: updatedArticles});\n                        }}\n                        className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                      >\n                        <Plus size={16} className=\"mr-1\" />\n                        Add Research Article\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleSubmitNewItem}\n                  disabled={!newItemData.name}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm ${\n                    newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'\n                  }`}\n                >\n                  {editingProductId ? 'Save Changes' : 'Add'}\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n        \n        {/* Delete Confirmation Modal */}\n        <Dialog.Root open={showDeleteModal} onOpenChange={setShowDeleteModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-2 flex items-center text-red-600\">\n                <AlertTriangle size={20} className=\"mr-2\" />\n                Confirm Deletion\n              </Dialog.Title>\n              \n              <Dialog.Description className=\"text-gray-600 mb-4\">\n                {itemToDelete?.type === 'condition' && \n                  `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`}\n                \n                {itemToDelete?.type === 'product' && \n                  `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`}\n              </Dialog.Description>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}