{"ast":null,"code":"import React,{useState,useEffect}from'react';import*as Tabs from'@radix-ui/react-tabs';import*as Dialog from'@radix-ui/react-dialog';import*as Select from'@radix-ui/react-select';import{Save,Plus,Edit,Trash2,X,ChevronDown,Info,AlertTriangle,Lock,Check,User,Filter}from'lucide-react';import clsx from'clsx';import DataImportExport from'./DataImportExport';// Patient Types definition\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PATIENT_TYPES={'all':'All Patient Types','1':'Type 1: Healthy','2':'Type 2: Mild inflammation, moderate risk','3':'Type 3: Smoker, diabetic, immunocompromised','4':'Type 4: Periodontal disease, chronic illness, poor healing'};// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend=async(data,categoriesList,ddsTypesList,productsList)=>{// Simulate API call\nreturn new Promise(resolve=>{setTimeout(()=>{console.log('Data saved:',data);console.log('Categories saved:',categoriesList);console.log('DDS Types saved:',ddsTypesList);console.log('Products saved:',productsList);// Save everything to localStorage\nlocalStorage.setItem('conditions_data',JSON.stringify(data));localStorage.setItem('categories_data',JSON.stringify(categoriesList));localStorage.setItem('dds_types_data',JSON.stringify(ddsTypesList));localStorage.setItem('products_data',JSON.stringify(productsList));resolve({success:true});},1500);});};function AdminPanel(_ref){let{conditions,onConditionsUpdate,onClose}=_ref;const[activeTab,setActiveTab]=useState('conditions');const[editedConditions,setEditedConditions]=useState([]);const[selectedCondition,setSelectedCondition]=useState(null);const[editingProductId,setEditingProductId]=useState(null);const[selectedResearchProduct,setSelectedResearchProduct]=useState(null);const[categories,setCategories]=useState([]);const[ddsTypes,setDdsTypes]=useState([]);const[allProducts,setAllProducts]=useState([]);const[isEditing,setIsEditing]=useState(false);const[isSaving,setIsSaving]=useState(false);const[showSuccess,setShowSuccess]=useState(false);// Patient-specific products configuration\nconst[activePatientType,setActivePatientType]=useState('all');const[patientSpecificProducts,setPatientSpecificProducts]=useState({});// Modal states\nconst[showDeleteModal,setShowDeleteModal]=useState(false);const[itemToDelete,setItemToDelete]=useState(null);const[showAddModal,setShowAddModal]=useState(false);const[modalType,setModalType]=useState('');const[newItemData,setNewItemData]=useState({});// Initialize data\nuseEffect(()=>{if(conditions){setEditedConditions([...conditions]);// Try to load saved categories, DDS types, and products from localStorage first\nconst savedCategories=localStorage.getItem('categories_data');const savedDdsTypes=localStorage.getItem('dds_types_data');const savedProducts=localStorage.getItem('products_data');let categoriesFromStorage=[];let ddsTypesFromStorage=[];let productsFromStorage=[];// Parse saved categories if available\nif(savedCategories){try{categoriesFromStorage=JSON.parse(savedCategories);if(!Array.isArray(categoriesFromStorage)){categoriesFromStorage=[];}}catch(e){console.error('Error parsing saved categories:',e);}}// Parse saved DDS types if available\nif(savedDdsTypes){try{ddsTypesFromStorage=JSON.parse(savedDdsTypes);if(!Array.isArray(ddsTypesFromStorage)){ddsTypesFromStorage=[];}}catch(e){console.error('Error parsing saved DDS types:',e);}}// Parse saved products if available\nif(savedProducts){try{productsFromStorage=JSON.parse(savedProducts);if(!Array.isArray(productsFromStorage)){productsFromStorage=[];}}catch(e){console.error('Error parsing saved products:',e);}}// Extract unique categories from conditions\nconst uniqueCategories=[...new Set(conditions.map(c=>c.category))];// Extract unique DDS types from conditions\nconst allDdsTypes=[];conditions.forEach(condition=>{condition.dds.forEach(dds=>{if(!allDdsTypes.includes(dds)){allDdsTypes.push(dds);}});});// Extract all products from conditions\nconst productsSet=new Set();conditions.forEach(condition=>{if(condition.productDetails){Object.keys(condition.productDetails).forEach(product=>{productsSet.add(product);});}});const productsFromConditions=Array.from(productsSet);// Merge saved categories with ones from conditions and remove duplicates\nconst mergedCategories=[...new Set([...categoriesFromStorage,...uniqueCategories])];// Merge saved DDS types with ones from conditions and remove duplicates\nconst mergedDdsTypes=[...new Set([...ddsTypesFromStorage,...allDdsTypes])];// Merge saved products with ones from conditions and remove duplicates\nconst mergedProducts=[...new Set([...productsFromStorage,...productsFromConditions])];// Set the merged lists\nsetCategories(mergedCategories);setDdsTypes(mergedDdsTypes);setAllProducts(mergedProducts);// Select first condition by default\nif(conditions.length>0&&!selectedCondition){setSelectedCondition(conditions[0]);// Initialize patient-specific product configuration\nconst firstCondition=conditions[0];initializePatientSpecificProducts(firstCondition);}}},[conditions]);// Initialize patient-specific products when a condition is selected\nuseEffect(()=>{if(selectedCondition){initializePatientSpecificProducts(selectedCondition);}},[selectedCondition]);// Initialize patient-specific products for a condition\nconst initializePatientSpecificProducts=condition=>{if(!condition)return;const patientProducts={};// For each phase\ncondition.phases.forEach(phase=>{patientProducts[phase]={'all':condition.products[phase]||[],'1':[],'2':[],'3':[],'4':[]};// Analyze existing products to determine patient-specific assignments\nconst allProducts=condition.products[phase]||[];// Process regular products (for all patients)\nallProducts.forEach(product=>{if(!product.includes('(Type')){// Regular products apply to all patient types\npatientProducts[phase]['1'].push(product);patientProducts[phase]['2'].push(product);patientProducts[phase]['3'].push(product);patientProducts[phase]['4'].push(product);}// Process type-specific products\nelse if(product.includes('(Type 3/4 Only)')){const baseProduct=product.replace(' (Type 3/4 Only)','');patientProducts[phase]['3'].push(baseProduct);patientProducts[phase]['4'].push(baseProduct);}});// Try to infer patient types from condition patterns in Excel\n// For specific conditions with known patterns\nif(condition.name==='Gingival Recession Surgery'&&phase==='Prep'){// Type 1 gets nothing (N/A in Excel)\npatientProducts[phase]['1']=[];}// For conditions where Type 3/4 get additional products\nif(condition.name==='Gingival Recession Surgery'&&phase==='Acute'||condition.name==='Scaling and Root Planing (SRP)'&&phase==='Acute'){if(patientProducts[phase]['3'].includes('Synvaza')&&!patientProducts[phase]['3'].includes('AO ProVantage Gel')){patientProducts[phase]['3'].push('AO ProVantage Gel');patientProducts[phase]['4'].push('AO ProVantage Gel');}}});setPatientSpecificProducts(patientProducts);};const handleEditProduct=product=>{// Find the product details from the first condition that uses it (for consistency)\nlet productDetails={name:product,usage:'',rationale:'',competitive:'',objection:'',factSheet:'#',researchArticles:[]// Initialize with empty array\n};// Try to find existing details\nfor(const condition of editedConditions){if(condition.productDetails&&condition.productDetails[product]){productDetails={name:product,usage:condition.productDetails[product].usage||'',rationale:condition.productDetails[product].rationale||'',competitive:condition.productDetails[product].competitive||'',objection:condition.productDetails[product].objection||'',factSheet:condition.productDetails[product].factSheet||'#',researchArticles:condition.productDetails[product].researchArticles||[]// Load existing research articles\n};break;}}setNewItemData(productDetails);setModalType('product');setEditingProductId(product);setShowAddModal(true);};// Save all changes\nconst handleSaveChanges=async()=>{setIsSaving(true);try{// Apply patient-specific products to condition\nconst updatedConditions=applyPatientSpecificProducts();// Save all data: conditions, categories, and DDS types, and products\nconst result=await saveToBackend(updatedConditions,categories,ddsTypes,allProducts);if(result.success){// Pass the updated data back to parent component\nonConditionsUpdate(updatedConditions,categories,ddsTypes,allProducts);setShowSuccess(true);setTimeout(()=>setShowSuccess(false),3000);}}catch(error){console.error('Error saving changes:',error);// Handle error (show error notification, etc.)\n}finally{setIsSaving(false);}};// Apply patient-specific products to condition before saving\n// Apply patient-specific products to condition before saving\nconst applyPatientSpecificProducts=()=>{if(!selectedCondition)return[...editedConditions];// Deep copy of edited conditions\nconst updatedConditions=JSON.parse(JSON.stringify(editedConditions));// Find the condition to update\nconst conditionIndex=updatedConditions.findIndex(c=>c.name===selectedCondition.name);if(conditionIndex===-1)return updatedConditions;// Create a metadata field if it doesn't exist to store patient-specific configurations\nif(!updatedConditions[conditionIndex].patientSpecificConfig){updatedConditions[conditionIndex].patientSpecificConfig={};}// Store the complete patient-specific configuration\nupdatedConditions[conditionIndex].patientSpecificConfig=JSON.parse(JSON.stringify(patientSpecificProducts));// Update each phase's products for backward compatibility with existing code\nObject.keys(patientSpecificProducts).forEach(phase=>{const phaseProducts=[];const patientTypesForPhase=patientSpecificProducts[phase];// Start with regular products (all patient types)\nconst commonProducts=new Set();// Find products common to all patient types\nconst allPatientTypes=['1','2','3','4'];const productsInAllTypes=new Set();// First pass: collect all products\nallPatientTypes.forEach(patientType=>{(patientTypesForPhase[patientType]||[]).forEach(product=>{productsInAllTypes.add(product);});});// Second pass: find which products are in all patient types\nfor(const product of productsInAllTypes){const isInAllTypes=allPatientTypes.every(patientType=>(patientTypesForPhase[patientType]||[]).includes(product));if(isInAllTypes){commonProducts.add(product);}}// Add common products first\nphaseProducts.push(...Array.from(commonProducts));// Check for Type 3/4 specific products\nconst type34Products=new Set();(patientTypesForPhase['3']||[]).forEach(product=>{if((patientTypesForPhase['4']||[]).includes(product)&&!(patientTypesForPhase['1']||[]).includes(product)&&!(patientTypesForPhase['2']||[]).includes(product)&&!product.includes('(Type')){type34Products.add(`${product} (Type 3/4 Only)`);}});// Add Type 3/4 specific products\nphaseProducts.push(...Array.from(type34Products));// Update the condition's products for this phase\nupdatedConditions[conditionIndex].products[phase]=phaseProducts;// Ensure all products have product details\nconst allProductsToCheck=[...commonProducts,...Array.from(type34Products).map(p=>p.replace(' (Type 3/4 Only)','')),// Add products that are only in some patient types\n...[...productsInAllTypes].filter(p=>!commonProducts.has(p))];// Initialize productDetails if it doesn't exist\nif(!updatedConditions[conditionIndex].productDetails){updatedConditions[conditionIndex].productDetails={};}// Make sure all products have details\nallProductsToCheck.forEach(product=>{const cleanProductName=product.replace(' (Type 3/4 Only)','');// If product doesn't have details yet, create empty details\nif(!updatedConditions[conditionIndex].productDetails[cleanProductName]){updatedConditions[conditionIndex].productDetails[cleanProductName]={usage:'',rationale:'',competitive:'',objection:'',factSheet:'#',researchArticles:[]// Initialize with empty array\n};// Try to find product details from other conditions\nfor(const condition of updatedConditions){if(condition.productDetails&&condition.productDetails[cleanProductName]){updatedConditions[conditionIndex].productDetails[cleanProductName]={...condition.productDetails[cleanProductName]// This will include researchArticles if they exist\n};break;}}}});});return updatedConditions;};// Reset changes\nconst handleResetChanges=()=>{setEditedConditions([...conditions]);setIsEditing(false);// Reset patient-specific products\nif(selectedCondition){initializePatientSpecificProducts(selectedCondition);}};// Handle condition selection\nconst handleConditionSelect=condition=>{setSelectedCondition(condition);setActivePatientType('all');initializePatientSpecificProducts(condition);};// Update condition field\nconst updateConditionField=(conditionId,field,value)=>{setIsEditing(true);setEditedConditions(prev=>prev.map(condition=>condition.name===conditionId?{...condition,[field]:value}:condition));// Update selected condition if it's the one being edited\nif(selectedCondition&&selectedCondition.name===conditionId){setSelectedCondition(prev=>({...prev,[field]:value}));}};// Update product details\nconst updateProductDetail=(conditionId,productName,field,value)=>{setIsEditing(true);setEditedConditions(prev=>prev.map(condition=>{if(condition.name===conditionId){const updatedProductDetails={...condition.productDetails};if(!updatedProductDetails[productName]){updatedProductDetails[productName]={usage:'',rationale:'',clinicalEvidence:'',// Initialize this field as well\ncompetitive:'',objection:'',factSheet:'#',researchArticles:[]};}updatedProductDetails[productName][field]=value;return{...condition,productDetails:updatedProductDetails};}return condition;}));// Update selected condition if it's the one being edited\nif(selectedCondition&&selectedCondition.name===conditionId){const updatedProductDetails={...selectedCondition.productDetails};if(!updatedProductDetails[productName]){updatedProductDetails[productName]={usage:'',rationale:'',clinicalEvidence:'',// Initialize this field as well\ncompetitive:'',objection:'',factSheet:'#',researchArticles:[]};}updatedProductDetails[productName][field]=value;setSelectedCondition(prev=>({...prev,productDetails:updatedProductDetails}));}};// Handle patient type selection for product configuration\nconst handlePatientTypeSelect=type=>{setActivePatientType(type);};// Add product to specific patient type and phase\nconst addProductToPatientType=(phase,patientType,productName)=>{setIsEditing(true);// Update patient-specific products\nsetPatientSpecificProducts(prev=>{const updated={...prev};// Initialize phase if not exists\nif(!updated[phase]){updated[phase]={'all':[],'1':[],'2':[],'3':[],'4':[]};}// If patientType is 'all', add to all patient types\nif(patientType==='all'){// Add to all patient types, including 'all'\nupdated[phase]['all']=[...new Set([...updated[phase]['all'],productName])];updated[phase]['1']=[...new Set([...updated[phase]['1'],productName])];updated[phase]['2']=[...new Set([...updated[phase]['2'],productName])];updated[phase]['3']=[...new Set([...updated[phase]['3'],productName])];updated[phase]['4']=[...new Set([...updated[phase]['4'],productName])];}else{// Add to specific patient type\nupdated[phase][patientType]=[...new Set([...updated[phase][patientType],productName])];// Check if product is now in all individual patient types and update 'all' accordingly\nconst isInAllTypes=['1','2','3','4'].every(type=>updated[phase][type].includes(productName));if(isInAllTypes&&!updated[phase]['all'].includes(productName)){updated[phase]['all']=[...updated[phase]['all'],productName];}}return updated;});};// Remove product from specific patient type and phase\nconst removeProductFromPatientType=(phase,patientType,productName)=>{setIsEditing(true);// Update patient-specific products\nsetPatientSpecificProducts(prev=>{const updated={...prev};// If patientType is 'all', remove from all patient types\nif(patientType==='all'){updated[phase]['all']=updated[phase]['all'].filter(p=>p!==productName);updated[phase]['1']=updated[phase]['1'].filter(p=>p!==productName);updated[phase]['2']=updated[phase]['2'].filter(p=>p!==productName);updated[phase]['3']=updated[phase]['3'].filter(p=>p!==productName);updated[phase]['4']=updated[phase]['4'].filter(p=>p!==productName);}else{// Remove from specific patient type\nupdated[phase][patientType]=updated[phase][patientType].filter(p=>p!==productName);// Remove from 'all' as well since it's no longer in all patient types\nupdated[phase]['all']=updated[phase]['all'].filter(p=>p!==productName);}return updated;});};// Add new condition\nconst handleAddCondition=()=>{setModalType('condition');setNewItemData({name:'',category:categories[0]||'',phases:['Prep','Acute','Maintenance'],dds:[],patientType:'Types 1 to 4',products:{Prep:[],Acute:[],Maintenance:[]},pitchPoints:'',scientificRationale:'',// Add this\nclinicalEvidence:'',// Add this\ncompetitiveAdvantage:'',handlingObjections:'',productDetails:{},conditionSpecificResearch:{}// Add this\n});setShowAddModal(true);};// Add new category\nconst handleAddCategory=()=>{setModalType('category');setNewItemData({name:''});setShowAddModal(true);};// Add new DDS type\nconst handleAddDdsType=()=>{setModalType('ddsType');setNewItemData({name:''});setShowAddModal(true);};// Add new product\nconst handleAddProduct=()=>{setModalType('product');setNewItemData({name:'',usage:'',rationale:'',competitive:'',objection:'',factSheet:'#',researchArticles:[]// Initialize with empty array\n});setShowAddModal(true);};// Submit new item from modal\nconst handleSubmitNewItem=()=>{setIsEditing(true);if(modalType==='product'){const productName=newItemData.name;if(editingProductId&&editingProductId!==productName){// Product name was changed - need to update all references\nsetEditedConditions(prev=>prev.map(condition=>{// Update product references in all phases\nconst updatedProducts={...condition.products};Object.keys(updatedProducts).forEach(phase=>{updatedProducts[phase]=updatedProducts[phase].map(p=>p===editingProductId?productName:p===`${editingProductId} (Type 3/4 Only)`?`${productName} (Type 3/4 Only)`:p);});// Update product details\nconst updatedProductDetails={...condition.productDetails};if(updatedProductDetails[editingProductId]){updatedProductDetails[productName]={usage:newItemData.usage,rationale:newItemData.rationale,competitive:newItemData.competitive,objection:newItemData.objection,factSheet:newItemData.factSheet||'#',researchArticles:newItemData.researchArticles||[]// Preserve research articles\n};delete updatedProductDetails[editingProductId];}return{...condition,products:updatedProducts,productDetails:updatedProductDetails};}));// Update allProducts list\nsetAllProducts(prev=>{const index=prev.indexOf(editingProductId);if(index!==-1){const updated=[...prev];updated[index]=productName;return updated;}return[...prev,productName];});// Update patient-specific products if currently editing\nif(selectedCondition){setPatientSpecificProducts(prev=>{const updated={...prev};Object.keys(updated).forEach(phase=>{Object.keys(updated[phase]).forEach(type=>{updated[phase][type]=updated[phase][type].map(p=>p===editingProductId?productName:p);});});return updated;});}}else if(editingProductId){// Only details changed, not the name\nsetEditedConditions(prev=>prev.map(condition=>{if(condition.productDetails&&condition.productDetails[productName]){const updatedProductDetails={...condition.productDetails};updatedProductDetails[productName]={...updatedProductDetails[productName],// Keep any existing fields\nusage:newItemData.usage,rationale:newItemData.rationale,competitive:newItemData.competitive,objection:newItemData.objection,factSheet:newItemData.factSheet||'#',researchArticles:newItemData.researchArticles||[]// Add research articles\n};return{...condition,productDetails:updatedProductDetails};}return condition;}));}else{// This is a new product\nif(!allProducts.includes(productName)){setAllProducts(prev=>[...prev,productName]);// Add product details to all conditions that use it\nsetEditedConditions(prev=>prev.map(condition=>{const updatedProductDetails={...condition.productDetails};updatedProductDetails[productName]={usage:newItemData.usage,rationale:newItemData.rationale,competitive:newItemData.competitive,objection:newItemData.objection,factSheet:newItemData.factSheet||'#',researchArticles:newItemData.researchArticles||[]// Add research articles for new products\n};return{...condition,productDetails:updatedProductDetails};}));}}}else if(modalType==='condition'){// Add new condition\nif(newItemData.name&&!editedConditions.find(c=>c.name===newItemData.name)){const newCondition={name:newItemData.name,category:newItemData.category||categories[0]||'',phases:newItemData.phases||['Prep','Acute','Maintenance'],dds:newItemData.dds||[],patientType:newItemData.patientType||'Types 1 to 4',products:newItemData.products||{Prep:[],Acute:[],Maintenance:[]},pitchPoints:newItemData.pitchPoints||'',productDetails:{}};setEditedConditions(prev=>[...prev,newCondition]);setSelectedCondition(newCondition);}}else if(modalType==='category'){// Add new category\nif(newItemData.name&&!categories.includes(newItemData.name)){// Update categories list\nsetCategories(prev=>[...prev,newItemData.name]);// Add new category to all conditions that need it\nsetEditedConditions(prev=>prev.map(condition=>{if(condition.category===''){return{...condition,category:newItemData.name};}return condition;}));}}else if(modalType==='ddsType'){// Add new DDS type\nif(newItemData.name&&!ddsTypes.includes(newItemData.name)){setDdsTypes(prev=>[...prev,newItemData.name]);}}setShowAddModal(false);setNewItemData({});setEditingProductId(null);};// Delete confirmation\nconst confirmDelete=(type,item)=>{setItemToDelete({type,item});setShowDeleteModal(true);};// Handle delete\n// Handle delete\nconst handleDelete=()=>{setIsEditing(true);const{type,item}=itemToDelete;if(type==='condition'){setEditedConditions(prev=>prev.filter(c=>c.name!==item.name));// Select a new condition if the deleted one was selected\nif(selectedCondition&&selectedCondition.name===item.name){const remainingConditions=editedConditions.filter(c=>c.name!==item.name);setSelectedCondition(remainingConditions.length>0?remainingConditions[0]:null);}}else if(type==='product'){// Remove product from all conditions\nsetEditedConditions(prev=>prev.map(condition=>{const updatedProducts={...condition.products};Object.keys(updatedProducts).forEach(phase=>{updatedProducts[phase]=updatedProducts[phase].filter(p=>p!==item&&p!==`${item} (Type 3/4 Only)`);});const updatedProductDetails={...condition.productDetails};delete updatedProductDetails[item];return{...condition,products:updatedProducts,productDetails:updatedProductDetails};}));// Update allProducts list\nsetAllProducts(prev=>prev.filter(p=>p!==item));// Update patient-specific products\nsetPatientSpecificProducts(prev=>{const updated={...prev};Object.keys(updated).forEach(phase=>{Object.keys(updated[phase]).forEach(type=>{updated[phase][type]=updated[phase][type].filter(p=>p!==item);});});return updated;});}else if(type==='category'){// Don't allow deleting the 'All' category\nif(item==='All'){setShowDeleteModal(false);setItemToDelete(null);return;}// Remove the category from the list\nsetCategories(prev=>prev.filter(c=>c!==item));// Update conditions that use this category (set to first available category or empty string)\nsetEditedConditions(prev=>prev.map(condition=>{if(condition.category===item){const newCategory=categories.find(c=>c!==item&&c!=='All')||'';return{...condition,category:newCategory};}return condition;}));}else if(type==='ddsType'){// Don't allow deleting the 'All' DDS type\nif(item==='All'){setShowDeleteModal(false);setItemToDelete(null);return;}// Remove the DDS type from the list\nsetDdsTypes(prev=>prev.filter(d=>d!==item));// Update conditions that use this DDS type (remove it from their dds array)\nsetEditedConditions(prev=>prev.map(condition=>{if(condition.dds.includes(item)){return{...condition,dds:condition.dds.filter(d=>d!==item)};}return condition;}));}setShowDeleteModal(false);setItemToDelete(null);};// Render patient type filter and product configuration UI\nconst renderPatientTypeProductConfig=phase=>{var _patientSpecificProdu2;return/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 border rounded-lg p-4 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium\",children:\"Patient-Specific Product Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Filter by:\"}),/*#__PURE__*/_jsxs(Select.Root,{value:activePatientType,onValueChange:handlePatientTypeSelect,children:[/*#__PURE__*/_jsxs(Select.Trigger,{className:\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\",children:[/*#__PURE__*/_jsx(User,{size:15,className:\"mr-1 text-gray-500\"}),/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:15})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:Object.entries(PATIENT_TYPES).map(_ref2=>{let[type,label]=_ref2;return/*#__PURE__*/_jsx(Select.Item,{value:type,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:label})},type);})})})})]})]})]}),activePatientType!=='all'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\",children:[/*#__PURE__*/_jsx(Info,{size:15,className:\"mr-1 flex-shrink-0\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Configuring products specifically for \",/*#__PURE__*/_jsx(\"strong\",{children:PATIENT_TYPES[activePatientType]}),\". Products added here will only be recommended for this patient type.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-gray-700\",children:[\"Products for \",activePatientType==='all'?'All Patient Types':`Type ${activePatientType}`]}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>{if(e.target.value){addProductToPatientType(phase,activePatientType,e.target.value);e.target.value='';// Reset select\n}},className:\"px-3 py-1 border border-gray-300 rounded-md text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Add product...\"}),allProducts.filter(product=>{var _patientSpecificProdu;// Only show products that aren't already added for this patient type\nif(!patientSpecificProducts[phase])return true;return!((_patientSpecificProdu=patientSpecificProducts[phase][activePatientType])!==null&&_patientSpecificProdu!==void 0&&_patientSpecificProdu.includes(product));}).map(product=>/*#__PURE__*/_jsx(\"option\",{value:product,children:product},product))]})]}),patientSpecificProducts[phase]&&((_patientSpecificProdu2=patientSpecificProducts[phase][activePatientType])===null||_patientSpecificProdu2===void 0?void 0:_patientSpecificProdu2.length)>0?/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2 max-h-60 overflow-y-auto\",children:patientSpecificProducts[phase][activePatientType].map(product=>/*#__PURE__*/_jsxs(\"li\",{className:\"bg-white border rounded-md p-2 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"span\",{children:product}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeProductFromPatientType(phase,activePatientType,product),className:\"text-red-500 hover:text-red-700 p-1\",children:/*#__PURE__*/_jsx(Trash2,{size:15})})]},product))}):/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\",children:[\"No products configured for \",activePatientType==='all'?'All Patient Types':`Type ${activePatientType}`,\".\"]})]});};// Return early if no data\nif(!conditions||conditions.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"p-8 text-center text-gray-500\",children:\"No conditions data available to edit.\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-4 border-b\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold\",children:\"Knowledge Base Administrator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[isEditing&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleResetChanges,className:\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",disabled:isSaving,children:\"Reset Changes\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveChanges,className:`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${isSaving?'bg-blue-400':'bg-blue-600 hover:bg-blue-700'}`,disabled:isSaving,children:isSaving?/*#__PURE__*/_jsx(_Fragment,{children:\"Saving...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Save,{size:16,className:\"mr-1\"}),\"Save Changes\"]})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"text-gray-500 hover:text-gray-700\",children:/*#__PURE__*/_jsx(X,{size:20})})]})]}),showSuccess&&/*#__PURE__*/_jsxs(\"div\",{className:\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\",children:[/*#__PURE__*/_jsx(Check,{size:20,className:\"mr-2\"}),\"Changes saved successfully!\"]}),/*#__PURE__*/_jsxs(Tabs.Root,{value:activeTab,onValueChange:setActiveTab,children:[/*#__PURE__*/_jsxs(Tabs.List,{className:\"flex border-b\",children:[/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"importExport\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"importExport\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Import/Export\"}),/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"conditions\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"conditions\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Conditions\"}),/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"products\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"products\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Products\"}),/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"categories\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"categories\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Categories & DDS Types\"})]}),/*#__PURE__*/_jsxs(Tabs.Content,{value:\"importExport\",className:\"p-6\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2\",children:\"Knowledge Base Management\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Import and export your knowledge base data for backup purposes or to transfer between environments.\"})]}),/*#__PURE__*/_jsx(DataImportExport,{conditions:editedConditions,onImport:importedData=>{setEditedConditions(importedData);setIsEditing(true);}})]}),/*#__PURE__*/_jsx(Tabs.Content,{value:\"conditions\",className:\"flex-grow overflow-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-full\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/3 border-r p-4\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium\",children:\"All Conditions\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddCondition,className:\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add New\"]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-1\",children:editedConditions.map(condition=>/*#__PURE__*/_jsxs(\"li\",{className:clsx(\"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",selectedCondition&&selectedCondition.name===condition.name?\"bg-blue-100\":\"hover:bg-gray-100\"),onClick:()=>handleConditionSelect(condition),children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm\",children:condition.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:condition.category})]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();confirmDelete('condition',condition);},className:\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]},condition.name))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2/3 p-4\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:selectedCondition?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Condition Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedCondition.name,onChange:e=>updateConditionField(selectedCondition.name,'name',e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Category\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedCondition.category,onChange:e=>updateConditionField(selectedCondition.name,'category',e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",children:categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Patient Type\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedCondition.patientType,onChange:e=>updateConditionField(selectedCondition.name,'patientType',e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-xs text-gray-500\",children:\"Format: \\\"Types 1 to 4\\\" or \\\"Types 3 to 4\\\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"DDS Types\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-gray-300 rounded-md p-2 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedCondition.dds.map(dds=>/*#__PURE__*/_jsxs(\"span\",{className:\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\",children:[dds,/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedDds=selectedCondition.dds.filter(d=>d!==dds);updateConditionField(selectedCondition.name,'dds',updatedDds);},className:\"ml-1 text-blue-700 hover:text-blue-900\",children:/*#__PURE__*/_jsx(X,{size:14})})]},dds))})}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>{if(e.target.value&&!selectedCondition.dds.includes(e.target.value)){const updatedDds=[...selectedCondition.dds,e.target.value];updateConditionField(selectedCondition.name,'dds',updatedDds);}e.target.value='';// Reset select\n},className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Add DDS Type...\"}),ddsTypes.filter(dds=>!selectedCondition.dds.includes(dds)).map(dds=>/*#__PURE__*/_jsx(\"option\",{value:dds,children:dds},dds))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Pitch Points\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.pitchPoints,onChange:e=>updateConditionField(selectedCondition.name,'pitchPoints',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.competitiveAdvantage||'',onChange:e=>updateConditionField(selectedCondition.name,'competitiveAdvantage',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.handlingObjections||'',onChange:e=>updateConditionField(selectedCondition.name,'handlingObjections',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Scientific Rationale\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.scientificRationale||'',onChange:e=>updateConditionField(selectedCondition.name,'scientificRationale',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Clinical Evidence\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.clinicalEvidence||'',onChange:e=>updateConditionField(selectedCondition.name,'clinicalEvidence',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Treatment Phases\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-gray-300 rounded-md p-2 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedCondition.phases.map(phase=>/*#__PURE__*/_jsxs(\"span\",{className:\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\",children:[phase,/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedPhases=selectedCondition.phases.filter(p=>p!==phase);updateConditionField(selectedCondition.name,'phases',updatedPhases);},className:\"ml-1 text-purple-700 hover:text-purple-900\",children:/*#__PURE__*/_jsx(X,{size:14})})]},phase))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New phase name...\",className:\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",onKeyDown:e=>{if(e.key==='Enter'&&e.target.value&&!selectedCondition.phases.includes(e.target.value)){const updatedPhases=[...selectedCondition.phases,e.target.value];updateConditionField(selectedCondition.name,'phases',updatedPhases);e.target.value='';}}}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{const input=e.target.previousElementSibling;if(input.value&&!selectedCondition.phases.includes(input.value)){const updatedPhases=[...selectedCondition.phases,input.value];updateConditionField(selectedCondition.name,'phases',updatedPhases);input.value='';}},className:\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\",children:\"Add\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-lg mb-3\",children:\"Products by Phase\"}),/*#__PURE__*/_jsxs(Tabs.Root,{defaultValue:selectedCondition.phases[0],className:\"border rounded-md\",children:[/*#__PURE__*/_jsx(Tabs.List,{className:\"flex border-b bg-gray-50\",children:selectedCondition.phases.map(phase=>/*#__PURE__*/_jsxs(Tabs.Trigger,{value:phase,className:clsx(\"flex-1 px-4 py-2 text-sm font-medium\",\"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"),children:[phase,\" Phase\"]},phase))}),selectedCondition.phases.map(phase=>/*#__PURE__*/_jsx(Tabs.Content,{value:phase,className:\"p-4\",children:renderPatientTypeProductConfig(phase)},phase))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-lg mb-3\",children:\"Condition-Specific Research\"}),selectedCondition&&selectedCondition.productDetails&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Select Product to Manage Research:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"w-full px-3 py-2 border border-gray-300 rounded-md\",onChange:e=>{if(e.target.value){// Store the selected product name in state\nsetSelectedResearchProduct(e.target.value);}},value:selectedResearchProduct||'',children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a product...\"}),Object.keys(selectedCondition.productDetails).map(prod=>/*#__PURE__*/_jsx(\"option\",{value:prod,children:prod},prod))]})]}),selectedResearchProduct&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-md mb-2\",children:[\"Research Articles for \",selectedResearchProduct]}),!selectedCondition.conditionSpecificResearch&&updateConditionField(selectedCondition.name,'conditionSpecificResearch',{}),selectedCondition.conditionSpecificResearch&&selectedCondition.conditionSpecificResearch[selectedResearchProduct]&&selectedCondition.conditionSpecificResearch[selectedResearchProduct].map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mb-4 border-b pb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow space-y-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Article title\",value:article.title||'',onChange:e=>{const updatedResearch={...(selectedCondition.conditionSpecificResearch||{})};const updatedArticles=[...(updatedResearch[selectedResearchProduct]||[])];updatedArticles[index].title=e.target.value;updatedResearch[selectedResearchProduct]=updatedArticles;updateConditionField(selectedCondition.name,'conditionSpecificResearch',updatedResearch);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Author/Source\",value:article.author||'',onChange:e=>{const updatedResearch={...(selectedCondition.conditionSpecificResearch||{})};const updatedArticles=[...(updatedResearch[selectedResearchProduct]||[])];updatedArticles[index].author=e.target.value;updatedResearch[selectedResearchProduct]=updatedArticles;updateConditionField(selectedCondition.name,'conditionSpecificResearch',updatedResearch);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Abstract (optional)\",value:article.abstract||'',onChange:e=>{const updatedResearch={...(selectedCondition.conditionSpecificResearch||{})};const updatedArticles=[...(updatedResearch[selectedResearchProduct]||[])];updatedArticles[index].abstract=e.target.value;updatedResearch[selectedResearchProduct]=updatedArticles;updateConditionField(selectedCondition.name,'conditionSpecificResearch',updatedResearch);},rows:3,className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"URL (optional)\",value:article.url||'',onChange:e=>{const updatedResearch={...(selectedCondition.conditionSpecificResearch||{})};const updatedArticles=[...(updatedResearch[selectedResearchProduct]||[])];updatedArticles[index].url=e.target.value;updatedResearch[selectedResearchProduct]=updatedArticles;updateConditionField(selectedCondition.name,'conditionSpecificResearch',updatedResearch);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedResearch={...(selectedCondition.conditionSpecificResearch||{})};const updatedArticles=[...(updatedResearch[selectedResearchProduct]||[])];updatedArticles.splice(index,1);updatedResearch[selectedResearchProduct]=updatedArticles;updateConditionField(selectedCondition.name,'conditionSpecificResearch',updatedResearch);},className:\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",children:/*#__PURE__*/_jsx(X,{size:16})})]},index)),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const updatedResearch={...(selectedCondition.conditionSpecificResearch||{})};const updatedArticles=[...(updatedResearch[selectedResearchProduct]||[]),{title:'',author:'',abstract:'',url:''}];updatedResearch[selectedResearchProduct]=updatedArticles;updateConditionField(selectedCondition.name,'conditionSpecificResearch',updatedResearch);},className:\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add Research Article\"]})]}),!selectedResearchProduct&&selectedCondition&&/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 italic\",children:\"Select a product from the dropdown above to manage its research articles.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-lg mb-3\",children:\"Product Details\"}),Object.keys(selectedCondition.productDetails||{}).length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:Object.keys(selectedCondition.productDetails).map(productName=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-md p-4 bg-gray-50\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-md mb-3\",children:productName}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Supporting Research Articles\"}),selectedCondition.productDetails[productName].researchArticles&&selectedCondition.productDetails[productName].researchArticles.map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow space-y-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Article title\",value:article.title||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].title=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Author/Source\",value:article.author||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].author=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Abstract (optional)\",value:article.abstract||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].abstract=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},rows:3,className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"URL (optional)\",value:article.url||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].url=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles.splice(index,1);updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",children:/*#__PURE__*/_jsx(X,{size:16})})]},index)),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const currentArticles=selectedCondition.productDetails[productName].researchArticles||[];const updatedArticles=[...currentArticles,{title:'',author:'',url:''}];updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add Research Article\"]})]})})]},productName))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm italic\",children:\"No product details available. Add products to phases first.\"})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-10 text-gray-500\",children:\"Select a condition to edit or create a new one\"})})]})}),/*#__PURE__*/_jsxs(Tabs.Content,{value:\"products\",className:\"p-6\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium\",children:\"Product Library\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddProduct,className:\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add New Product\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",children:allProducts.map(product=>{var _editedConditions$,_editedConditions$$pr;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 hover:bg-gray-50 group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-md\",children:product}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditProduct(product),className:\"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\",title:\"Edit product details\",children:/*#__PURE__*/_jsx(Edit,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>confirmDelete('product',product),className:\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",title:\"Delete product\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]}),((_editedConditions$=editedConditions[0])===null||_editedConditions$===void 0?void 0:(_editedConditions$$pr=_editedConditions$.productDetails)===null||_editedConditions$$pr===void 0?void 0:_editedConditions$$pr[product])&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-sm text-gray-600 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"truncate\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Usage: \"}),editedConditions[0].productDetails[product].usage]}),/*#__PURE__*/_jsxs(\"div\",{className:\"truncate\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Conditions: \"}),editedConditions.filter(c=>Object.values(c.products||{}).some(products=>products.includes(product)||products.includes(`${product} (Type 3/4 Only)`))).length,\" conditions\"]})]})]},product);})})]}),/*#__PURE__*/_jsx(Tabs.Content,{value:\"categories\",className:\"p-6\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium\",children:\"Categories\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddCategory,className:\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add Category\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-h-[60vh] overflow-y-auto pr-1\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:categories.map(category=>/*#__PURE__*/_jsxs(\"li\",{className:\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",children:[/*#__PURE__*/_jsx(\"span\",{children:category}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 mr-3\",children:[editedConditions.filter(c=>c.category===category).length,\" conditions\"]}),category!=='All'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>confirmDelete('category',category),className:\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",title:\"Delete category\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]},category))})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium\",children:\"DDS Types\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddDdsType,className:\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add DDS Type\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-h-[60vh] overflow-y-auto pr-1\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:ddsTypes.map(ddsType=>/*#__PURE__*/_jsxs(\"li\",{className:\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\",children:[/*#__PURE__*/_jsx(\"span\",{children:ddsType}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 mr-3\",children:[editedConditions.filter(c=>c.dds.includes(ddsType)).length,\" conditions\"]}),ddsType!=='All'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>confirmDelete('ddsType',ddsType),className:\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",title:\"Delete DDS type\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]},ddsType))})})]})]})})]}),/*#__PURE__*/_jsx(Dialog.Root,{open:showAddModal,onOpenChange:setShowAddModal,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50 z-50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",children:[/*#__PURE__*/_jsxs(Dialog.Title,{className:\"text-lg font-semibold mb-4\",children:[modalType==='condition'&&'Add New Condition',modalType==='category'&&'Add New Category',modalType==='ddsType'&&'Add New DDS Type',modalType==='product'&&(editingProductId?`Edit Product: ${editingProductId}`:'Add New Product')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[modalType==='condition'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Condition Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Scientific Rationale\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.scientificRationale||'',onChange:e=>setNewItemData({...newItemData,scientificRationale:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Clinical Evidence\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.clinicalEvidence||'',onChange:e=>setNewItemData({...newItemData,clinicalEvidence:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Category\"}),/*#__PURE__*/_jsx(\"select\",{value:newItemData.category||'',onChange:e=>setNewItemData({...newItemData,category:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\",children:categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Key Pitch Points\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.pitchPoints||'',onChange:e=>setNewItemData({...newItemData,pitchPoints:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.competitiveAdvantage||'',onChange:e=>setNewItemData({...newItemData,competitiveAdvantage:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.handlingObjections||'',onChange:e=>setNewItemData({...newItemData,handlingObjections:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]})]}),modalType==='category'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Category Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),modalType==='ddsType'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"DDS Type Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),modalType==='product'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Product Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Usage Instructions\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.usage||'',onChange:e=>setNewItemData({...newItemData,usage:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Scientific Rationale\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.rationale||'',onChange:e=>setNewItemData({...newItemData,rationale:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Clinical Evidence\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.clinicalEvidence||newItemData.rationale||'',onChange:e=>setNewItemData({...newItemData,clinicalEvidence:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.competitive||'',onChange:e=>setNewItemData({...newItemData,competitive:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Objection Handling\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.objection||'',onChange:e=>setNewItemData({...newItemData,objection:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Supporting Research Articles\"}),newItemData.researchArticles&&newItemData.researchArticles.map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow space-y-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Article title\",value:article.title||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].title=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Author/Source\",value:article.author||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].author=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Abstract (optional)\",value:article.abstract||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].abstract=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},rows:3,className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"URL (optional)\",value:article.url||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].url=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles.splice(index,1);setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",children:/*#__PURE__*/_jsx(X,{size:16})})]},index)),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const updatedArticles=[...(newItemData.researchArticles||[]),{title:'',author:'',url:''}];setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add Research Article\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmitNewItem,disabled:!newItemData.name,className:`px-3 py-1.5 rounded-md text-white text-sm ${newItemData.name?'bg-blue-600 hover:bg-blue-700':'bg-blue-300 cursor-not-allowed'}`,children:editingProductId?'Save Changes':'Add'})]})]})]})}),/*#__PURE__*/_jsx(Dialog.Root,{open:showDeleteModal,onOpenChange:setShowDeleteModal,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50 z-50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",children:[/*#__PURE__*/_jsxs(Dialog.Title,{className:\"text-lg font-semibold mb-2 flex items-center text-red-600\",children:[/*#__PURE__*/_jsx(AlertTriangle,{size:20,className:\"mr-2\"}),\"Confirm Deletion\"]}),/*#__PURE__*/_jsxs(Dialog.Description,{className:\"text-gray-600 mb-4\",children:[(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='condition'&&`Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`,(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='product'&&`Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDelete,className:\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\",children:\"Delete\"})]})]})]})})]})});}export default AdminPanel;","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Save","Plus","Edit","Trash2","X","ChevronDown","Info","AlertTriangle","Lock","Check","User","Filter","clsx","DataImportExport","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PATIENT_TYPES","saveToBackend","data","categoriesList","ddsTypesList","productsList","Promise","resolve","setTimeout","console","log","localStorage","setItem","JSON","stringify","success","AdminPanel","_ref","conditions","onConditionsUpdate","onClose","activeTab","setActiveTab","editedConditions","setEditedConditions","selectedCondition","setSelectedCondition","editingProductId","setEditingProductId","selectedResearchProduct","setSelectedResearchProduct","categories","setCategories","ddsTypes","setDdsTypes","allProducts","setAllProducts","isEditing","setIsEditing","isSaving","setIsSaving","showSuccess","setShowSuccess","activePatientType","setActivePatientType","patientSpecificProducts","setPatientSpecificProducts","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showAddModal","setShowAddModal","modalType","setModalType","newItemData","setNewItemData","savedCategories","getItem","savedDdsTypes","savedProducts","categoriesFromStorage","ddsTypesFromStorage","productsFromStorage","parse","Array","isArray","e","error","uniqueCategories","Set","map","c","category","allDdsTypes","forEach","condition","dds","includes","push","productsSet","productDetails","Object","keys","product","add","productsFromConditions","from","mergedCategories","mergedDdsTypes","mergedProducts","length","firstCondition","initializePatientSpecificProducts","patientProducts","phases","phase","products","baseProduct","replace","name","handleEditProduct","usage","rationale","competitive","objection","factSheet","researchArticles","handleSaveChanges","updatedConditions","applyPatientSpecificProducts","result","conditionIndex","findIndex","patientSpecificConfig","phaseProducts","patientTypesForPhase","commonProducts","allPatientTypes","productsInAllTypes","patientType","isInAllTypes","every","type34Products","allProductsToCheck","p","filter","has","cleanProductName","handleResetChanges","handleConditionSelect","updateConditionField","conditionId","field","value","prev","updateProductDetail","productName","updatedProductDetails","clinicalEvidence","handlePatientTypeSelect","type","addProductToPatientType","updated","removeProductFromPatientType","handleAddCondition","Prep","Acute","Maintenance","pitchPoints","scientificRationale","competitiveAdvantage","handlingObjections","conditionSpecificResearch","handleAddCategory","handleAddDdsType","handleAddProduct","handleSubmitNewItem","updatedProducts","index","indexOf","find","newCondition","confirmDelete","item","handleDelete","remainingConditions","newCategory","d","renderPatientTypeProductConfig","_patientSpecificProdu2","className","children","Root","onValueChange","Trigger","size","Value","Icon","Portal","Content","Viewport","entries","_ref2","label","Item","ItemText","onChange","target","_patientSpecificProdu","onClick","disabled","List","style","maxHeight","overflowY","onImport","importedData","stopPropagation","updatedDds","rows","updatedPhases","placeholder","onKeyDown","key","input","previousElementSibling","defaultValue","prod","article","title","updatedResearch","updatedArticles","author","abstract","url","splice","currentArticles","_editedConditions$","_editedConditions$$pr","values","some","ddsType","open","onOpenChange","Overlay","Title","Close","asChild","Description"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data, categoriesList, ddsTypesList, productsList) => {\n  // Simulate API call\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      console.log('Categories saved:', categoriesList);\n      console.log('DDS Types saved:', ddsTypesList);\n      console.log('Products saved:', productsList);\n      \n      // Save everything to localStorage\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      localStorage.setItem('categories_data', JSON.stringify(categoriesList));\n      localStorage.setItem('dds_types_data', JSON.stringify(ddsTypesList));\n      localStorage.setItem('products_data', JSON.stringify(productsList));\n      \n      resolve({ success: true });\n    }, 1500);\n  });\n};\n\nfunction AdminPanel({ conditions, onConditionsUpdate, onClose }) {\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [selectedResearchProduct, setSelectedResearchProduct] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  \n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n  \n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n  \n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n      \n      // Try to load saved categories, DDS types, and products from localStorage first\n      const savedCategories = localStorage.getItem('categories_data');\n      const savedDdsTypes = localStorage.getItem('dds_types_data');\n      const savedProducts = localStorage.getItem('products_data');\n      \n      let categoriesFromStorage = [];\n      let ddsTypesFromStorage = [];\n      let productsFromStorage = [];\n      \n      // Parse saved categories if available\n      if (savedCategories) {\n        try {\n          categoriesFromStorage = JSON.parse(savedCategories);\n          if (!Array.isArray(categoriesFromStorage)) {\n            categoriesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved categories:', e);\n        }\n      }\n      \n      // Parse saved DDS types if available\n      if (savedDdsTypes) {\n        try {\n          ddsTypesFromStorage = JSON.parse(savedDdsTypes);\n          if (!Array.isArray(ddsTypesFromStorage)) {\n            ddsTypesFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved DDS types:', e);\n        }\n      }\n      \n      // Parse saved products if available\n      if (savedProducts) {\n        try {\n          productsFromStorage = JSON.parse(savedProducts);\n          if (!Array.isArray(productsFromStorage)) {\n            productsFromStorage = [];\n          }\n        } catch (e) {\n          console.error('Error parsing saved products:', e);\n        }\n      }\n      \n      // Extract unique categories from conditions\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      \n      // Extract unique DDS types from conditions\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      \n      // Extract all products from conditions\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      const productsFromConditions = Array.from(productsSet);\n      \n      // Merge saved categories with ones from conditions and remove duplicates\n      const mergedCategories = [...new Set([...categoriesFromStorage, ...uniqueCategories])];\n      \n      // Merge saved DDS types with ones from conditions and remove duplicates\n      const mergedDdsTypes = [...new Set([...ddsTypesFromStorage, ...allDdsTypes])];\n      \n      // Merge saved products with ones from conditions and remove duplicates\n      const mergedProducts = [...new Set([...productsFromStorage, ...productsFromConditions])];\n      \n      // Set the merged lists\n      setCategories(mergedCategories);\n      setDdsTypes(mergedDdsTypes);\n      setAllProducts(mergedProducts);\n      \n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n        \n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = (condition) => {\n    if (!condition) return;\n    \n    const patientProducts = {};\n    \n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n      \n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        } \n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n      \n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n      \n      // For conditions where Type 3/4 get additional products\n      if (\n        (condition.name === 'Gingival Recession Surgery' && phase === 'Acute') ||\n        (condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute')\n      ) {\n        if (patientProducts[phase]['3'].includes('Synvaza') && \n            !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  };\n\n  const handleEditProduct = (product) => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = { \n      name: product, \n      usage: '', \n      rationale: '', \n      competitive: '', \n      objection: '', \n      factSheet: '#',\n      researchArticles: [] // Initialize with empty array\n    };\n    \n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#',\n          researchArticles: condition.productDetails[product].researchArticles || [] // Load existing research articles\n        };\n        break;\n      }\n    }\n    \n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n      \n      // Save all data: conditions, categories, and DDS types, and products\n      const result = await saveToBackend(updatedConditions, categories, ddsTypes, allProducts);\n      \n      if (result.success) {\n        // Pass the updated data back to parent component\n        onConditionsUpdate(updatedConditions, categories, ddsTypes, allProducts);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n    \n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n    \n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n    \n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n    \n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n    \n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n      \n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      \n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n      \n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n      \n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => \n          (patientTypesForPhase[patientType] || []).includes(product)\n        );\n        \n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n      \n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n      \n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      \n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if (\n          (patientTypesForPhase['4'] || []).includes(product) && \n          !(patientTypesForPhase['1'] || []).includes(product) && \n          !(patientTypesForPhase['2'] || []).includes(product) &&\n          !product.includes('(Type')\n        ) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n      \n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n      \n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n      \n      // Ensure all products have product details\n      const allProductsToCheck = [\n        ...commonProducts, \n        ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n        // Add products that are only in some patient types\n        ...[...productsInAllTypes].filter(p => !commonProducts.has(p))\n      ];\n      \n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n      \n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n        \n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#',\n            researchArticles: [] // Initialize with empty array\n          };\n          \n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName] // This will include researchArticles if they exist\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    \n    return updatedConditions;\n  };\n  \n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n    \n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n  \n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n  \n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => \n        condition.name === conditionId\n          ? { ...condition, [field]: value }\n          : condition\n      )\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({ ...prev, [field]: value }));\n    }\n  };\n  \n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.name === conditionId) {\n          const updatedProductDetails = { ...condition.productDetails };\n          if (!updatedProductDetails[productName]) {\n            updatedProductDetails[productName] = {\n              usage: '',\n              rationale: '',\n              clinicalEvidence: '',  // Initialize this field as well\n              competitive: '',\n              objection: '',\n              factSheet: '#',\n              researchArticles: []\n            };\n          }\n          updatedProductDetails[productName][field] = value;\n          return { ...condition, productDetails: updatedProductDetails };\n        }\n        return condition;\n      })\n    );\n  \n  // Update selected condition if it's the one being edited\n  if (selectedCondition && selectedCondition.name === conditionId) {\n    const updatedProductDetails = { ...selectedCondition.productDetails };\n    if (!updatedProductDetails[productName]) {\n      updatedProductDetails[productName] = {\n        usage: '',\n        rationale: '',\n        clinicalEvidence: '',  // Initialize this field as well\n        competitive: '',\n        objection: '',\n        factSheet: '#',\n        researchArticles: []\n      };\n    }\n    updatedProductDetails[productName][field] = value;\n    setSelectedCondition(prev => ({ \n      ...prev, \n      productDetails: updatedProductDetails \n    }));\n  }\n};\n  \n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n  \n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n      \n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n        \n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => \n          updated[phase][type].includes(productName)\n        );\n        \n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      \n      return updated;\n    });\n  };\n  \n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n        \n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      \n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      scientificRationale: '',  // Add this\n      clinicalEvidence: '',     // Add this\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {},\n      conditionSpecificResearch: {} // Add this\n    });\n    setShowAddModal(true);\n  };\n  \n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#',\n      researchArticles: [] // Initialize with empty array\n    });\n    setShowAddModal(true);\n  };\n  \n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n    setIsEditing(true);\n    \n    if (modalType === 'product') {\n      const productName = newItemData.name;\n      \n      if (editingProductId && editingProductId !== productName) {\n        // Product name was changed - need to update all references\n        setEditedConditions(prev => \n          prev.map(condition => {\n            // Update product references in all phases\n            const updatedProducts = { ...condition.products };\n            Object.keys(updatedProducts).forEach(phase => {\n              updatedProducts[phase] = updatedProducts[phase].map(p => \n                p === editingProductId ? productName : \n                p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p\n              );\n            });\n            \n            // Update product details\n            const updatedProductDetails = { ...condition.productDetails };\n            if (updatedProductDetails[editingProductId]) {\n              updatedProductDetails[productName] = {\n                usage: newItemData.usage,\n                rationale: newItemData.rationale,\n                competitive: newItemData.competitive,\n                objection: newItemData.objection,\n                factSheet: newItemData.factSheet || '#',\n                researchArticles: newItemData.researchArticles || [] // Preserve research articles\n              };\n              delete updatedProductDetails[editingProductId];\n            }\n            \n            return { \n              ...condition, \n              products: updatedProducts,\n              productDetails: updatedProductDetails\n            };\n          })\n        );\n        \n        // Update allProducts list\n        setAllProducts(prev => {\n          const index = prev.indexOf(editingProductId);\n          if (index !== -1) {\n            const updated = [...prev];\n            updated[index] = productName;\n            return updated;\n          }\n          return [...prev, productName];\n        });\n        \n        // Update patient-specific products if currently editing\n        if (selectedCondition) {\n          setPatientSpecificProducts(prev => {\n            const updated = { ...prev };\n            Object.keys(updated).forEach(phase => {\n              Object.keys(updated[phase]).forEach(type => {\n                updated[phase][type] = updated[phase][type].map(p => \n                  p === editingProductId ? productName : p\n                );\n              });\n            });\n            return updated;\n          });\n        }\n      } else if (editingProductId) {\n        // Only details changed, not the name\n        setEditedConditions(prev => \n          prev.map(condition => {\n            if (condition.productDetails && condition.productDetails[productName]) {\n              const updatedProductDetails = { ...condition.productDetails };\n              updatedProductDetails[productName] = {\n                ...updatedProductDetails[productName], // Keep any existing fields\n                usage: newItemData.usage,\n                rationale: newItemData.rationale,\n                competitive: newItemData.competitive,\n                objection: newItemData.objection,\n                factSheet: newItemData.factSheet || '#',\n                researchArticles: newItemData.researchArticles || [] // Add research articles\n              };\n              return { ...condition, productDetails: updatedProductDetails };\n            }\n            return condition;\n          })\n        );\n      } else {\n        // This is a new product\n        if (!allProducts.includes(productName)) {\n          setAllProducts(prev => [...prev, productName]);\n          \n          // Add product details to all conditions that use it\n          setEditedConditions(prev => \n            prev.map(condition => {\n              const updatedProductDetails = { ...condition.productDetails };\n              updatedProductDetails[productName] = {\n                usage: newItemData.usage,\n                rationale: newItemData.rationale,\n                competitive: newItemData.competitive,\n                objection: newItemData.objection,\n                factSheet: newItemData.factSheet || '#',\n                researchArticles: newItemData.researchArticles || [] // Add research articles for new products\n              };\n              return { ...condition, productDetails: updatedProductDetails };\n            })\n          );\n        }\n      }\n  } else if (modalType === 'condition') {\n    // Add new condition\n    if (newItemData.name && !editedConditions.find(c => c.name === newItemData.name)) {\n      const newCondition = {\n        name: newItemData.name,\n        category: newItemData.category || categories[0] || '',\n        phases: newItemData.phases || ['Prep', 'Acute', 'Maintenance'],\n        dds: newItemData.dds || [],\n        patientType: newItemData.patientType || 'Types 1 to 4',\n        products: newItemData.products || {\n          Prep: [],\n          Acute: [],\n          Maintenance: []\n        },\n        pitchPoints: newItemData.pitchPoints || '',\n        productDetails: {}\n      };\n      \n      setEditedConditions(prev => [...prev, newCondition]);\n      setSelectedCondition(newCondition);\n    }\n  } else if (modalType === 'category') {\n    // Add new category\n    if (newItemData.name && !categories.includes(newItemData.name)) {\n      // Update categories list\n      setCategories(prev => [...prev, newItemData.name]);\n      \n      // Add new category to all conditions that need it\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.category === '') {\n            return { ...condition, category: newItemData.name };\n          }\n          return condition;\n        })\n      );\n    }\n  } else if (modalType === 'ddsType') {\n    // Add new DDS type\n    if (newItemData.name && !ddsTypes.includes(newItemData.name)) {\n      setDdsTypes(prev => [...prev, newItemData.name]);\n    }\n  }\n  \n  setShowAddModal(false);\n  setNewItemData({});\n  setEditingProductId(null);\n};\n  \n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({ type, item });\n    setShowDeleteModal(true);\n  };\n  \n  // Handle delete\n  // Handle delete\nconst handleDelete = () => {\n  setIsEditing(true);\n  const { type, item } = itemToDelete;\n  \n  if (type === 'condition') {\n    setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n    \n    // Select a new condition if the deleted one was selected\n    if (selectedCondition && selectedCondition.name === item.name) {\n      const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n      setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n    }\n  } else if (type === 'product') {\n    // Remove product from all conditions\n    setEditedConditions(prev => \n      prev.map(condition => {\n        const updatedProducts = { ...condition.products };\n        Object.keys(updatedProducts).forEach(phase => {\n          updatedProducts[phase] = updatedProducts[phase].filter(p => \n            p !== item && p !== `${item} (Type 3/4 Only)`\n          );\n        });\n        \n        const updatedProductDetails = { ...condition.productDetails };\n        delete updatedProductDetails[item];\n        \n        return { \n          ...condition, \n          products: updatedProducts,\n          productDetails: updatedProductDetails\n        };\n      })\n    );\n    \n    // Update allProducts list\n    setAllProducts(prev => prev.filter(p => p !== item));\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      Object.keys(updated).forEach(phase => {\n        Object.keys(updated[phase]).forEach(type => {\n          updated[phase][type] = updated[phase][type].filter(p => p !== item);\n        });\n      });\n      return updated;\n    });\n  } else if (type === 'category') {\n    // Don't allow deleting the 'All' category\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the category from the list\n    setCategories(prev => prev.filter(c => c !== item));\n    \n    // Update conditions that use this category (set to first available category or empty string)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.category === item) {\n          const newCategory = categories.find(c => c !== item && c !== 'All') || '';\n          return { ...condition, category: newCategory };\n        }\n        return condition;\n      })\n    );\n  } else if (type === 'ddsType') {\n    // Don't allow deleting the 'All' DDS type\n    if (item === 'All') {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n      return;\n    }\n    \n    // Remove the DDS type from the list\n    setDdsTypes(prev => prev.filter(d => d !== item));\n    \n    // Update conditions that use this DDS type (remove it from their dds array)\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.dds.includes(item)) {\n          return { \n            ...condition, \n            dds: condition.dds.filter(d => d !== item)\n          };\n        }\n        return condition;\n      })\n    );\n  }\n  \n  setShowDeleteModal(false);\n  setItemToDelete(null);\n};\n  \n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = (phase) => {\n    return (\n      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-medium\">Patient-Specific Product Configuration</h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Filter by:</span>\n            <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n              <Select.Trigger className=\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\">\n                <User size={15} className=\"mr-1 text-gray-500\" />\n                <Select.Value />\n                <Select.Icon><ChevronDown size={15} /></Select.Icon>\n              </Select.Trigger>\n              <Select.Portal>\n                <Select.Content className=\"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\">\n                  <Select.Viewport className=\"p-1\">\n                    {Object.entries(PATIENT_TYPES).map(([type, label]) => (\n                      <Select.Item\n                        key={type}\n                        value={type}\n                        className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        <Select.ItemText>{label}</Select.ItemText>\n                      </Select.Item>\n                    ))}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Portal>\n            </Select.Root>\n          </div>\n        </div>\n        \n        {activePatientType !== 'all' && (\n          <div className=\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\">\n            <Info size={15} className=\"mr-1 flex-shrink-0\" />\n            <span>\n              Configuring products specifically for <strong>{PATIENT_TYPES[activePatientType]}</strong>.\n              Products added here will only be recommended for this patient type.\n            </span>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Products for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}</span>\n          <select\n            onChange={(e) => {\n              if (e.target.value) {\n                addProductToPatientType(phase, activePatientType, e.target.value);\n                e.target.value = ''; // Reset select\n              }\n            }}\n            className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n          >\n            <option value=\"\">Add product...</option>\n            {allProducts\n              .filter(product => {\n                // Only show products that aren't already added for this patient type\n                if (!patientSpecificProducts[phase]) return true;\n                return !patientSpecificProducts[phase][activePatientType]?.includes(product);\n              })\n              .map((product) => (\n                <option key={product} value={product}>\n                  {product}\n                </option>\n              ))}\n          </select>\n        </div>\n        \n        {patientSpecificProducts[phase] && patientSpecificProducts[phase][activePatientType]?.length > 0 ? (\n          <ul className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {patientSpecificProducts[phase][activePatientType].map((product) => (\n              <li \n                key={product}\n                className=\"bg-white border rounded-md p-2 flex justify-between items-center\"\n              >\n                <span>{product}</span>\n                <button\n                  onClick={() => removeProductFromPatientType(phase, activePatientType, product)}\n                  className=\"text-red-500 hover:text-red-700 p-1\"\n                >\n                  <Trash2 size={15} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\">\n            No products configured for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}.\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-gray-500\">\n        No conditions data available to edit.\n      </div>\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h2 className=\"text-xl font-bold\">Knowledge Base Administrator</h2>\n          <div className=\"flex items-center space-x-2\">\n            {/* Action buttons */}\n            {isEditing && (\n              <>\n                <button\n                  onClick={handleResetChanges}\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\"\n                  disabled={isSaving}\n                >\n                  Reset Changes\n                </button>\n                <button\n                  onClick={handleSaveChanges}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${\n                    isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>Saving...</>\n                  ) : (\n                    <>\n                      <Save size={16} className=\"mr-1\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Save success notification */}\n        {showSuccess && (\n          <div className=\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\">\n            <Check size={20} className=\"mr-2\" />\n            Changes saved successfully!\n          </div>\n        )}\n        \n        {/* Tabs */}\n        <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n          <Tabs.List className=\"flex border-b\">\n            <Tabs.Trigger\n              value=\"importExport\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"importExport\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Import/Export\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"conditions\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"conditions\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Conditions\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"products\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"products\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Products\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"categories\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"categories\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Categories & DDS Types\n            </Tabs.Trigger>\n          </Tabs.List>\n          \n          {/* Import/Export Tab */}\n          <Tabs.Content value=\"importExport\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2\">Knowledge Base Management</h3>\n              <p className=\"text-gray-600\">\n                Import and export your knowledge base data for backup purposes or to transfer between environments.\n              </p>\n            </div>\n            \n            <DataImportExport \n              conditions={editedConditions} \n              onImport={(importedData) => {\n                setEditedConditions(importedData);\n                setIsEditing(true);\n              }} \n            />\n          </Tabs.Content>\n          \n          {/* Conditions Tab */}\n          <Tabs.Content value=\"conditions\" className=\"flex-grow overflow-auto\">\n            <div className=\"flex h-full\">\n              {/* Conditions List */}\n              <div className=\"w-1/3 border-r p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">All Conditions</h3>\n                  <button\n                    onClick={handleAddCondition}\n                    className=\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add New\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-1\">\n                  {editedConditions.map((condition) => (\n                    <li \n                      key={condition.name}\n                      className={clsx(\n                        \"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",\n                        selectedCondition && selectedCondition.name === condition.name\n                          ? \"bg-blue-100\"\n                          : \"hover:bg-gray-100\"\n                      )}\n                      onClick={() => handleConditionSelect(condition)}\n                    >\n                      <div>\n                        <div className=\"font-medium text-sm\">{condition.name}</div>\n                        <div className=\"text-xs text-gray-500\">{condition.category}</div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          confirmDelete('condition', condition);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* Condition Editor */}\n              <div className=\"w-2/3 p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                {selectedCondition ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {/* Condition Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Condition Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={selectedCondition.name}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n                      \n                      {/* Category */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Category\n                        </label>\n                        <select\n                          value={selectedCondition.category}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'category', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          {categories.map((category) => (\n                            <option key={category} value={category}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    \n                    {/* Patient Type */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Patient Type\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={selectedCondition.patientType}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'patientType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Format: \"Types 1 to 4\" or \"Types 3 to 4\"</p>\n                    </div>\n                    \n                    {/* DDS Types */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        DDS Types\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.dds.map((dds) => (\n                            <span \n                              key={dds} \n                              className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {dds}\n                              <button\n                                onClick={() => {\n                                  const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                                  updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                                }}\n                                className=\"ml-1 text-blue-700 hover:text-blue-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <select\n                        onChange={(e) => {\n                          if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                            const updatedDds = [...selectedCondition.dds, e.target.value];\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          }\n                          e.target.value = ''; // Reset select\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Add DDS Type...</option>\n                        {ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map((dds) => (\n                          <option key={dds} value={dds}>\n                            {dds}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Pitch Points */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Pitch Points\n                      </label>\n                      <textarea\n                        value={selectedCondition.pitchPoints}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    \n                    {/* Competitive Advantage */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={selectedCondition.competitiveAdvantage || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Handling Objections */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={selectedCondition.handlingObjections || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Scientific Rationale */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Scientific Rationale\n                      </label>\n                      <textarea\n                        value={selectedCondition.scientificRationale || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'scientificRationale', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Clinical Evidence */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Evidence\n                      </label>\n                      <textarea\n                        value={selectedCondition.clinicalEvidence || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'clinicalEvidence', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Phases */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Treatment Phases\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.phases.map((phase) => (\n                            <span \n                              key={phase} \n                              className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {phase}\n                              <button\n                                onClick={() => {\n                                  const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                                  updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                                }}\n                                className=\"ml-1 text-purple-700 hover:text-purple-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"New phase name...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                              const updatedPhases = [...selectedCondition.phases, e.target.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              e.target.value = '';\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={(e) => {\n                            const input = e.target.previousElementSibling;\n                            if (input.value && !selectedCondition.phases.includes(input.value)) {\n                              const updatedPhases = [...selectedCondition.phases, input.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              input.value = '';\n                            }\n                          }}\n                          className=\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                    {/* Products by Phase with Patient Type Filtering */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Products by Phase</h3>\n                      \n                      <Tabs.Root defaultValue={selectedCondition.phases[0]} className=\"border rounded-md\">\n                        <Tabs.List className=\"flex border-b bg-gray-50\">\n                          {selectedCondition.phases.map((phase) => (\n                            <Tabs.Trigger\n                              key={phase}\n                              value={phase}\n                              className={clsx(\n                                \"flex-1 px-4 py-2 text-sm font-medium\",\n                                \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\n                                \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"\n                              )}\n                            >\n                              {phase} Phase\n                            </Tabs.Trigger>\n                          ))}\n                        </Tabs.List>\n                        \n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                            {/* Patient-specific product configuration */}\n                            {renderPatientTypeProductConfig(phase)}\n                          </Tabs.Content>\n                        ))}\n                      </Tabs.Root>\n                    </div>\n                    \n                    {/* Product Details */}\n                    {/* Condition-Specific Research */}\n                    <div>\n                      <h3 className=\"font-medium text-lg mb-3\">Condition-Specific Research</h3>\n                      \n                      {selectedCondition && selectedCondition.productDetails && (\n                        <div className=\"mb-4\">\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                            Select Product to Manage Research:\n                          </label>\n                          <select\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                            onChange={(e) => {\n                              if (e.target.value) {\n                                // Store the selected product name in state\n                                setSelectedResearchProduct(e.target.value);\n                              }\n                            }}\n                            value={selectedResearchProduct || ''}\n                          >\n                            <option value=\"\">Select a product...</option>\n                            {Object.keys(selectedCondition.productDetails).map(prod => (\n                              <option key={prod} value={prod}>{prod}</option>\n                            ))}\n                          </select>\n                        </div>\n                      )}\n                      \n                      {selectedResearchProduct && (\n                        <div>\n                          <h4 className=\"font-medium text-md mb-2\">\n                            Research Articles for {selectedResearchProduct}\n                          </h4>\n                          \n                          {/* Initialize condition-specific research if it doesn't exist */}\n                          {!selectedCondition.conditionSpecificResearch && updateConditionField(\n                            selectedCondition.name, \n                            'conditionSpecificResearch', \n                            {}\n                          )}\n                          \n                          {/* Check if we have condition-specific research for this product */}\n                          {selectedCondition.conditionSpecificResearch && \n                          selectedCondition.conditionSpecificResearch[selectedResearchProduct] && \n                          selectedCondition.conditionSpecificResearch[selectedResearchProduct].map((article, index) => (\n                            <div key={index} className=\"flex space-x-2 mb-4 border-b pb-4\">\n                              <div className=\"flex-grow space-y-2\">\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"Article title\"\n                                  value={article.title || ''}\n                                  onChange={(e) => {\n                                    const updatedResearch = {...(selectedCondition.conditionSpecificResearch || {})};\n                                    const updatedArticles = [...(updatedResearch[selectedResearchProduct] || [])];\n                                    updatedArticles[index].title = e.target.value;\n                                    \n                                    updatedResearch[selectedResearchProduct] = updatedArticles;\n                                    \n                                    updateConditionField(\n                                      selectedCondition.name, \n                                      'conditionSpecificResearch', \n                                      updatedResearch\n                                    );\n                                  }}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                />\n                                \n                                <input\n                                  type=\"text\"\n                                  placeholder=\"Author/Source\"\n                                  value={article.author || ''}\n                                  onChange={(e) => {\n                                    const updatedResearch = {...(selectedCondition.conditionSpecificResearch || {})};\n                                    const updatedArticles = [...(updatedResearch[selectedResearchProduct] || [])];\n                                    updatedArticles[index].author = e.target.value;\n                                    \n                                    updatedResearch[selectedResearchProduct] = updatedArticles;\n                                    \n                                    updateConditionField(\n                                      selectedCondition.name, \n                                      'conditionSpecificResearch', \n                                      updatedResearch\n                                    );\n                                  }}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                />\n                                \n                                <textarea\n                                  placeholder=\"Abstract (optional)\"\n                                  value={article.abstract || ''}\n                                  onChange={(e) => {\n                                    const updatedResearch = {...(selectedCondition.conditionSpecificResearch || {})};\n                                    const updatedArticles = [...(updatedResearch[selectedResearchProduct] || [])];\n                                    updatedArticles[index].abstract = e.target.value;\n                                    \n                                    updatedResearch[selectedResearchProduct] = updatedArticles;\n                                    \n                                    updateConditionField(\n                                      selectedCondition.name, \n                                      'conditionSpecificResearch', \n                                      updatedResearch\n                                    );\n                                  }}\n                                  rows={3}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                />\n                                \n                                <input\n                                  type=\"text\"\n                                  placeholder=\"URL (optional)\"\n                                  value={article.url || ''}\n                                  onChange={(e) => {\n                                    const updatedResearch = {...(selectedCondition.conditionSpecificResearch || {})};\n                                    const updatedArticles = [...(updatedResearch[selectedResearchProduct] || [])];\n                                    updatedArticles[index].url = e.target.value;\n                                    \n                                    updatedResearch[selectedResearchProduct] = updatedArticles;\n                                    \n                                    updateConditionField(\n                                      selectedCondition.name, \n                                      'conditionSpecificResearch', \n                                      updatedResearch\n                                    );\n                                  }}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                />\n                              </div>\n                              \n                              <button\n                                onClick={() => {\n                                  const updatedResearch = {...(selectedCondition.conditionSpecificResearch || {})};\n                                  const updatedArticles = [...(updatedResearch[selectedResearchProduct] || [])];\n                                  updatedArticles.splice(index, 1);\n                                  \n                                  updatedResearch[selectedResearchProduct] = updatedArticles;\n                                  \n                                  updateConditionField(\n                                    selectedCondition.name, \n                                    'conditionSpecificResearch', \n                                    updatedResearch\n                                  );\n                                }}\n                                className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                              >\n                                <X size={16} />\n                              </button>\n                            </div>\n                          ))}\n                          \n                          <button\n                            onClick={() => {\n                              const updatedResearch = {...(selectedCondition.conditionSpecificResearch || {})};\n                              const updatedArticles = [...(updatedResearch[selectedResearchProduct] || []), { title: '', author: '', abstract: '', url: '' }];\n                              \n                              updatedResearch[selectedResearchProduct] = updatedArticles;\n                              \n                              updateConditionField(\n                                selectedCondition.name, \n                                'conditionSpecificResearch', \n                                updatedResearch\n                              );\n                            }}\n                            className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                          >\n                            <Plus size={16} className=\"mr-1\" />\n                            Add Research Article\n                          </button>\n                        </div>\n                      )}\n                      \n                      {!selectedResearchProduct && selectedCondition && (\n                        <div className=\"text-gray-500 italic\">\n                          Select a product from the dropdown above to manage its research articles.\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Product Details</h3>\n                      \n                      {Object.keys(selectedCondition.productDetails || {}).length > 0 ? (\n                        <div className=\"space-y-6\">\n                          {Object.keys(selectedCondition.productDetails).map((productName) => (\n                            <div key={productName} className=\"border rounded-md p-4 bg-gray-50\">\n                              <h4 className=\"font-medium text-md mb-3\">{productName}</h4>\n                              \n                              <div className=\"space-y-3\">\n                                {/* ...existing fields... */}\n                                \n                                {/* Research Articles Section */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Supporting Research Articles\n                                  </label>\n                                  \n                                  {selectedCondition.productDetails[productName].researchArticles && \n                                    selectedCondition.productDetails[productName].researchArticles.map((article, index) => (\n                                    <div key={index} className=\"flex space-x-2 mb-2\">\n                                      <div className=\"flex-grow space-y-2\">\n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Article title\"\n                                          value={article.title || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].title = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Author/Source\"\n                                          value={article.author || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].author = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <textarea\n                                          placeholder=\"Abstract (optional)\"\n                                          value={article.abstract || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].abstract = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          rows={3}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"URL (optional)\"\n                                          value={article.url || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].url = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                      </div>\n                                      \n                                      <button\n                                        onClick={() => {\n                                          const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                          updatedArticles.splice(index, 1);\n                                          updateProductDetail(\n                                            selectedCondition.name, \n                                            productName, \n                                            'researchArticles', \n                                            updatedArticles\n                                          );\n                                        }}\n                                        className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                                      >\n                                        <X size={16} />\n                                      </button>\n                                    </div>\n                                  ))}\n                                  \n                                  <button\n                                    onClick={() => {\n                                      const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                                      const updatedArticles = [...currentArticles, { title: '', author: '', url: '' }];\n                                      updateProductDetail(\n                                        selectedCondition.name, \n                                        productName, \n                                        'researchArticles', \n                                        updatedArticles\n                                      );\n                                    }}\n                                    className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                                  >\n                                    <Plus size={16} className=\"mr-1\" />\n                                    Add Research Article\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-gray-500 text-sm italic\">\n                          No product details available. Add products to phases first.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-10 text-gray-500\">\n                    Select a condition to edit or create a new one\n                  </div>\n                )}\n              </div>\n            </div>\n          </Tabs.Content>\n          \n          {/* Products Tab */}\n          <Tabs.Content value=\"products\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-medium\">Product Library</h3>\n              <button\n                onClick={handleAddProduct}\n                className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n              >\n                <Plus size={16} className=\"mr-1\" />\n                Add New Product\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {allProducts.map((product) => (\n                <div key={product} className=\"border rounded-lg p-4 hover:bg-gray-50 group\">\n                <div className=\"flex justify-between items-start\">\n                  <h4 className=\"font-medium text-md\">{product}</h4>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => handleEditProduct(product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\"\n                      title=\"Edit product details\"\n                    >\n                      <Edit size={16} />\n                    </button>\n                    <button\n                      onClick={() => confirmDelete('product', product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      title=\"Delete product\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                </div>\n                  \n                {editedConditions[0]?.productDetails?.[product] && (\n                  <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Usage: </span>\n                      {editedConditions[0].productDetails[product].usage}\n                    </div>\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Conditions: </span>\n                      {editedConditions.filter(c => \n                        Object.values(c.products || {}).some(products => \n                          products.includes(product) || products.includes(`${product} (Type 3/4 Only)`)\n                        )\n                      ).length} conditions\n                    </div>\n                  </div>\n                )}\n              </div>\n              ))}\n            </div>\n          </Tabs.Content>\n          \n          {/* Categories & DDS Types Tab */}\n          <Tabs.Content value=\"categories\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {/* Categories */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">Categories</h3>\n                  <button\n                    onClick={handleAddCategory}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add Category\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {categories.map((category) => (\n                      <li \n                        key={category}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{category}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.category === category).length} conditions\n                          </div>\n                          {category !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('category', category)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete category\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              \n              {/* DDS Types */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">DDS Types</h3>\n                  <button\n                    onClick={handleAddDdsType}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add DDS Type\n                  </button>\n                </div>\n                \n                <div className=\"max-h-[60vh] overflow-y-auto pr-1\">\n                  <ul className=\"space-y-2\">\n                    {ddsTypes.map((ddsType) => (\n                      <li \n                        key={ddsType}\n                        className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50 group\"\n                      >\n                        <span>{ddsType}</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm text-gray-500 mr-3\">\n                            {editedConditions.filter(c => c.dds.includes(ddsType)).length} conditions\n                          </div>\n                          {ddsType !== 'All' && (\n                            <button\n                              onClick={() => confirmDelete('ddsType', ddsType)}\n                              className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                              title=\"Delete DDS type\"\n                            >\n                              <Trash2 size={16} />\n                            </button>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </Tabs.Content>\n        </Tabs.Root>\n\n        {/* Add New Item Modal */}\n        <Dialog.Root open={showAddModal} onOpenChange={setShowAddModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n            <Dialog.Title className=\"text-lg font-semibold mb-4\">\n              {modalType === 'condition' && 'Add New Condition'}\n              {modalType === 'category' && 'Add New Category'}\n              {modalType === 'ddsType' && 'Add New DDS Type'}\n              {modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')}\n            </Dialog.Title>\n\n              \n              <div className=\"space-y-4\">\n                {modalType === 'condition' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Condition Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Scientific Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.scientificRationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, scientificRationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Evidence\n                      </label>\n                      <textarea\n                        value={newItemData.clinicalEvidence || ''}\n                        onChange={(e) => setNewItemData({...newItemData, clinicalEvidence: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Category\n                      </label>\n                      <select\n                        value={newItemData.category || ''}\n                        onChange={(e) => setNewItemData({...newItemData, category: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      >\n                        {categories.map((category) => (\n                          <option key={category} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Key Pitch Points\n                      </label>\n                      <textarea\n                        value={newItemData.pitchPoints || ''}\n                        onChange={(e) => setNewItemData({...newItemData, pitchPoints: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitiveAdvantage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitiveAdvantage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={newItemData.handlingObjections || ''}\n                        onChange={(e) => setNewItemData({...newItemData, handlingObjections: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </>\n                )}\n                \n                {modalType === 'category' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'ddsType' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      DDS Type Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'product' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Product Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Usage Instructions\n                      </label>\n                      <textarea\n                        value={newItemData.usage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, usage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Scientific Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, rationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Evidence\n                      </label>\n                      <textarea\n                        value={newItemData.clinicalEvidence || newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, clinicalEvidence: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitive || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitive: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Objection Handling\n                      </label>\n                      <textarea\n                        value={newItemData.objection || ''}\n                        onChange={(e) => setNewItemData({...newItemData, objection: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    {/* New Research Articles Section */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Supporting Research Articles\n                      </label>\n                      \n                      {newItemData.researchArticles && newItemData.researchArticles.map((article, index) => (\n                        <div key={index} className=\"flex space-x-2 mb-2\">\n                          <div className=\"flex-grow space-y-2\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Article title\"\n                              value={article.title || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].title = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"Author/Source\"\n                              value={article.author || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].author = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <textarea\n                              placeholder=\"Abstract (optional)\"\n                              value={article.abstract || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].abstract = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              rows={3}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"URL (optional)\"\n                              value={article.url || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].url = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                          </div>\n                          \n                          <button\n                            onClick={() => {\n                              const updatedArticles = [...newItemData.researchArticles];\n                              updatedArticles.splice(index, 1);\n                              setNewItemData({...newItemData, researchArticles: updatedArticles});\n                            }}\n                            className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                          >\n                            <X size={16} />\n                          </button>\n                        </div>\n                      ))}\n                      \n                      <button\n                        onClick={() => {\n                          const updatedArticles = [...(newItemData.researchArticles || []), { title: '', author: '', url: '' }];\n                          setNewItemData({...newItemData, researchArticles: updatedArticles});\n                        }}\n                        className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                      >\n                        <Plus size={16} className=\"mr-1\" />\n                        Add Research Article\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleSubmitNewItem}\n                  disabled={!newItemData.name}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm ${\n                    newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'\n                  }`}\n                >\n                  {editingProductId ? 'Save Changes' : 'Add'}\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n        \n        {/* Delete Confirmation Modal */}\n        <Dialog.Root open={showDeleteModal} onOpenChange={setShowDeleteModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-2 flex items-center text-red-600\">\n                <AlertTriangle size={20} className=\"mr-2\" />\n                Confirm Deletion\n              </Dialog.Title>\n              \n              <Dialog.Description className=\"text-gray-600 mb-4\">\n                {itemToDelete?.type === 'condition' && \n                  `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`}\n                \n                {itemToDelete?.type === 'product' && \n                  `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`}\n              </Dialog.Description>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,GAAK,CAAAC,IAAI,KAAM,sBAAsB,CAC5C,MAAO,GAAK,CAAAC,MAAM,KAAM,wBAAwB,CAChD,MAAO,GAAK,CAAAC,MAAM,KAAM,wBAAwB,CAChD,OAASC,IAAI,CAAEC,IAAI,CAAEC,IAAI,CAAEC,MAAM,CAAEC,CAAC,CAAEC,WAAW,CAAEC,IAAI,CAAEC,aAAa,CAAEC,IAAI,CAAEC,KAAK,CAAEC,IAAI,CAAEC,MAAM,KAAQ,cAAc,CACvH,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CAEjD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,KAAM,CAAAC,aAAa,CAAG,CACpB,KAAK,CAAE,mBAAmB,CAC1B,GAAG,CAAE,iBAAiB,CACtB,GAAG,CAAE,0CAA0C,CAC/C,GAAG,CAAE,6CAA6C,CAClD,GAAG,CAAE,4DACP,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAOC,IAAI,CAAEC,cAAc,CAAEC,YAAY,CAAEC,YAAY,GAAK,CAChF;AACA,MAAO,IAAI,CAAAC,OAAO,CAAEC,OAAO,EAAK,CAC9BC,UAAU,CAAC,IAAM,CACfC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAER,IAAI,CAAC,CAChCO,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEP,cAAc,CAAC,CAChDM,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEN,YAAY,CAAC,CAC7CK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEL,YAAY,CAAC,CAE5C;AACAM,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAC,CAC7DS,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAEC,IAAI,CAACC,SAAS,CAACX,cAAc,CAAC,CAAC,CACvEQ,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAEC,IAAI,CAACC,SAAS,CAACV,YAAY,CAAC,CAAC,CACpEO,YAAY,CAACC,OAAO,CAAC,eAAe,CAAEC,IAAI,CAACC,SAAS,CAACT,YAAY,CAAC,CAAC,CAEnEE,OAAO,CAAC,CAAEQ,OAAO,CAAE,IAAK,CAAC,CAAC,CAC5B,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CACJ,CAAC,CAED,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAA8C,IAA7C,CAAEC,UAAU,CAAEC,kBAAkB,CAAEC,OAAQ,CAAC,CAAAH,IAAA,CAC7D,KAAM,CAACI,SAAS,CAAEC,YAAY,CAAC,CAAG/C,QAAQ,CAAC,YAAY,CAAC,CACxD,KAAM,CAACgD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjD,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACkD,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGnD,QAAQ,CAAC,IAAI,CAAC,CAChE,KAAM,CAACoD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGrD,QAAQ,CAAC,IAAI,CAAC,CAC9D,KAAM,CAACsD,uBAAuB,CAAEC,0BAA0B,CAAC,CAAGvD,QAAQ,CAAC,IAAI,CAAC,CAC5E,KAAM,CAACwD,UAAU,CAAEC,aAAa,CAAC,CAAGzD,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC0D,QAAQ,CAAEC,WAAW,CAAC,CAAG3D,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAC4D,WAAW,CAAEC,cAAc,CAAC,CAAG7D,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAC8D,SAAS,CAAEC,YAAY,CAAC,CAAG/D,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACgE,QAAQ,CAAEC,WAAW,CAAC,CAAGjE,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACkE,WAAW,CAAEC,cAAc,CAAC,CAAGnE,QAAQ,CAAC,KAAK,CAAC,CAErD;AACA,KAAM,CAACoE,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGrE,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACsE,uBAAuB,CAAEC,0BAA0B,CAAC,CAAGvE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE1E;AACA,KAAM,CAACwE,eAAe,CAAEC,kBAAkB,CAAC,CAAGzE,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC0E,YAAY,CAAEC,eAAe,CAAC,CAAG3E,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAC4E,YAAY,CAAEC,eAAe,CAAC,CAAG7E,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAC8E,SAAS,CAAEC,YAAY,CAAC,CAAG/E,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACgF,WAAW,CAAEC,cAAc,CAAC,CAAGjF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAElD;AACAC,SAAS,CAAC,IAAM,CACd,GAAI0C,UAAU,CAAE,CACdM,mBAAmB,CAAC,CAAC,GAAGN,UAAU,CAAC,CAAC,CAEpC;AACA,KAAM,CAAAuC,eAAe,CAAG9C,YAAY,CAAC+C,OAAO,CAAC,iBAAiB,CAAC,CAC/D,KAAM,CAAAC,aAAa,CAAGhD,YAAY,CAAC+C,OAAO,CAAC,gBAAgB,CAAC,CAC5D,KAAM,CAAAE,aAAa,CAAGjD,YAAY,CAAC+C,OAAO,CAAC,eAAe,CAAC,CAE3D,GAAI,CAAAG,qBAAqB,CAAG,EAAE,CAC9B,GAAI,CAAAC,mBAAmB,CAAG,EAAE,CAC5B,GAAI,CAAAC,mBAAmB,CAAG,EAAE,CAE5B;AACA,GAAIN,eAAe,CAAE,CACnB,GAAI,CACFI,qBAAqB,CAAGhD,IAAI,CAACmD,KAAK,CAACP,eAAe,CAAC,CACnD,GAAI,CAACQ,KAAK,CAACC,OAAO,CAACL,qBAAqB,CAAC,CAAE,CACzCA,qBAAqB,CAAG,EAAE,CAC5B,CACF,CAAE,MAAOM,CAAC,CAAE,CACV1D,OAAO,CAAC2D,KAAK,CAAC,iCAAiC,CAAED,CAAC,CAAC,CACrD,CACF,CAEA;AACA,GAAIR,aAAa,CAAE,CACjB,GAAI,CACFG,mBAAmB,CAAGjD,IAAI,CAACmD,KAAK,CAACL,aAAa,CAAC,CAC/C,GAAI,CAACM,KAAK,CAACC,OAAO,CAACJ,mBAAmB,CAAC,CAAE,CACvCA,mBAAmB,CAAG,EAAE,CAC1B,CACF,CAAE,MAAOK,CAAC,CAAE,CACV1D,OAAO,CAAC2D,KAAK,CAAC,gCAAgC,CAAED,CAAC,CAAC,CACpD,CACF,CAEA;AACA,GAAIP,aAAa,CAAE,CACjB,GAAI,CACFG,mBAAmB,CAAGlD,IAAI,CAACmD,KAAK,CAACJ,aAAa,CAAC,CAC/C,GAAI,CAACK,KAAK,CAACC,OAAO,CAACH,mBAAmB,CAAC,CAAE,CACvCA,mBAAmB,CAAG,EAAE,CAC1B,CACF,CAAE,MAAOI,CAAC,CAAE,CACV1D,OAAO,CAAC2D,KAAK,CAAC,+BAA+B,CAAED,CAAC,CAAC,CACnD,CACF,CAEA;AACA,KAAM,CAAAE,gBAAgB,CAAG,CAAC,GAAG,GAAI,CAAAC,GAAG,CAACpD,UAAU,CAACqD,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAEtE;AACA,KAAM,CAAAC,WAAW,CAAG,EAAE,CACtBxD,UAAU,CAACyD,OAAO,CAACC,SAAS,EAAI,CAC9BA,SAAS,CAACC,GAAG,CAACF,OAAO,CAACE,GAAG,EAAI,CAC3B,GAAI,CAACH,WAAW,CAACI,QAAQ,CAACD,GAAG,CAAC,CAAE,CAC9BH,WAAW,CAACK,IAAI,CAACF,GAAG,CAAC,CACvB,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA,KAAM,CAAAG,WAAW,CAAG,GAAI,CAAAV,GAAG,CAAC,CAAC,CAC7BpD,UAAU,CAACyD,OAAO,CAACC,SAAS,EAAI,CAC9B,GAAIA,SAAS,CAACK,cAAc,CAAE,CAC5BC,MAAM,CAACC,IAAI,CAACP,SAAS,CAACK,cAAc,CAAC,CAACN,OAAO,CAACS,OAAO,EAAI,CACvDJ,WAAW,CAACK,GAAG,CAACD,OAAO,CAAC,CAC1B,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACF,KAAM,CAAAE,sBAAsB,CAAGrB,KAAK,CAACsB,IAAI,CAACP,WAAW,CAAC,CAEtD;AACA,KAAM,CAAAQ,gBAAgB,CAAG,CAAC,GAAG,GAAI,CAAAlB,GAAG,CAAC,CAAC,GAAGT,qBAAqB,CAAE,GAAGQ,gBAAgB,CAAC,CAAC,CAAC,CAEtF;AACA,KAAM,CAAAoB,cAAc,CAAG,CAAC,GAAG,GAAI,CAAAnB,GAAG,CAAC,CAAC,GAAGR,mBAAmB,CAAE,GAAGY,WAAW,CAAC,CAAC,CAAC,CAE7E;AACA,KAAM,CAAAgB,cAAc,CAAG,CAAC,GAAG,GAAI,CAAApB,GAAG,CAAC,CAAC,GAAGP,mBAAmB,CAAE,GAAGuB,sBAAsB,CAAC,CAAC,CAAC,CAExF;AACAtD,aAAa,CAACwD,gBAAgB,CAAC,CAC/BtD,WAAW,CAACuD,cAAc,CAAC,CAC3BrD,cAAc,CAACsD,cAAc,CAAC,CAE9B;AACA,GAAIxE,UAAU,CAACyE,MAAM,CAAG,CAAC,EAAI,CAAClE,iBAAiB,CAAE,CAC/CC,oBAAoB,CAACR,UAAU,CAAC,CAAC,CAAC,CAAC,CAEnC;AACA,KAAM,CAAA0E,cAAc,CAAG1E,UAAU,CAAC,CAAC,CAAC,CACpC2E,iCAAiC,CAACD,cAAc,CAAC,CACnD,CACF,CACF,CAAC,CAAE,CAAC1E,UAAU,CAAC,CAAC,CAEhB;AACA1C,SAAS,CAAC,IAAM,CACd,GAAIiD,iBAAiB,CAAE,CACrBoE,iCAAiC,CAACpE,iBAAiB,CAAC,CACtD,CACF,CAAC,CAAE,CAACA,iBAAiB,CAAC,CAAC,CAEvB;AACA,KAAM,CAAAoE,iCAAiC,CAAIjB,SAAS,EAAK,CACvD,GAAI,CAACA,SAAS,CAAE,OAEhB,KAAM,CAAAkB,eAAe,CAAG,CAAC,CAAC,CAE1B;AACAlB,SAAS,CAACmB,MAAM,CAACpB,OAAO,CAACqB,KAAK,EAAI,CAChCF,eAAe,CAACE,KAAK,CAAC,CAAG,CACvB,KAAK,CAAEpB,SAAS,CAACqB,QAAQ,CAACD,KAAK,CAAC,EAAI,EAAE,CACtC,GAAG,CAAE,EAAE,CACP,GAAG,CAAE,EAAE,CACP,GAAG,CAAE,EAAE,CACP,GAAG,CAAE,EACP,CAAC,CAED;AACA,KAAM,CAAA7D,WAAW,CAAGyC,SAAS,CAACqB,QAAQ,CAACD,KAAK,CAAC,EAAI,EAAE,CAEnD;AACA7D,WAAW,CAACwC,OAAO,CAACS,OAAO,EAAI,CAC7B,GAAI,CAACA,OAAO,CAACN,QAAQ,CAAC,OAAO,CAAC,CAAE,CAC9B;AACAgB,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAACK,OAAO,CAAC,CACzCU,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAACK,OAAO,CAAC,CACzCU,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAACK,OAAO,CAAC,CACzCU,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAACK,OAAO,CAAC,CAC3C,CACA;AAAA,IACK,IAAIA,OAAO,CAACN,QAAQ,CAAC,iBAAiB,CAAC,CAAE,CAC5C,KAAM,CAAAoB,WAAW,CAAGd,OAAO,CAACe,OAAO,CAAC,kBAAkB,CAAE,EAAE,CAAC,CAC3DL,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAACmB,WAAW,CAAC,CAC7CJ,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAACmB,WAAW,CAAC,CAC/C,CACF,CAAC,CAAC,CAEF;AACA;AACA,GAAItB,SAAS,CAACwB,IAAI,GAAK,4BAA4B,EAAIJ,KAAK,GAAK,MAAM,CAAE,CACvE;AACAF,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,EAAE,CAClC,CAEA;AACA,GACGpB,SAAS,CAACwB,IAAI,GAAK,4BAA4B,EAAIJ,KAAK,GAAK,OAAO,EACpEpB,SAAS,CAACwB,IAAI,GAAK,gCAAgC,EAAIJ,KAAK,GAAK,OAAQ,CAC1E,CACA,GAAIF,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAClB,QAAQ,CAAC,SAAS,CAAC,EAC/C,CAACgB,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAClB,QAAQ,CAAC,mBAAmB,CAAC,CAAE,CAC9DgB,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAAC,mBAAmB,CAAC,CACrDe,eAAe,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC,CAACjB,IAAI,CAAC,mBAAmB,CAAC,CACvD,CACF,CACF,CAAC,CAAC,CAEFjC,0BAA0B,CAACgD,eAAe,CAAC,CAC7C,CAAC,CAED,KAAM,CAAAO,iBAAiB,CAAIjB,OAAO,EAAK,CACrC;AACA,GAAI,CAAAH,cAAc,CAAG,CACnBmB,IAAI,CAAEhB,OAAO,CACbkB,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,GAAG,CACdC,gBAAgB,CAAE,EAAG;AACvB,CAAC,CAED;AACA,IAAK,KAAM,CAAA/B,SAAS,GAAI,CAAArD,gBAAgB,CAAE,CACxC,GAAIqD,SAAS,CAACK,cAAc,EAAIL,SAAS,CAACK,cAAc,CAACG,OAAO,CAAC,CAAE,CACjEH,cAAc,CAAG,CACfmB,IAAI,CAAEhB,OAAO,CACbkB,KAAK,CAAE1B,SAAS,CAACK,cAAc,CAACG,OAAO,CAAC,CAACkB,KAAK,EAAI,EAAE,CACpDC,SAAS,CAAE3B,SAAS,CAACK,cAAc,CAACG,OAAO,CAAC,CAACmB,SAAS,EAAI,EAAE,CAC5DC,WAAW,CAAE5B,SAAS,CAACK,cAAc,CAACG,OAAO,CAAC,CAACoB,WAAW,EAAI,EAAE,CAChEC,SAAS,CAAE7B,SAAS,CAACK,cAAc,CAACG,OAAO,CAAC,CAACqB,SAAS,EAAI,EAAE,CAC5DC,SAAS,CAAE9B,SAAS,CAACK,cAAc,CAACG,OAAO,CAAC,CAACsB,SAAS,EAAI,GAAG,CAC7DC,gBAAgB,CAAE/B,SAAS,CAACK,cAAc,CAACG,OAAO,CAAC,CAACuB,gBAAgB,EAAI,EAAG;AAC7E,CAAC,CACD,MACF,CACF,CAEAnD,cAAc,CAACyB,cAAc,CAAC,CAC9B3B,YAAY,CAAC,SAAS,CAAC,CACvB1B,mBAAmB,CAACwD,OAAO,CAAC,CAC5BhC,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAwD,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpCpE,WAAW,CAAC,IAAI,CAAC,CACjB,GAAI,CACF;AACA,KAAM,CAAAqE,iBAAiB,CAAGC,4BAA4B,CAAC,CAAC,CAExD;AACA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAA9G,aAAa,CAAC4G,iBAAiB,CAAE9E,UAAU,CAAEE,QAAQ,CAAEE,WAAW,CAAC,CAExF,GAAI4E,MAAM,CAAChG,OAAO,CAAE,CAClB;AACAI,kBAAkB,CAAC0F,iBAAiB,CAAE9E,UAAU,CAAEE,QAAQ,CAAEE,WAAW,CAAC,CACxEO,cAAc,CAAC,IAAI,CAAC,CACpBlC,UAAU,CAAC,IAAMkC,cAAc,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,CAC/C,CACF,CAAE,MAAO0B,KAAK,CAAE,CACd3D,OAAO,CAAC2D,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C;AACF,CAAC,OAAS,CACR5B,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAC,CAED;AACA;AACA,KAAM,CAAAsE,4BAA4B,CAAGA,CAAA,GAAM,CACzC,GAAI,CAACrF,iBAAiB,CAAE,MAAO,CAAC,GAAGF,gBAAgB,CAAC,CAEpD;AACA,KAAM,CAAAsF,iBAAiB,CAAGhG,IAAI,CAACmD,KAAK,CAACnD,IAAI,CAACC,SAAS,CAACS,gBAAgB,CAAC,CAAC,CAEtE;AACA,KAAM,CAAAyF,cAAc,CAAGH,iBAAiB,CAACI,SAAS,CAACzC,CAAC,EAAIA,CAAC,CAAC4B,IAAI,GAAK3E,iBAAiB,CAAC2E,IAAI,CAAC,CAC1F,GAAIY,cAAc,GAAK,CAAC,CAAC,CAAE,MAAO,CAAAH,iBAAiB,CAEnD;AACA,GAAI,CAACA,iBAAiB,CAACG,cAAc,CAAC,CAACE,qBAAqB,CAAE,CAC5DL,iBAAiB,CAACG,cAAc,CAAC,CAACE,qBAAqB,CAAG,CAAC,CAAC,CAC9D,CAEA;AACAL,iBAAiB,CAACG,cAAc,CAAC,CAACE,qBAAqB,CAAGrG,IAAI,CAACmD,KAAK,CAACnD,IAAI,CAACC,SAAS,CAAC+B,uBAAuB,CAAC,CAAC,CAE7G;AACAqC,MAAM,CAACC,IAAI,CAACtC,uBAAuB,CAAC,CAAC8B,OAAO,CAACqB,KAAK,EAAI,CACpD,KAAM,CAAAmB,aAAa,CAAG,EAAE,CACxB,KAAM,CAAAC,oBAAoB,CAAGvE,uBAAuB,CAACmD,KAAK,CAAC,CAE3D;AACA,KAAM,CAAAqB,cAAc,CAAG,GAAI,CAAA/C,GAAG,CAAC,CAAC,CAEhC;AACA,KAAM,CAAAgD,eAAe,CAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CAC5C,KAAM,CAAAC,kBAAkB,CAAG,GAAI,CAAAjD,GAAG,CAAC,CAAC,CAEpC;AACAgD,eAAe,CAAC3C,OAAO,CAAC6C,WAAW,EAAI,CACrC,CAACJ,oBAAoB,CAACI,WAAW,CAAC,EAAI,EAAE,EAAE7C,OAAO,CAACS,OAAO,EAAI,CAC3DmC,kBAAkB,CAAClC,GAAG,CAACD,OAAO,CAAC,CACjC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA,IAAK,KAAM,CAAAA,OAAO,GAAI,CAAAmC,kBAAkB,CAAE,CACxC,KAAM,CAAAE,YAAY,CAAGH,eAAe,CAACI,KAAK,CAACF,WAAW,EACpD,CAACJ,oBAAoB,CAACI,WAAW,CAAC,EAAI,EAAE,EAAE1C,QAAQ,CAACM,OAAO,CAC5D,CAAC,CAED,GAAIqC,YAAY,CAAE,CAChBJ,cAAc,CAAChC,GAAG,CAACD,OAAO,CAAC,CAC7B,CACF,CAEA;AACA+B,aAAa,CAACpC,IAAI,CAAC,GAAGd,KAAK,CAACsB,IAAI,CAAC8B,cAAc,CAAC,CAAC,CAEjD;AACA,KAAM,CAAAM,cAAc,CAAG,GAAI,CAAArD,GAAG,CAAC,CAAC,CAEhC,CAAC8C,oBAAoB,CAAC,GAAG,CAAC,EAAI,EAAE,EAAEzC,OAAO,CAACS,OAAO,EAAI,CACnD,GACE,CAACgC,oBAAoB,CAAC,GAAG,CAAC,EAAI,EAAE,EAAEtC,QAAQ,CAACM,OAAO,CAAC,EACnD,CAAC,CAACgC,oBAAoB,CAAC,GAAG,CAAC,EAAI,EAAE,EAAEtC,QAAQ,CAACM,OAAO,CAAC,EACpD,CAAC,CAACgC,oBAAoB,CAAC,GAAG,CAAC,EAAI,EAAE,EAAEtC,QAAQ,CAACM,OAAO,CAAC,EACpD,CAACA,OAAO,CAACN,QAAQ,CAAC,OAAO,CAAC,CAC1B,CACA6C,cAAc,CAACtC,GAAG,CAAC,GAAGD,OAAO,kBAAkB,CAAC,CAClD,CACF,CAAC,CAAC,CAEF;AACA+B,aAAa,CAACpC,IAAI,CAAC,GAAGd,KAAK,CAACsB,IAAI,CAACoC,cAAc,CAAC,CAAC,CAEjD;AACAd,iBAAiB,CAACG,cAAc,CAAC,CAACf,QAAQ,CAACD,KAAK,CAAC,CAAGmB,aAAa,CAEjE;AACA,KAAM,CAAAS,kBAAkB,CAAG,CACzB,GAAGP,cAAc,CACjB,GAAGpD,KAAK,CAACsB,IAAI,CAACoC,cAAc,CAAC,CAACpD,GAAG,CAACsD,CAAC,EAAIA,CAAC,CAAC1B,OAAO,CAAC,kBAAkB,CAAE,EAAE,CAAC,CAAC,CACzE;AACA,GAAG,CAAC,GAAGoB,kBAAkB,CAAC,CAACO,MAAM,CAACD,CAAC,EAAI,CAACR,cAAc,CAACU,GAAG,CAACF,CAAC,CAAC,CAAC,CAC/D,CAED;AACA,GAAI,CAAChB,iBAAiB,CAACG,cAAc,CAAC,CAAC/B,cAAc,CAAE,CACrD4B,iBAAiB,CAACG,cAAc,CAAC,CAAC/B,cAAc,CAAG,CAAC,CAAC,CACvD,CAEA;AACA2C,kBAAkB,CAACjD,OAAO,CAACS,OAAO,EAAI,CACpC,KAAM,CAAA4C,gBAAgB,CAAG5C,OAAO,CAACe,OAAO,CAAC,kBAAkB,CAAE,EAAE,CAAC,CAEhE;AACA,GAAI,CAACU,iBAAiB,CAACG,cAAc,CAAC,CAAC/B,cAAc,CAAC+C,gBAAgB,CAAC,CAAE,CACvEnB,iBAAiB,CAACG,cAAc,CAAC,CAAC/B,cAAc,CAAC+C,gBAAgB,CAAC,CAAG,CACnE1B,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,GAAG,CACdC,gBAAgB,CAAE,EAAG;AACvB,CAAC,CAED;AACA,IAAK,KAAM,CAAA/B,SAAS,GAAI,CAAAiC,iBAAiB,CAAE,CACzC,GAAIjC,SAAS,CAACK,cAAc,EAAIL,SAAS,CAACK,cAAc,CAAC+C,gBAAgB,CAAC,CAAE,CAC1EnB,iBAAiB,CAACG,cAAc,CAAC,CAAC/B,cAAc,CAAC+C,gBAAgB,CAAC,CAAG,CACnE,GAAGpD,SAAS,CAACK,cAAc,CAAC+C,gBAAgB,CAAE;AAChD,CAAC,CACD,MACF,CACF,CACF,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,MAAO,CAAAnB,iBAAiB,CAC1B,CAAC,CAED;AACA,KAAM,CAAAoB,kBAAkB,CAAGA,CAAA,GAAM,CAC/BzG,mBAAmB,CAAC,CAAC,GAAGN,UAAU,CAAC,CAAC,CACpCoB,YAAY,CAAC,KAAK,CAAC,CAEnB;AACA,GAAIb,iBAAiB,CAAE,CACrBoE,iCAAiC,CAACpE,iBAAiB,CAAC,CACtD,CACF,CAAC,CAED;AACA,KAAM,CAAAyG,qBAAqB,CAAItD,SAAS,EAAK,CAC3ClD,oBAAoB,CAACkD,SAAS,CAAC,CAC/BhC,oBAAoB,CAAC,KAAK,CAAC,CAC3BiD,iCAAiC,CAACjB,SAAS,CAAC,CAC9C,CAAC,CAED;AACA,KAAM,CAAAuD,oBAAoB,CAAGA,CAACC,WAAW,CAAEC,KAAK,CAAEC,KAAK,GAAK,CAC1DhG,YAAY,CAAC,IAAI,CAAC,CAClBd,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAChBA,SAAS,CAACwB,IAAI,GAAKgC,WAAW,CAC1B,CAAE,GAAGxD,SAAS,CAAE,CAACyD,KAAK,EAAGC,KAAM,CAAC,CAChC1D,SACN,CACF,CAAC,CAED;AACA,GAAInD,iBAAiB,EAAIA,iBAAiB,CAAC2E,IAAI,GAAKgC,WAAW,CAAE,CAC/D1G,oBAAoB,CAAC6G,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE,CAACF,KAAK,EAAGC,KAAM,CAAC,CAAC,CAAC,CAC7D,CACF,CAAC,CAED;AACA,KAAM,CAAAE,mBAAmB,CAAGA,CAACJ,WAAW,CAAEK,WAAW,CAAEJ,KAAK,CAAEC,KAAK,GAAK,CACtEhG,YAAY,CAAC,IAAI,CAAC,CAClBd,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB,GAAIA,SAAS,CAACwB,IAAI,GAAKgC,WAAW,CAAE,CAClC,KAAM,CAAAM,qBAAqB,CAAG,CAAE,GAAG9D,SAAS,CAACK,cAAe,CAAC,CAC7D,GAAI,CAACyD,qBAAqB,CAACD,WAAW,CAAC,CAAE,CACvCC,qBAAqB,CAACD,WAAW,CAAC,CAAG,CACnCnC,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACboC,gBAAgB,CAAE,EAAE,CAAG;AACvBnC,WAAW,CAAE,EAAE,CACfC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,GAAG,CACdC,gBAAgB,CAAE,EACpB,CAAC,CACH,CACA+B,qBAAqB,CAACD,WAAW,CAAC,CAACJ,KAAK,CAAC,CAAGC,KAAK,CACjD,MAAO,CAAE,GAAG1D,SAAS,CAAEK,cAAc,CAAEyD,qBAAsB,CAAC,CAChE,CACA,MAAO,CAAA9D,SAAS,CAClB,CAAC,CACH,CAAC,CAEH;AACA,GAAInD,iBAAiB,EAAIA,iBAAiB,CAAC2E,IAAI,GAAKgC,WAAW,CAAE,CAC/D,KAAM,CAAAM,qBAAqB,CAAG,CAAE,GAAGjH,iBAAiB,CAACwD,cAAe,CAAC,CACrE,GAAI,CAACyD,qBAAqB,CAACD,WAAW,CAAC,CAAE,CACvCC,qBAAqB,CAACD,WAAW,CAAC,CAAG,CACnCnC,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACboC,gBAAgB,CAAE,EAAE,CAAG;AACvBnC,WAAW,CAAE,EAAE,CACfC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,GAAG,CACdC,gBAAgB,CAAE,EACpB,CAAC,CACH,CACA+B,qBAAqB,CAACD,WAAW,CAAC,CAACJ,KAAK,CAAC,CAAGC,KAAK,CACjD5G,oBAAoB,CAAC6G,IAAI,GAAK,CAC5B,GAAGA,IAAI,CACPtD,cAAc,CAAEyD,qBAClB,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAEC;AACA,KAAM,CAAAE,uBAAuB,CAAIC,IAAI,EAAK,CACxCjG,oBAAoB,CAACiG,IAAI,CAAC,CAC5B,CAAC,CAED;AACA,KAAM,CAAAC,uBAAuB,CAAGA,CAAC9C,KAAK,CAAEwB,WAAW,CAAEiB,WAAW,GAAK,CACnEnG,YAAY,CAAC,IAAI,CAAC,CAElB;AACAQ,0BAA0B,CAACyF,IAAI,EAAI,CACjC,KAAM,CAAAQ,OAAO,CAAG,CAAE,GAAGR,IAAK,CAAC,CAE3B;AACA,GAAI,CAACQ,OAAO,CAAC/C,KAAK,CAAC,CAAE,CACnB+C,OAAO,CAAC/C,KAAK,CAAC,CAAG,CACf,KAAK,CAAE,EAAE,CACT,GAAG,CAAE,EAAE,CACP,GAAG,CAAE,EAAE,CACP,GAAG,CAAE,EAAE,CACP,GAAG,CAAE,EACP,CAAC,CACH,CAEA;AACA,GAAIwB,WAAW,GAAK,KAAK,CAAE,CACzB;AACAuB,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAG,CAAC,GAAG,GAAI,CAAA1B,GAAG,CAAC,CAAC,GAAGyE,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAEyC,WAAW,CAAC,CAAC,CAAC,CAC7EM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CAAC,GAAG,GAAI,CAAA1B,GAAG,CAAC,CAAC,GAAGyE,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAEyC,WAAW,CAAC,CAAC,CAAC,CACzEM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CAAC,GAAG,GAAI,CAAA1B,GAAG,CAAC,CAAC,GAAGyE,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAEyC,WAAW,CAAC,CAAC,CAAC,CACzEM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CAAC,GAAG,GAAI,CAAA1B,GAAG,CAAC,CAAC,GAAGyE,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAEyC,WAAW,CAAC,CAAC,CAAC,CACzEM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CAAC,GAAG,GAAI,CAAA1B,GAAG,CAAC,CAAC,GAAGyE,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAEyC,WAAW,CAAC,CAAC,CAAC,CAC3E,CAAC,IAAM,CACL;AACAM,OAAO,CAAC/C,KAAK,CAAC,CAACwB,WAAW,CAAC,CAAG,CAAC,GAAG,GAAI,CAAAlD,GAAG,CAAC,CAAC,GAAGyE,OAAO,CAAC/C,KAAK,CAAC,CAACwB,WAAW,CAAC,CAAEiB,WAAW,CAAC,CAAC,CAAC,CAEzF;AACA,KAAM,CAAAhB,YAAY,CAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CAACC,KAAK,CAACmB,IAAI,EAClDE,OAAO,CAAC/C,KAAK,CAAC,CAAC6C,IAAI,CAAC,CAAC/D,QAAQ,CAAC2D,WAAW,CAC3C,CAAC,CAED,GAAIhB,YAAY,EAAI,CAACsB,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAClB,QAAQ,CAAC2D,WAAW,CAAC,CAAE,CAChEM,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAG,CAAC,GAAG+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAEyC,WAAW,CAAC,CACjE,CACF,CAEA,MAAO,CAAAM,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,4BAA4B,CAAGA,CAAChD,KAAK,CAAEwB,WAAW,CAAEiB,WAAW,GAAK,CACxEnG,YAAY,CAAC,IAAI,CAAC,CAElB;AACAQ,0BAA0B,CAACyF,IAAI,EAAI,CACjC,KAAM,CAAAQ,OAAO,CAAG,CAAE,GAAGR,IAAK,CAAC,CAE3B;AACA,GAAIf,WAAW,GAAK,KAAK,CAAE,CACzBuB,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAG+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC8B,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKY,WAAW,CAAC,CAC5EM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC8B,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKY,WAAW,CAAC,CACxEM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC8B,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKY,WAAW,CAAC,CACxEM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC8B,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKY,WAAW,CAAC,CACxEM,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC8B,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKY,WAAW,CAAC,CAC1E,CAAC,IAAM,CACL;AACAM,OAAO,CAAC/C,KAAK,CAAC,CAACwB,WAAW,CAAC,CAAGuB,OAAO,CAAC/C,KAAK,CAAC,CAACwB,WAAW,CAAC,CAACM,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKY,WAAW,CAAC,CAExF;AACAM,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAG+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC8B,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKY,WAAW,CAAC,CAC9E,CAEA,MAAO,CAAAM,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,CACD;AACA,KAAM,CAAAE,kBAAkB,CAAGA,CAAA,GAAM,CAC/B3F,YAAY,CAAC,WAAW,CAAC,CACzBE,cAAc,CAAC,CACb4C,IAAI,CAAE,EAAE,CACR3B,QAAQ,CAAE1C,UAAU,CAAC,CAAC,CAAC,EAAI,EAAE,CAC7BgE,MAAM,CAAE,CAAC,MAAM,CAAE,OAAO,CAAE,aAAa,CAAC,CACxClB,GAAG,CAAE,EAAE,CACP2C,WAAW,CAAE,cAAc,CAC3BvB,QAAQ,CAAE,CACRiD,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EACf,CAAC,CACDC,WAAW,CAAE,EAAE,CACfC,mBAAmB,CAAE,EAAE,CAAG;AAC1BX,gBAAgB,CAAE,EAAE,CAAM;AAC1BY,oBAAoB,CAAE,EAAE,CACxBC,kBAAkB,CAAE,EAAE,CACtBvE,cAAc,CAAE,CAAC,CAAC,CAClBwE,yBAAyB,CAAE,CAAC,CAAE;AAChC,CAAC,CAAC,CACFrG,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAsG,iBAAiB,CAAGA,CAAA,GAAM,CAC9BpG,YAAY,CAAC,UAAU,CAAC,CACxBE,cAAc,CAAC,CAAE4C,IAAI,CAAE,EAAG,CAAC,CAAC,CAC5BhD,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAuG,gBAAgB,CAAGA,CAAA,GAAM,CAC7BrG,YAAY,CAAC,SAAS,CAAC,CACvBE,cAAc,CAAC,CAAE4C,IAAI,CAAE,EAAG,CAAC,CAAC,CAC5BhD,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAwG,gBAAgB,CAAGA,CAAA,GAAM,CAC7BtG,YAAY,CAAC,SAAS,CAAC,CACvBE,cAAc,CAAC,CACb4C,IAAI,CAAE,EAAE,CACRE,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,GAAG,CACdC,gBAAgB,CAAE,EAAG;AACvB,CAAC,CAAC,CACFvD,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAyG,mBAAmB,CAAGA,CAAA,GAAM,CAChCvH,YAAY,CAAC,IAAI,CAAC,CAElB,GAAIe,SAAS,GAAK,SAAS,CAAE,CAC3B,KAAM,CAAAoF,WAAW,CAAGlF,WAAW,CAAC6C,IAAI,CAEpC,GAAIzE,gBAAgB,EAAIA,gBAAgB,GAAK8G,WAAW,CAAE,CACxD;AACAjH,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB;AACA,KAAM,CAAAkF,eAAe,CAAG,CAAE,GAAGlF,SAAS,CAACqB,QAAS,CAAC,CACjDf,MAAM,CAACC,IAAI,CAAC2E,eAAe,CAAC,CAACnF,OAAO,CAACqB,KAAK,EAAI,CAC5C8D,eAAe,CAAC9D,KAAK,CAAC,CAAG8D,eAAe,CAAC9D,KAAK,CAAC,CAACzB,GAAG,CAACsD,CAAC,EACnDA,CAAC,GAAKlG,gBAAgB,CAAG8G,WAAW,CACpCZ,CAAC,GAAK,GAAGlG,gBAAgB,kBAAkB,CAAG,GAAG8G,WAAW,kBAAkB,CAAGZ,CACnF,CAAC,CACH,CAAC,CAAC,CAEF;AACA,KAAM,CAAAa,qBAAqB,CAAG,CAAE,GAAG9D,SAAS,CAACK,cAAe,CAAC,CAC7D,GAAIyD,qBAAqB,CAAC/G,gBAAgB,CAAC,CAAE,CAC3C+G,qBAAqB,CAACD,WAAW,CAAC,CAAG,CACnCnC,KAAK,CAAE/C,WAAW,CAAC+C,KAAK,CACxBC,SAAS,CAAEhD,WAAW,CAACgD,SAAS,CAChCC,WAAW,CAAEjD,WAAW,CAACiD,WAAW,CACpCC,SAAS,CAAElD,WAAW,CAACkD,SAAS,CAChCC,SAAS,CAAEnD,WAAW,CAACmD,SAAS,EAAI,GAAG,CACvCC,gBAAgB,CAAEpD,WAAW,CAACoD,gBAAgB,EAAI,EAAG;AACvD,CAAC,CACD,MAAO,CAAA+B,qBAAqB,CAAC/G,gBAAgB,CAAC,CAChD,CAEA,MAAO,CACL,GAAGiD,SAAS,CACZqB,QAAQ,CAAE6D,eAAe,CACzB7E,cAAc,CAAEyD,qBAClB,CAAC,CACH,CAAC,CACH,CAAC,CAED;AACAtG,cAAc,CAACmG,IAAI,EAAI,CACrB,KAAM,CAAAwB,KAAK,CAAGxB,IAAI,CAACyB,OAAO,CAACrI,gBAAgB,CAAC,CAC5C,GAAIoI,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,CAAAhB,OAAO,CAAG,CAAC,GAAGR,IAAI,CAAC,CACzBQ,OAAO,CAACgB,KAAK,CAAC,CAAGtB,WAAW,CAC5B,MAAO,CAAAM,OAAO,CAChB,CACA,MAAO,CAAC,GAAGR,IAAI,CAAEE,WAAW,CAAC,CAC/B,CAAC,CAAC,CAEF;AACA,GAAIhH,iBAAiB,CAAE,CACrBqB,0BAA0B,CAACyF,IAAI,EAAI,CACjC,KAAM,CAAAQ,OAAO,CAAG,CAAE,GAAGR,IAAK,CAAC,CAC3BrD,MAAM,CAACC,IAAI,CAAC4D,OAAO,CAAC,CAACpE,OAAO,CAACqB,KAAK,EAAI,CACpCd,MAAM,CAACC,IAAI,CAAC4D,OAAO,CAAC/C,KAAK,CAAC,CAAC,CAACrB,OAAO,CAACkE,IAAI,EAAI,CAC1CE,OAAO,CAAC/C,KAAK,CAAC,CAAC6C,IAAI,CAAC,CAAGE,OAAO,CAAC/C,KAAK,CAAC,CAAC6C,IAAI,CAAC,CAACtE,GAAG,CAACsD,CAAC,EAC/CA,CAAC,GAAKlG,gBAAgB,CAAG8G,WAAW,CAAGZ,CACzC,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,MAAO,CAAAkB,OAAO,CAChB,CAAC,CAAC,CACJ,CACF,CAAC,IAAM,IAAIpH,gBAAgB,CAAE,CAC3B;AACAH,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB,GAAIA,SAAS,CAACK,cAAc,EAAIL,SAAS,CAACK,cAAc,CAACwD,WAAW,CAAC,CAAE,CACrE,KAAM,CAAAC,qBAAqB,CAAG,CAAE,GAAG9D,SAAS,CAACK,cAAe,CAAC,CAC7DyD,qBAAqB,CAACD,WAAW,CAAC,CAAG,CACnC,GAAGC,qBAAqB,CAACD,WAAW,CAAC,CAAE;AACvCnC,KAAK,CAAE/C,WAAW,CAAC+C,KAAK,CACxBC,SAAS,CAAEhD,WAAW,CAACgD,SAAS,CAChCC,WAAW,CAAEjD,WAAW,CAACiD,WAAW,CACpCC,SAAS,CAAElD,WAAW,CAACkD,SAAS,CAChCC,SAAS,CAAEnD,WAAW,CAACmD,SAAS,EAAI,GAAG,CACvCC,gBAAgB,CAAEpD,WAAW,CAACoD,gBAAgB,EAAI,EAAG;AACvD,CAAC,CACD,MAAO,CAAE,GAAG/B,SAAS,CAAEK,cAAc,CAAEyD,qBAAsB,CAAC,CAChE,CACA,MAAO,CAAA9D,SAAS,CAClB,CAAC,CACH,CAAC,CACH,CAAC,IAAM,CACL;AACA,GAAI,CAACzC,WAAW,CAAC2C,QAAQ,CAAC2D,WAAW,CAAC,CAAE,CACtCrG,cAAc,CAACmG,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEE,WAAW,CAAC,CAAC,CAE9C;AACAjH,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB,KAAM,CAAA8D,qBAAqB,CAAG,CAAE,GAAG9D,SAAS,CAACK,cAAe,CAAC,CAC7DyD,qBAAqB,CAACD,WAAW,CAAC,CAAG,CACnCnC,KAAK,CAAE/C,WAAW,CAAC+C,KAAK,CACxBC,SAAS,CAAEhD,WAAW,CAACgD,SAAS,CAChCC,WAAW,CAAEjD,WAAW,CAACiD,WAAW,CACpCC,SAAS,CAAElD,WAAW,CAACkD,SAAS,CAChCC,SAAS,CAAEnD,WAAW,CAACmD,SAAS,EAAI,GAAG,CACvCC,gBAAgB,CAAEpD,WAAW,CAACoD,gBAAgB,EAAI,EAAG;AACvD,CAAC,CACD,MAAO,CAAE,GAAG/B,SAAS,CAAEK,cAAc,CAAEyD,qBAAsB,CAAC,CAChE,CAAC,CACH,CAAC,CACH,CACF,CACJ,CAAC,IAAM,IAAIrF,SAAS,GAAK,WAAW,CAAE,CACpC;AACA,GAAIE,WAAW,CAAC6C,IAAI,EAAI,CAAC7E,gBAAgB,CAAC0I,IAAI,CAACzF,CAAC,EAAIA,CAAC,CAAC4B,IAAI,GAAK7C,WAAW,CAAC6C,IAAI,CAAC,CAAE,CAChF,KAAM,CAAA8D,YAAY,CAAG,CACnB9D,IAAI,CAAE7C,WAAW,CAAC6C,IAAI,CACtB3B,QAAQ,CAAElB,WAAW,CAACkB,QAAQ,EAAI1C,UAAU,CAAC,CAAC,CAAC,EAAI,EAAE,CACrDgE,MAAM,CAAExC,WAAW,CAACwC,MAAM,EAAI,CAAC,MAAM,CAAE,OAAO,CAAE,aAAa,CAAC,CAC9DlB,GAAG,CAAEtB,WAAW,CAACsB,GAAG,EAAI,EAAE,CAC1B2C,WAAW,CAAEjE,WAAW,CAACiE,WAAW,EAAI,cAAc,CACtDvB,QAAQ,CAAE1C,WAAW,CAAC0C,QAAQ,EAAI,CAChCiD,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EACf,CAAC,CACDC,WAAW,CAAE9F,WAAW,CAAC8F,WAAW,EAAI,EAAE,CAC1CpE,cAAc,CAAE,CAAC,CACnB,CAAC,CAEDzD,mBAAmB,CAAC+G,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE2B,YAAY,CAAC,CAAC,CACpDxI,oBAAoB,CAACwI,YAAY,CAAC,CACpC,CACF,CAAC,IAAM,IAAI7G,SAAS,GAAK,UAAU,CAAE,CACnC;AACA,GAAIE,WAAW,CAAC6C,IAAI,EAAI,CAACrE,UAAU,CAAC+C,QAAQ,CAACvB,WAAW,CAAC6C,IAAI,CAAC,CAAE,CAC9D;AACApE,aAAa,CAACuG,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEhF,WAAW,CAAC6C,IAAI,CAAC,CAAC,CAElD;AACA5E,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB,GAAIA,SAAS,CAACH,QAAQ,GAAK,EAAE,CAAE,CAC7B,MAAO,CAAE,GAAGG,SAAS,CAAEH,QAAQ,CAAElB,WAAW,CAAC6C,IAAK,CAAC,CACrD,CACA,MAAO,CAAAxB,SAAS,CAClB,CAAC,CACH,CAAC,CACH,CACF,CAAC,IAAM,IAAIvB,SAAS,GAAK,SAAS,CAAE,CAClC;AACA,GAAIE,WAAW,CAAC6C,IAAI,EAAI,CAACnE,QAAQ,CAAC6C,QAAQ,CAACvB,WAAW,CAAC6C,IAAI,CAAC,CAAE,CAC5DlE,WAAW,CAACqG,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEhF,WAAW,CAAC6C,IAAI,CAAC,CAAC,CAClD,CACF,CAEAhD,eAAe,CAAC,KAAK,CAAC,CACtBI,cAAc,CAAC,CAAC,CAAC,CAAC,CAClB5B,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAEC;AACA,KAAM,CAAAuI,aAAa,CAAGA,CAACtB,IAAI,CAAEuB,IAAI,GAAK,CACpClH,eAAe,CAAC,CAAE2F,IAAI,CAAEuB,IAAK,CAAC,CAAC,CAC/BpH,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAED;AACA;AACF,KAAM,CAAAqH,YAAY,CAAGA,CAAA,GAAM,CACzB/H,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAEuG,IAAI,CAAEuB,IAAK,CAAC,CAAGnH,YAAY,CAEnC,GAAI4F,IAAI,GAAK,WAAW,CAAE,CACxBrH,mBAAmB,CAAC+G,IAAI,EAAIA,IAAI,CAACT,MAAM,CAACtD,CAAC,EAAIA,CAAC,CAAC4B,IAAI,GAAKgE,IAAI,CAAChE,IAAI,CAAC,CAAC,CAEnE;AACA,GAAI3E,iBAAiB,EAAIA,iBAAiB,CAAC2E,IAAI,GAAKgE,IAAI,CAAChE,IAAI,CAAE,CAC7D,KAAM,CAAAkE,mBAAmB,CAAG/I,gBAAgB,CAACuG,MAAM,CAACtD,CAAC,EAAIA,CAAC,CAAC4B,IAAI,GAAKgE,IAAI,CAAChE,IAAI,CAAC,CAC9E1E,oBAAoB,CAAC4I,mBAAmB,CAAC3E,MAAM,CAAG,CAAC,CAAG2E,mBAAmB,CAAC,CAAC,CAAC,CAAG,IAAI,CAAC,CACtF,CACF,CAAC,IAAM,IAAIzB,IAAI,GAAK,SAAS,CAAE,CAC7B;AACArH,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB,KAAM,CAAAkF,eAAe,CAAG,CAAE,GAAGlF,SAAS,CAACqB,QAAS,CAAC,CACjDf,MAAM,CAACC,IAAI,CAAC2E,eAAe,CAAC,CAACnF,OAAO,CAACqB,KAAK,EAAI,CAC5C8D,eAAe,CAAC9D,KAAK,CAAC,CAAG8D,eAAe,CAAC9D,KAAK,CAAC,CAAC8B,MAAM,CAACD,CAAC,EACtDA,CAAC,GAAKuC,IAAI,EAAIvC,CAAC,GAAK,GAAGuC,IAAI,kBAC7B,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAA1B,qBAAqB,CAAG,CAAE,GAAG9D,SAAS,CAACK,cAAe,CAAC,CAC7D,MAAO,CAAAyD,qBAAqB,CAAC0B,IAAI,CAAC,CAElC,MAAO,CACL,GAAGxF,SAAS,CACZqB,QAAQ,CAAE6D,eAAe,CACzB7E,cAAc,CAAEyD,qBAClB,CAAC,CACH,CAAC,CACH,CAAC,CAED;AACAtG,cAAc,CAACmG,IAAI,EAAIA,IAAI,CAACT,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKuC,IAAI,CAAC,CAAC,CAEpD;AACAtH,0BAA0B,CAACyF,IAAI,EAAI,CACjC,KAAM,CAAAQ,OAAO,CAAG,CAAE,GAAGR,IAAK,CAAC,CAC3BrD,MAAM,CAACC,IAAI,CAAC4D,OAAO,CAAC,CAACpE,OAAO,CAACqB,KAAK,EAAI,CACpCd,MAAM,CAACC,IAAI,CAAC4D,OAAO,CAAC/C,KAAK,CAAC,CAAC,CAACrB,OAAO,CAACkE,IAAI,EAAI,CAC1CE,OAAO,CAAC/C,KAAK,CAAC,CAAC6C,IAAI,CAAC,CAAGE,OAAO,CAAC/C,KAAK,CAAC,CAAC6C,IAAI,CAAC,CAACf,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAKuC,IAAI,CAAC,CACrE,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,MAAO,CAAArB,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIF,IAAI,GAAK,UAAU,CAAE,CAC9B;AACA,GAAIuB,IAAI,GAAK,KAAK,CAAE,CAClBpH,kBAAkB,CAAC,KAAK,CAAC,CACzBE,eAAe,CAAC,IAAI,CAAC,CACrB,OACF,CAEA;AACAlB,aAAa,CAACuG,IAAI,EAAIA,IAAI,CAACT,MAAM,CAACtD,CAAC,EAAIA,CAAC,GAAK4F,IAAI,CAAC,CAAC,CAEnD;AACA5I,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB,GAAIA,SAAS,CAACH,QAAQ,GAAK2F,IAAI,CAAE,CAC/B,KAAM,CAAAG,WAAW,CAAGxI,UAAU,CAACkI,IAAI,CAACzF,CAAC,EAAIA,CAAC,GAAK4F,IAAI,EAAI5F,CAAC,GAAK,KAAK,CAAC,EAAI,EAAE,CACzE,MAAO,CAAE,GAAGI,SAAS,CAAEH,QAAQ,CAAE8F,WAAY,CAAC,CAChD,CACA,MAAO,CAAA3F,SAAS,CAClB,CAAC,CACH,CAAC,CACH,CAAC,IAAM,IAAIiE,IAAI,GAAK,SAAS,CAAE,CAC7B;AACA,GAAIuB,IAAI,GAAK,KAAK,CAAE,CAClBpH,kBAAkB,CAAC,KAAK,CAAC,CACzBE,eAAe,CAAC,IAAI,CAAC,CACrB,OACF,CAEA;AACAhB,WAAW,CAACqG,IAAI,EAAIA,IAAI,CAACT,MAAM,CAAC0C,CAAC,EAAIA,CAAC,GAAKJ,IAAI,CAAC,CAAC,CAEjD;AACA5I,mBAAmB,CAAC+G,IAAI,EACtBA,IAAI,CAAChE,GAAG,CAACK,SAAS,EAAI,CACpB,GAAIA,SAAS,CAACC,GAAG,CAACC,QAAQ,CAACsF,IAAI,CAAC,CAAE,CAChC,MAAO,CACL,GAAGxF,SAAS,CACZC,GAAG,CAAED,SAAS,CAACC,GAAG,CAACiD,MAAM,CAAC0C,CAAC,EAAIA,CAAC,GAAKJ,IAAI,CAC3C,CAAC,CACH,CACA,MAAO,CAAAxF,SAAS,CAClB,CAAC,CACH,CAAC,CACH,CAEA5B,kBAAkB,CAAC,KAAK,CAAC,CACzBE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAEC;AACA,KAAM,CAAAuH,8BAA8B,CAAIzE,KAAK,EAAK,KAAA0E,sBAAA,CAChD,mBACE7K,KAAA,QAAK8K,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpD/K,KAAA,QAAK8K,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDjL,IAAA,OAAIgL,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,wCAAsC,CAAI,CAAC,cACvE/K,KAAA,QAAK8K,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1CjL,IAAA,SAAMgL,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,cACzD/K,KAAA,CAAClB,MAAM,CAACkM,IAAI,EAACvC,KAAK,CAAE3F,iBAAkB,CAACmI,aAAa,CAAElC,uBAAwB,CAAAgC,QAAA,eAC5E/K,KAAA,CAAClB,MAAM,CAACoM,OAAO,EAACJ,SAAS,CAAC,uEAAuE,CAAAC,QAAA,eAC/FjL,IAAA,CAACL,IAAI,EAAC0L,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,oBAAoB,CAAE,CAAC,cACjDhL,IAAA,CAAChB,MAAM,CAACsM,KAAK,GAAE,CAAC,cAChBtL,IAAA,CAAChB,MAAM,CAACuM,IAAI,EAAAN,QAAA,cAACjL,IAAA,CAACV,WAAW,EAAC+L,IAAI,CAAE,EAAG,CAAE,CAAC,CAAa,CAAC,EACtC,CAAC,cACjBrL,IAAA,CAAChB,MAAM,CAACwM,MAAM,EAAAP,QAAA,cACZjL,IAAA,CAAChB,MAAM,CAACyM,OAAO,EAACT,SAAS,CAAC,6DAA6D,CAAAC,QAAA,cACrFjL,IAAA,CAAChB,MAAM,CAAC0M,QAAQ,EAACV,SAAS,CAAC,KAAK,CAAAC,QAAA,CAC7B1F,MAAM,CAACoG,OAAO,CAACtL,aAAa,CAAC,CAACuE,GAAG,CAACgH,KAAA,MAAC,CAAC1C,IAAI,CAAE2C,KAAK,CAAC,CAAAD,KAAA,oBAC/C5L,IAAA,CAAChB,MAAM,CAAC8M,IAAI,EAEVnD,KAAK,CAAEO,IAAK,CACZ8B,SAAS,CAAC,wFAAwF,CAAAC,QAAA,cAElGjL,IAAA,CAAChB,MAAM,CAAC+M,QAAQ,EAAAd,QAAA,CAAEY,KAAK,CAAkB,CAAC,EAJrC3C,IAKM,CAAC,EACf,CAAC,CACa,CAAC,CACJ,CAAC,CACJ,CAAC,EACL,CAAC,EACX,CAAC,EACH,CAAC,CAELlG,iBAAiB,GAAK,KAAK,eAC1B9C,KAAA,QAAK8K,SAAS,CAAC,4FAA4F,CAAAC,QAAA,eACzGjL,IAAA,CAACT,IAAI,EAAC8L,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,oBAAoB,CAAE,CAAC,cACjD9K,KAAA,SAAA+K,QAAA,EAAM,wCACkC,cAAAjL,IAAA,WAAAiL,QAAA,CAAS5K,aAAa,CAAC2C,iBAAiB,CAAC,CAAS,CAAC,wEAE3F,EAAM,CAAC,EACJ,CACN,cAED9C,KAAA,QAAK8K,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrD/K,KAAA,SAAM8K,SAAS,CAAC,mCAAmC,CAAAC,QAAA,EAAC,eAAa,CAACjI,iBAAiB,GAAK,KAAK,CAAG,mBAAmB,CAAG,QAAQA,iBAAiB,EAAE,EAAO,CAAC,cACzJ9C,KAAA,WACE8L,QAAQ,CAAGxH,CAAC,EAAK,CACf,GAAIA,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CAClBQ,uBAAuB,CAAC9C,KAAK,CAAErD,iBAAiB,CAAEwB,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CACjEnE,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAG,EAAE,CAAE;AACvB,CACF,CAAE,CACFqC,SAAS,CAAC,qDAAqD,CAAAC,QAAA,eAE/DjL,IAAA,WAAQ2I,KAAK,CAAC,EAAE,CAAAsC,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvCzI,WAAW,CACT2F,MAAM,CAAC1C,OAAO,EAAI,KAAAyG,qBAAA,CACjB;AACA,GAAI,CAAChJ,uBAAuB,CAACmD,KAAK,CAAC,CAAE,MAAO,KAAI,CAChD,MAAO,GAAA6F,qBAAA,CAAChJ,uBAAuB,CAACmD,KAAK,CAAC,CAACrD,iBAAiB,CAAC,UAAAkJ,qBAAA,WAAjDA,qBAAA,CAAmD/G,QAAQ,CAACM,OAAO,CAAC,EAC9E,CAAC,CAAC,CACDb,GAAG,CAAEa,OAAO,eACXzF,IAAA,WAAsB2I,KAAK,CAAElD,OAAQ,CAAAwF,QAAA,CAClCxF,OAAO,EADGA,OAEL,CACT,CAAC,EACE,CAAC,EACN,CAAC,CAELvC,uBAAuB,CAACmD,KAAK,CAAC,EAAI,EAAA0E,sBAAA,CAAA7H,uBAAuB,CAACmD,KAAK,CAAC,CAACrD,iBAAiB,CAAC,UAAA+H,sBAAA,iBAAjDA,sBAAA,CAAmD/E,MAAM,EAAG,CAAC,cAC9FhG,IAAA,OAAIgL,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAC/C/H,uBAAuB,CAACmD,KAAK,CAAC,CAACrD,iBAAiB,CAAC,CAAC4B,GAAG,CAAEa,OAAO,eAC7DvF,KAAA,OAEE8K,SAAS,CAAC,kEAAkE,CAAAC,QAAA,eAE5EjL,IAAA,SAAAiL,QAAA,CAAOxF,OAAO,CAAO,CAAC,cACtBzF,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM9C,4BAA4B,CAAChD,KAAK,CAAErD,iBAAiB,CAAEyC,OAAO,CAAE,CAC/EuF,SAAS,CAAC,qCAAqC,CAAAC,QAAA,cAE/CjL,IAAA,CAACZ,MAAM,EAACiM,IAAI,CAAE,EAAG,CAAE,CAAC,CACd,CAAC,GATJ5F,OAUH,CACL,CAAC,CACA,CAAC,cAELvF,KAAA,QAAK8K,SAAS,CAAC,sDAAsD,CAAAC,QAAA,EAAC,6BACzC,CAACjI,iBAAiB,GAAK,KAAK,CAAG,mBAAmB,CAAG,QAAQA,iBAAiB,EAAE,CAAC,GAC9G,EAAK,CACN,EACE,CAAC,CAEV,CAAC,CAED;AACA,GAAI,CAACzB,UAAU,EAAIA,UAAU,CAACyE,MAAM,GAAK,CAAC,CAAE,CAC1C,mBACEhG,IAAA,QAAKgL,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAAC,uCAE/C,CAAK,CAAC,CAEV,CACA,mBACEjL,IAAA,QAAKgL,SAAS,CAAC,gGAAgG,CAAAC,QAAA,cAC7G/K,KAAA,QAAK8K,SAAS,CAAC,2FAA2F,CAAAC,QAAA,eAExG/K,KAAA,QAAK8K,SAAS,CAAC,gDAAgD,CAAAC,QAAA,eAC7DjL,IAAA,OAAIgL,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,8BAA4B,CAAI,CAAC,cACnE/K,KAAA,QAAK8K,SAAS,CAAC,6BAA6B,CAAAC,QAAA,EAEzCvI,SAAS,eACRxC,KAAA,CAAAE,SAAA,EAAA6K,QAAA,eACEjL,IAAA,WACEmM,OAAO,CAAE7D,kBAAmB,CAC5B0C,SAAS,CAAC,sFAAsF,CAChGoB,QAAQ,CAAExJ,QAAS,CAAAqI,QAAA,CACpB,eAED,CAAQ,CAAC,cACTjL,IAAA,WACEmM,OAAO,CAAElF,iBAAkB,CAC3B+D,SAAS,CAAE,+DACTpI,QAAQ,CAAG,aAAa,CAAG,+BAA+B,EACzD,CACHwJ,QAAQ,CAAExJ,QAAS,CAAAqI,QAAA,CAElBrI,QAAQ,cACP5C,IAAA,CAAAI,SAAA,EAAA6K,QAAA,CAAE,WAAS,CAAE,CAAC,cAEd/K,KAAA,CAAAE,SAAA,EAAA6K,QAAA,eACEjL,IAAA,CAACf,IAAI,EAACoM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,eAErC,EAAE,CACH,CACK,CAAC,EACT,CACH,cACDhL,IAAA,WAAQmM,OAAO,CAAE1K,OAAQ,CAACuJ,SAAS,CAAC,mCAAmC,CAAAC,QAAA,cACrEjL,IAAA,CAACX,CAAC,EAACgM,IAAI,CAAE,EAAG,CAAE,CAAC,CACT,CAAC,EACN,CAAC,EACH,CAAC,CAGLvI,WAAW,eACV5C,KAAA,QAAK8K,SAAS,CAAC,uHAAuH,CAAAC,QAAA,eACpIjL,IAAA,CAACN,KAAK,EAAC2L,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,8BAEtC,EAAK,CACN,cAGD9K,KAAA,CAACpB,IAAI,CAACoM,IAAI,EAACvC,KAAK,CAAEjH,SAAU,CAACyJ,aAAa,CAAExJ,YAAa,CAAAsJ,QAAA,eACvD/K,KAAA,CAACpB,IAAI,CAACuN,IAAI,EAACrB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAClCjL,IAAA,CAAClB,IAAI,CAACsM,OAAO,EACXzC,KAAK,CAAC,cAAc,CACpBqC,SAAS,CAAEnL,IAAI,CACb,+BAA+B,CAC/B6B,SAAS,GAAK,cAAc,CACxB,0CAA0C,CAC1C,mCACN,CAAE,CAAAuJ,QAAA,CACH,eAED,CAAc,CAAC,cACfjL,IAAA,CAAClB,IAAI,CAACsM,OAAO,EACXzC,KAAK,CAAC,YAAY,CAClBqC,SAAS,CAAEnL,IAAI,CACb,+BAA+B,CAC/B6B,SAAS,GAAK,YAAY,CACtB,0CAA0C,CAC1C,mCACN,CAAE,CAAAuJ,QAAA,CACH,YAED,CAAc,CAAC,cACfjL,IAAA,CAAClB,IAAI,CAACsM,OAAO,EACXzC,KAAK,CAAC,UAAU,CAChBqC,SAAS,CAAEnL,IAAI,CACb,+BAA+B,CAC/B6B,SAAS,GAAK,UAAU,CACpB,0CAA0C,CAC1C,mCACN,CAAE,CAAAuJ,QAAA,CACH,UAED,CAAc,CAAC,cACfjL,IAAA,CAAClB,IAAI,CAACsM,OAAO,EACXzC,KAAK,CAAC,YAAY,CAClBqC,SAAS,CAAEnL,IAAI,CACb,+BAA+B,CAC/B6B,SAAS,GAAK,YAAY,CACtB,0CAA0C,CAC1C,mCACN,CAAE,CAAAuJ,QAAA,CACH,wBAED,CAAc,CAAC,EACN,CAAC,cAGZ/K,KAAA,CAACpB,IAAI,CAAC2M,OAAO,EAAC9C,KAAK,CAAC,cAAc,CAACqC,SAAS,CAAC,KAAK,CAACsB,KAAK,CAAE,CAAEC,SAAS,CAAE,oBAAoB,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAvB,QAAA,eAC/G/K,KAAA,QAAK8K,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBjL,IAAA,OAAIgL,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,2BAAyB,CAAI,CAAC,cACvEjL,IAAA,MAAGgL,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,qGAE7B,CAAG,CAAC,EACD,CAAC,cAENjL,IAAA,CAACF,gBAAgB,EACfyB,UAAU,CAAEK,gBAAiB,CAC7B6K,QAAQ,CAAGC,YAAY,EAAK,CAC1B7K,mBAAmB,CAAC6K,YAAY,CAAC,CACjC/J,YAAY,CAAC,IAAI,CAAC,CACpB,CAAE,CACH,CAAC,EACU,CAAC,cAGf3C,IAAA,CAAClB,IAAI,CAAC2M,OAAO,EAAC9C,KAAK,CAAC,YAAY,CAACqC,SAAS,CAAC,yBAAyB,CAAAC,QAAA,cAClE/K,KAAA,QAAK8K,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE1B/K,KAAA,QAAK8K,SAAS,CAAC,oBAAoB,CAACsB,KAAK,CAAE,CAAEC,SAAS,CAAE,oBAAoB,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAvB,QAAA,eAChG/K,KAAA,QAAK8K,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDjL,IAAA,OAAIgL,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cAC/C/K,KAAA,WACEiM,OAAO,CAAE7C,kBAAmB,CAC5B0B,SAAS,CAAC,wEAAwE,CAAAC,QAAA,eAElFjL,IAAA,CAACd,IAAI,EAACmM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,UAErC,EAAQ,CAAC,EACN,CAAC,cAENhL,IAAA,OAAIgL,SAAS,CAAC,WAAW,CAAAC,QAAA,CACtBrJ,gBAAgB,CAACgD,GAAG,CAAEK,SAAS,eAC9B/E,KAAA,OAEE8K,SAAS,CAAEnL,IAAI,CACb,6EAA6E,CAC7EiC,iBAAiB,EAAIA,iBAAiB,CAAC2E,IAAI,GAAKxB,SAAS,CAACwB,IAAI,CAC1D,aAAa,CACb,mBACN,CAAE,CACF0F,OAAO,CAAEA,CAAA,GAAM5D,qBAAqB,CAACtD,SAAS,CAAE,CAAAgG,QAAA,eAEhD/K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,QAAKgL,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAEhG,SAAS,CAACwB,IAAI,CAAM,CAAC,cAC3DzG,IAAA,QAAKgL,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAEhG,SAAS,CAACH,QAAQ,CAAM,CAAC,EAC9D,CAAC,cACN9E,IAAA,WACEmM,OAAO,CAAG3H,CAAC,EAAK,CACdA,CAAC,CAACmI,eAAe,CAAC,CAAC,CACnBnC,aAAa,CAAC,WAAW,CAAEvF,SAAS,CAAC,CACvC,CAAE,CACF+F,SAAS,CAAC,uEAAuE,CAAAC,QAAA,cAEjFjL,IAAA,CAACZ,MAAM,EAACiM,IAAI,CAAE,EAAG,CAAE,CAAC,CACd,CAAC,GArBJpG,SAAS,CAACwB,IAsBb,CACL,CAAC,CACA,CAAC,EACF,CAAC,cAGNzG,IAAA,QAAKgL,SAAS,CAAC,WAAW,CAACsB,KAAK,CAAE,CAAEC,SAAS,CAAE,oBAAoB,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAvB,QAAA,CACtFnJ,iBAAiB,cAChB5B,KAAA,QAAK8K,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB/K,KAAA,QAAK8K,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eAErC/K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,gBAEhE,CAAO,CAAC,cACRjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACXP,KAAK,CAAE7G,iBAAiB,CAAC2E,IAAK,CAC9BuF,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,MAAM,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CACtFqC,SAAS,CAAC,2HAA2H,CACtI,CAAC,EACC,CAAC,cAGN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,UAEhE,CAAO,CAAC,cACRjL,IAAA,WACE2I,KAAK,CAAE7G,iBAAiB,CAACgD,QAAS,CAClCkH,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,UAAU,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CAC1FqC,SAAS,CAAC,2HAA2H,CAAAC,QAAA,CAEpI7I,UAAU,CAACwC,GAAG,CAAEE,QAAQ,eACvB9E,IAAA,WAAuB2I,KAAK,CAAE7D,QAAS,CAAAmG,QAAA,CACpCnG,QAAQ,EADEA,QAEL,CACT,CAAC,CACI,CAAC,EACN,CAAC,EACH,CAAC,cAGN5E,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,cAEhE,CAAO,CAAC,cACRjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACXP,KAAK,CAAE7G,iBAAiB,CAAC+F,WAAY,CACrCmE,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,aAAa,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CAC7FqC,SAAS,CAAC,2HAA2H,CACtI,CAAC,cACFhL,IAAA,MAAGgL,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,8CAAwC,CAAG,CAAC,EACnF,CAAC,cAGN/K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,WAEhE,CAAO,CAAC,cACRjL,IAAA,QAAKgL,SAAS,CAAC,4CAA4C,CAAAC,QAAA,cACzDjL,IAAA,QAAKgL,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAClCnJ,iBAAiB,CAACoD,GAAG,CAACN,GAAG,CAAEM,GAAG,eAC7BhF,KAAA,SAEE8K,SAAS,CAAC,uEAAuE,CAAAC,QAAA,EAEhF/F,GAAG,cACJlF,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAS,UAAU,CAAG9K,iBAAiB,CAACoD,GAAG,CAACiD,MAAM,CAAC0C,CAAC,EAAIA,CAAC,GAAK3F,GAAG,CAAC,CAC/DsD,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,KAAK,CAAEmG,UAAU,CAAC,CACjE,CAAE,CACF5B,SAAS,CAAC,wCAAwC,CAAAC,QAAA,cAElDjL,IAAA,CAACX,CAAC,EAACgM,IAAI,CAAE,EAAG,CAAE,CAAC,CACT,CAAC,GAZJnG,GAaD,CACP,CAAC,CACC,CAAC,CACH,CAAC,cACNhF,KAAA,WACE8L,QAAQ,CAAGxH,CAAC,EAAK,CACf,GAAIA,CAAC,CAACyH,MAAM,CAACtD,KAAK,EAAI,CAAC7G,iBAAiB,CAACoD,GAAG,CAACC,QAAQ,CAACX,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACrE,KAAM,CAAAiE,UAAU,CAAG,CAAC,GAAG9K,iBAAiB,CAACoD,GAAG,CAAEV,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAC7DH,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,KAAK,CAAEmG,UAAU,CAAC,CACjE,CACApI,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAG,EAAE,CAAE;AACvB,CAAE,CACFqC,SAAS,CAAC,2HAA2H,CAAAC,QAAA,eAErIjL,IAAA,WAAQ2I,KAAK,CAAC,EAAE,CAAAsC,QAAA,CAAC,iBAAe,CAAQ,CAAC,CACxC3I,QAAQ,CAAC6F,MAAM,CAACjD,GAAG,EAAI,CAACpD,iBAAiB,CAACoD,GAAG,CAACC,QAAQ,CAACD,GAAG,CAAC,CAAC,CAACN,GAAG,CAAEM,GAAG,eACpElF,IAAA,WAAkB2I,KAAK,CAAEzD,GAAI,CAAA+F,QAAA,CAC1B/F,GAAG,EADOA,GAEL,CACT,CAAC,EACI,CAAC,EACN,CAAC,cAGNhF,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,cAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE7G,iBAAiB,CAAC4H,WAAY,CACrCsC,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,aAAa,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CAC7FkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,2HAA2H,CACtI,CAAC,EACC,CAAC,cAGN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,uBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE7G,iBAAiB,CAAC8H,oBAAoB,EAAI,EAAG,CACpDoC,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,sBAAsB,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CACtGkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,2HAA2H,CACtI,CAAC,EACC,CAAC,cAGN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,qBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE7G,iBAAiB,CAAC+H,kBAAkB,EAAI,EAAG,CAClDmC,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,oBAAoB,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CACpGkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,2HAA2H,CACtI,CAAC,EACC,CAAC,cAGN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,sBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE7G,iBAAiB,CAAC6H,mBAAmB,EAAI,EAAG,CACnDqC,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,qBAAqB,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CACrGkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,2HAA2H,CACtI,CAAC,EACC,CAAC,cAGN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,mBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE7G,iBAAiB,CAACkH,gBAAgB,EAAI,EAAG,CAChDgD,QAAQ,CAAGxH,CAAC,EAAKgE,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,kBAAkB,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CAClGkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,2HAA2H,CACtI,CAAC,EACC,CAAC,cAGN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,kBAEhE,CAAO,CAAC,cACRjL,IAAA,QAAKgL,SAAS,CAAC,4CAA4C,CAAAC,QAAA,cACzDjL,IAAA,QAAKgL,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAClCnJ,iBAAiB,CAACsE,MAAM,CAACxB,GAAG,CAAEyB,KAAK,eAClCnG,KAAA,SAEE8K,SAAS,CAAC,2EAA2E,CAAAC,QAAA,EAEpF5E,KAAK,cACNrG,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAW,aAAa,CAAGhL,iBAAiB,CAACsE,MAAM,CAAC+B,MAAM,CAACD,CAAC,EAAIA,CAAC,GAAK7B,KAAK,CAAC,CACvEmC,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,QAAQ,CAAEqG,aAAa,CAAC,CACvE,CAAE,CACF9B,SAAS,CAAC,4CAA4C,CAAAC,QAAA,cAEtDjL,IAAA,CAACX,CAAC,EAACgM,IAAI,CAAE,EAAG,CAAE,CAAC,CACT,CAAC,GAZJhF,KAaD,CACP,CAAC,CACC,CAAC,CACH,CAAC,cACNnG,KAAA,QAAK8K,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,mBAAmB,CAC/B/B,SAAS,CAAC,2HAA2H,CACrIgC,SAAS,CAAGxI,CAAC,EAAK,CAChB,GAAIA,CAAC,CAACyI,GAAG,GAAK,OAAO,EAAIzI,CAAC,CAACyH,MAAM,CAACtD,KAAK,EAAI,CAAC7G,iBAAiB,CAACsE,MAAM,CAACjB,QAAQ,CAACX,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CAC7F,KAAM,CAAAmE,aAAa,CAAG,CAAC,GAAGhL,iBAAiB,CAACsE,MAAM,CAAE5B,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CACnEH,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,QAAQ,CAAEqG,aAAa,CAAC,CACrEtI,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAG,EAAE,CACrB,CACF,CAAE,CACH,CAAC,cACF3I,IAAA,WACEmM,OAAO,CAAG3H,CAAC,EAAK,CACd,KAAM,CAAA0I,KAAK,CAAG1I,CAAC,CAACyH,MAAM,CAACkB,sBAAsB,CAC7C,GAAID,KAAK,CAACvE,KAAK,EAAI,CAAC7G,iBAAiB,CAACsE,MAAM,CAACjB,QAAQ,CAAC+H,KAAK,CAACvE,KAAK,CAAC,CAAE,CAClE,KAAM,CAAAmE,aAAa,CAAG,CAAC,GAAGhL,iBAAiB,CAACsE,MAAM,CAAE8G,KAAK,CAACvE,KAAK,CAAC,CAChEH,oBAAoB,CAAC1G,iBAAiB,CAAC2E,IAAI,CAAE,QAAQ,CAAEqG,aAAa,CAAC,CACrEI,KAAK,CAACvE,KAAK,CAAG,EAAE,CAClB,CACF,CAAE,CACFqC,SAAS,CAAC,mEAAmE,CAAAC,QAAA,CAC9E,KAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAEN/K,KAAA,QAAK8K,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBjL,IAAA,OAAIgL,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,mBAAiB,CAAI,CAAC,cAE/D/K,KAAA,CAACpB,IAAI,CAACoM,IAAI,EAACkC,YAAY,CAAEtL,iBAAiB,CAACsE,MAAM,CAAC,CAAC,CAAE,CAAC4E,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eACjFjL,IAAA,CAAClB,IAAI,CAACuN,IAAI,EAACrB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAC5CnJ,iBAAiB,CAACsE,MAAM,CAACxB,GAAG,CAAEyB,KAAK,eAClCnG,KAAA,CAACpB,IAAI,CAACsM,OAAO,EAEXzC,KAAK,CAAEtC,KAAM,CACb2E,SAAS,CAAEnL,IAAI,CACb,sCAAsC,CACtC,uEAAuE,CACvE,mEACF,CAAE,CAAAoL,QAAA,EAED5E,KAAK,CAAC,QACT,GATOA,KASO,CACf,CAAC,CACO,CAAC,CAEXvE,iBAAiB,CAACsE,MAAM,CAACxB,GAAG,CAAEyB,KAAK,eAClCrG,IAAA,CAAClB,IAAI,CAAC2M,OAAO,EAAa9C,KAAK,CAAEtC,KAAM,CAAC2E,SAAS,CAAC,KAAK,CAAAC,QAAA,CAEpDH,8BAA8B,CAACzE,KAAK,CAAC,EAFrBA,KAGL,CACf,CAAC,EACO,CAAC,EACT,CAAC,cAINnG,KAAA,QAAA+K,QAAA,eACEjL,IAAA,OAAIgL,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,6BAA2B,CAAI,CAAC,CAExEnJ,iBAAiB,EAAIA,iBAAiB,CAACwD,cAAc,eACpDpF,KAAA,QAAK8K,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,oCAEhE,CAAO,CAAC,cACR/K,KAAA,WACE8K,SAAS,CAAC,oDAAoD,CAC9DgB,QAAQ,CAAGxH,CAAC,EAAK,CACf,GAAIA,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAE,CAClB;AACAxG,0BAA0B,CAACqC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAC5C,CACF,CAAE,CACFA,KAAK,CAAEzG,uBAAuB,EAAI,EAAG,CAAA+I,QAAA,eAErCjL,IAAA,WAAQ2I,KAAK,CAAC,EAAE,CAAAsC,QAAA,CAAC,qBAAmB,CAAQ,CAAC,CAC5C1F,MAAM,CAACC,IAAI,CAAC1D,iBAAiB,CAACwD,cAAc,CAAC,CAACV,GAAG,CAACyI,IAAI,eACrDrN,IAAA,WAAmB2I,KAAK,CAAE0E,IAAK,CAAApC,QAAA,CAAEoC,IAAI,EAAxBA,IAAiC,CAC/C,CAAC,EACI,CAAC,EACN,CACN,CAEAnL,uBAAuB,eACtBhC,KAAA,QAAA+K,QAAA,eACE/K,KAAA,OAAI8K,SAAS,CAAC,0BAA0B,CAAAC,QAAA,EAAC,wBACjB,CAAC/I,uBAAuB,EAC5C,CAAC,CAGJ,CAACJ,iBAAiB,CAACgI,yBAAyB,EAAItB,oBAAoB,CACnE1G,iBAAiB,CAAC2E,IAAI,CACtB,2BAA2B,CAC3B,CAAC,CACH,CAAC,CAGA3E,iBAAiB,CAACgI,yBAAyB,EAC5ChI,iBAAiB,CAACgI,yBAAyB,CAAC5H,uBAAuB,CAAC,EACpEJ,iBAAiB,CAACgI,yBAAyB,CAAC5H,uBAAuB,CAAC,CAAC0C,GAAG,CAAC,CAAC0I,OAAO,CAAElD,KAAK,gBACtFlK,KAAA,QAAiB8K,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAC5D/K,KAAA,QAAK8K,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,eAAe,CAC3BpE,KAAK,CAAE2E,OAAO,CAACC,KAAK,EAAI,EAAG,CAC3BvB,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAgJ,eAAe,CAAG,CAAC,IAAI1L,iBAAiB,CAACgI,yBAAyB,EAAI,CAAC,CAAC,CAAC,CAAC,CAChF,KAAM,CAAA2D,eAAe,CAAG,CAAC,IAAID,eAAe,CAACtL,uBAAuB,CAAC,EAAI,EAAE,CAAC,CAAC,CAC7EuL,eAAe,CAACrD,KAAK,CAAC,CAACmD,KAAK,CAAG/I,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAE7C6E,eAAe,CAACtL,uBAAuB,CAAC,CAAGuL,eAAe,CAE1DjF,oBAAoB,CAClB1G,iBAAiB,CAAC2E,IAAI,CACtB,2BAA2B,CAC3B+G,eACF,CAAC,CACH,CAAE,CACFxC,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,eAAe,CAC3BpE,KAAK,CAAE2E,OAAO,CAACI,MAAM,EAAI,EAAG,CAC5B1B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAgJ,eAAe,CAAG,CAAC,IAAI1L,iBAAiB,CAACgI,yBAAyB,EAAI,CAAC,CAAC,CAAC,CAAC,CAChF,KAAM,CAAA2D,eAAe,CAAG,CAAC,IAAID,eAAe,CAACtL,uBAAuB,CAAC,EAAI,EAAE,CAAC,CAAC,CAC7EuL,eAAe,CAACrD,KAAK,CAAC,CAACsD,MAAM,CAAGlJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAE9C6E,eAAe,CAACtL,uBAAuB,CAAC,CAAGuL,eAAe,CAE1DjF,oBAAoB,CAClB1G,iBAAiB,CAAC2E,IAAI,CACtB,2BAA2B,CAC3B+G,eACF,CAAC,CACH,CAAE,CACFxC,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,aACE+M,WAAW,CAAC,qBAAqB,CACjCpE,KAAK,CAAE2E,OAAO,CAACK,QAAQ,EAAI,EAAG,CAC9B3B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAgJ,eAAe,CAAG,CAAC,IAAI1L,iBAAiB,CAACgI,yBAAyB,EAAI,CAAC,CAAC,CAAC,CAAC,CAChF,KAAM,CAAA2D,eAAe,CAAG,CAAC,IAAID,eAAe,CAACtL,uBAAuB,CAAC,EAAI,EAAE,CAAC,CAAC,CAC7EuL,eAAe,CAACrD,KAAK,CAAC,CAACuD,QAAQ,CAAGnJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAEhD6E,eAAe,CAACtL,uBAAuB,CAAC,CAAGuL,eAAe,CAE1DjF,oBAAoB,CAClB1G,iBAAiB,CAAC2E,IAAI,CACtB,2BAA2B,CAC3B+G,eACF,CAAC,CACH,CAAE,CACFX,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,gBAAgB,CAC5BpE,KAAK,CAAE2E,OAAO,CAACM,GAAG,EAAI,EAAG,CACzB5B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAgJ,eAAe,CAAG,CAAC,IAAI1L,iBAAiB,CAACgI,yBAAyB,EAAI,CAAC,CAAC,CAAC,CAAC,CAChF,KAAM,CAAA2D,eAAe,CAAG,CAAC,IAAID,eAAe,CAACtL,uBAAuB,CAAC,EAAI,EAAE,CAAC,CAAC,CAC7EuL,eAAe,CAACrD,KAAK,CAAC,CAACwD,GAAG,CAAGpJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAE3C6E,eAAe,CAACtL,uBAAuB,CAAC,CAAGuL,eAAe,CAE1DjF,oBAAoB,CAClB1G,iBAAiB,CAAC2E,IAAI,CACtB,2BAA2B,CAC3B+G,eACF,CAAC,CACH,CAAE,CACFxC,SAAS,CAAC,4DAA4D,CACvE,CAAC,EACC,CAAC,cAENhL,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAqB,eAAe,CAAG,CAAC,IAAI1L,iBAAiB,CAACgI,yBAAyB,EAAI,CAAC,CAAC,CAAC,CAAC,CAChF,KAAM,CAAA2D,eAAe,CAAG,CAAC,IAAID,eAAe,CAACtL,uBAAuB,CAAC,EAAI,EAAE,CAAC,CAAC,CAC7EuL,eAAe,CAACI,MAAM,CAACzD,KAAK,CAAE,CAAC,CAAC,CAEhCoD,eAAe,CAACtL,uBAAuB,CAAC,CAAGuL,eAAe,CAE1DjF,oBAAoB,CAClB1G,iBAAiB,CAAC2E,IAAI,CACtB,2BAA2B,CAC3B+G,eACF,CAAC,CACH,CAAE,CACFxC,SAAS,CAAC,8EAA8E,CAAAC,QAAA,cAExFjL,IAAA,CAACX,CAAC,EAACgM,IAAI,CAAE,EAAG,CAAE,CAAC,CACT,CAAC,GApGDjB,KAqGL,CACN,CAAC,cAEFlK,KAAA,WACEiM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAqB,eAAe,CAAG,CAAC,IAAI1L,iBAAiB,CAACgI,yBAAyB,EAAI,CAAC,CAAC,CAAC,CAAC,CAChF,KAAM,CAAA2D,eAAe,CAAG,CAAC,IAAID,eAAe,CAACtL,uBAAuB,CAAC,EAAI,EAAE,CAAC,CAAE,CAAEqL,KAAK,CAAE,EAAE,CAAEG,MAAM,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAE,CAAEC,GAAG,CAAE,EAAG,CAAC,CAAC,CAE/HJ,eAAe,CAACtL,uBAAuB,CAAC,CAAGuL,eAAe,CAE1DjF,oBAAoB,CAClB1G,iBAAiB,CAAC2E,IAAI,CACtB,2BAA2B,CAC3B+G,eACF,CAAC,CACH,CAAE,CACFxC,SAAS,CAAC,iHAAiH,CAAAC,QAAA,eAE3HjL,IAAA,CAACd,IAAI,EAACmM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,uBAErC,EAAQ,CAAC,EACN,CACN,CAEA,CAAC9I,uBAAuB,EAAIJ,iBAAiB,eAC5C9B,IAAA,QAAKgL,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,2EAEtC,CAAK,CACN,EACE,CAAC,cACN/K,KAAA,QAAK8K,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBjL,IAAA,OAAIgL,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,iBAAe,CAAI,CAAC,CAE5D1F,MAAM,CAACC,IAAI,CAAC1D,iBAAiB,CAACwD,cAAc,EAAI,CAAC,CAAC,CAAC,CAACU,MAAM,CAAG,CAAC,cAC7DhG,IAAA,QAAKgL,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvB1F,MAAM,CAACC,IAAI,CAAC1D,iBAAiB,CAACwD,cAAc,CAAC,CAACV,GAAG,CAAEkE,WAAW,eAC7D5I,KAAA,QAAuB8K,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eACjEjL,IAAA,OAAIgL,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAEnC,WAAW,CAAK,CAAC,cAE3D9I,IAAA,QAAKgL,SAAS,CAAC,WAAW,CAAAC,QAAA,cAIxB/K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,8BAEhE,CAAO,CAAC,CAEPnJ,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,EAC7DlF,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,CAACpC,GAAG,CAAC,CAAC0I,OAAO,CAAElD,KAAK,gBAClFlK,KAAA,QAAiB8K,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAC9C/K,KAAA,QAAK8K,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,eAAe,CAC3BpE,KAAK,CAAE2E,OAAO,CAACC,KAAK,EAAI,EAAG,CAC3BvB,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG3L,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,CAAC,CAC3FyG,eAAe,CAACrD,KAAK,CAAC,CAACmD,KAAK,CAAG/I,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAC7CE,mBAAmB,CACjB/G,iBAAiB,CAAC2E,IAAI,CACtBqC,WAAW,CACX,kBAAkB,CAClB2E,eACF,CAAC,CACH,CAAE,CACFzC,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,eAAe,CAC3BpE,KAAK,CAAE2E,OAAO,CAACI,MAAM,EAAI,EAAG,CAC5B1B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG3L,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,CAAC,CAC3FyG,eAAe,CAACrD,KAAK,CAAC,CAACsD,MAAM,CAAGlJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAC9CE,mBAAmB,CACjB/G,iBAAiB,CAAC2E,IAAI,CACtBqC,WAAW,CACX,kBAAkB,CAClB2E,eACF,CAAC,CACH,CAAE,CACFzC,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,aACE+M,WAAW,CAAC,qBAAqB,CACjCpE,KAAK,CAAE2E,OAAO,CAACK,QAAQ,EAAI,EAAG,CAC9B3B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG3L,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,CAAC,CAC3FyG,eAAe,CAACrD,KAAK,CAAC,CAACuD,QAAQ,CAAGnJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAChDE,mBAAmB,CACjB/G,iBAAiB,CAAC2E,IAAI,CACtBqC,WAAW,CACX,kBAAkB,CAClB2E,eACF,CAAC,CACH,CAAE,CACFZ,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,gBAAgB,CAC5BpE,KAAK,CAAE2E,OAAO,CAACM,GAAG,EAAI,EAAG,CACzB5B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG3L,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,CAAC,CAC3FyG,eAAe,CAACrD,KAAK,CAAC,CAACwD,GAAG,CAAGpJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAC3CE,mBAAmB,CACjB/G,iBAAiB,CAAC2E,IAAI,CACtBqC,WAAW,CACX,kBAAkB,CAClB2E,eACF,CAAC,CACH,CAAE,CACFzC,SAAS,CAAC,4DAA4D,CACvE,CAAC,EACC,CAAC,cAENhL,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAsB,eAAe,CAAG,CAAC,GAAG3L,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,CAAC,CAC3FyG,eAAe,CAACI,MAAM,CAACzD,KAAK,CAAE,CAAC,CAAC,CAChCvB,mBAAmB,CACjB/G,iBAAiB,CAAC2E,IAAI,CACtBqC,WAAW,CACX,kBAAkB,CAClB2E,eACF,CAAC,CACH,CAAE,CACFzC,SAAS,CAAC,8EAA8E,CAAAC,QAAA,cAExFjL,IAAA,CAACX,CAAC,EAACgM,IAAI,CAAE,EAAG,CAAE,CAAC,CACT,CAAC,GArFDjB,KAsFL,CACN,CAAC,cAEFlK,KAAA,WACEiM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAA2B,eAAe,CAAGhM,iBAAiB,CAACwD,cAAc,CAACwD,WAAW,CAAC,CAAC9B,gBAAgB,EAAI,EAAE,CAC5F,KAAM,CAAAyG,eAAe,CAAG,CAAC,GAAGK,eAAe,CAAE,CAAEP,KAAK,CAAE,EAAE,CAAEG,MAAM,CAAE,EAAE,CAAEE,GAAG,CAAE,EAAG,CAAC,CAAC,CAChF/E,mBAAmB,CACjB/G,iBAAiB,CAAC2E,IAAI,CACtBqC,WAAW,CACX,kBAAkB,CAClB2E,eACF,CAAC,CACH,CAAE,CACFzC,SAAS,CAAC,iHAAiH,CAAAC,QAAA,eAE3HjL,IAAA,CAACd,IAAI,EAACmM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,uBAErC,EAAQ,CAAC,EACN,CAAC,CACH,CAAC,GAxHElC,WAyHL,CACN,CAAC,CACC,CAAC,cAEN9I,IAAA,MAAGgL,SAAS,CAAC,8BAA8B,CAAAC,QAAA,CAAC,6DAE5C,CAAG,CACJ,EACE,CAAC,EACH,CAAC,cAENjL,IAAA,QAAKgL,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAAC,gDAEjD,CAAK,CACN,CACE,CAAC,EACH,CAAC,CACM,CAAC,cAGf/K,KAAA,CAACpB,IAAI,CAAC2M,OAAO,EAAC9C,KAAK,CAAC,UAAU,CAACqC,SAAS,CAAC,KAAK,CAACsB,KAAK,CAAE,CAAEC,SAAS,CAAE,oBAAoB,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAvB,QAAA,eAC3G/K,KAAA,QAAK8K,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDjL,IAAA,OAAIgL,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,iBAAe,CAAI,CAAC,cACxD/K,KAAA,WACEiM,OAAO,CAAElC,gBAAiB,CAC1Be,SAAS,CAAC,2FAA2F,CAAAC,QAAA,eAErGjL,IAAA,CAACd,IAAI,EAACmM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,kBAErC,EAAQ,CAAC,EACN,CAAC,cAENhL,IAAA,QAAKgL,SAAS,CAAC,sDAAsD,CAAAC,QAAA,CAClEzI,WAAW,CAACoC,GAAG,CAAEa,OAAO,OAAAsI,kBAAA,CAAAC,qBAAA,oBACvB9N,KAAA,QAAmB8K,SAAS,CAAC,8CAA8C,CAAAC,QAAA,eAC3E/K,KAAA,QAAK8K,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC/CjL,IAAA,OAAIgL,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAExF,OAAO,CAAK,CAAC,cAClDvF,KAAA,QAAK8K,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BjL,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAMzF,iBAAiB,CAACjB,OAAO,CAAE,CAC1CuF,SAAS,CAAC,yEAAyE,CACnFuC,KAAK,CAAC,sBAAsB,CAAAtC,QAAA,cAE5BjL,IAAA,CAACb,IAAI,EAACkM,IAAI,CAAE,EAAG,CAAE,CAAC,CACZ,CAAC,cACTrL,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM3B,aAAa,CAAC,SAAS,CAAE/E,OAAO,CAAE,CACjDuF,SAAS,CAAC,uEAAuE,CACjFuC,KAAK,CAAC,gBAAgB,CAAAtC,QAAA,cAEtBjL,IAAA,CAACZ,MAAM,EAACiM,IAAI,CAAE,EAAG,CAAE,CAAC,CACd,CAAC,EACN,CAAC,EACH,CAAC,CAEL,EAAA0C,kBAAA,CAAAnM,gBAAgB,CAAC,CAAC,CAAC,UAAAmM,kBAAA,kBAAAC,qBAAA,CAAnBD,kBAAA,CAAqBzI,cAAc,UAAA0I,qBAAA,iBAAnCA,qBAAA,CAAsCvI,OAAO,CAAC,gBAC7CvF,KAAA,QAAK8K,SAAS,CAAC,sCAAsC,CAAAC,QAAA,eACnD/K,KAAA,QAAK8K,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjL,IAAA,SAAMgL,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,SAAO,CAAM,CAAC,CAC3CrJ,gBAAgB,CAAC,CAAC,CAAC,CAAC0D,cAAc,CAACG,OAAO,CAAC,CAACkB,KAAK,EAC/C,CAAC,cACNzG,KAAA,QAAK8K,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjL,IAAA,SAAMgL,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,cAAY,CAAM,CAAC,CAChDrJ,gBAAgB,CAACuG,MAAM,CAACtD,CAAC,EACxBU,MAAM,CAAC0I,MAAM,CAACpJ,CAAC,CAACyB,QAAQ,EAAI,CAAC,CAAC,CAAC,CAAC4H,IAAI,CAAC5H,QAAQ,EAC3CA,QAAQ,CAACnB,QAAQ,CAACM,OAAO,CAAC,EAAIa,QAAQ,CAACnB,QAAQ,CAAC,GAAGM,OAAO,kBAAkB,CAC9E,CACF,CAAC,CAACO,MAAM,CAAC,aACX,EAAK,CAAC,EACH,CACN,GApCSP,OAqCP,CAAC,EACL,CAAC,CACC,CAAC,EACM,CAAC,cAGfzF,IAAA,CAAClB,IAAI,CAAC2M,OAAO,EAAC9C,KAAK,CAAC,YAAY,CAACqC,SAAS,CAAC,KAAK,CAACsB,KAAK,CAAE,CAAEC,SAAS,CAAE,oBAAoB,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAvB,QAAA,cAC7G/K,KAAA,QAAK8K,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eAEpD/K,KAAA,QAAA+K,QAAA,eACE/K,KAAA,QAAK8K,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDjL,IAAA,OAAIgL,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,cACnD/K,KAAA,WACEiM,OAAO,CAAEpC,iBAAkB,CAC3BiB,SAAS,CAAC,2FAA2F,CAAAC,QAAA,eAErGjL,IAAA,CAACd,IAAI,EAACmM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,eAErC,EAAQ,CAAC,EACN,CAAC,cAENhL,IAAA,QAAKgL,SAAS,CAAC,mCAAmC,CAAAC,QAAA,cAChDjL,IAAA,OAAIgL,SAAS,CAAC,WAAW,CAAAC,QAAA,CACtB7I,UAAU,CAACwC,GAAG,CAAEE,QAAQ,eACvB5E,KAAA,OAEE8K,SAAS,CAAC,0EAA0E,CAAAC,QAAA,eAEpFjL,IAAA,SAAAiL,QAAA,CAAOnG,QAAQ,CAAO,CAAC,cACvB5E,KAAA,QAAK8K,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC/K,KAAA,QAAK8K,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EACxCrJ,gBAAgB,CAACuG,MAAM,CAACtD,CAAC,EAAIA,CAAC,CAACC,QAAQ,GAAKA,QAAQ,CAAC,CAACkB,MAAM,CAAC,aAChE,EAAK,CAAC,CACLlB,QAAQ,GAAK,KAAK,eACjB9E,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM3B,aAAa,CAAC,UAAU,CAAE1F,QAAQ,CAAE,CACnDkG,SAAS,CAAC,uEAAuE,CACjFuC,KAAK,CAAC,iBAAiB,CAAAtC,QAAA,cAEvBjL,IAAA,CAACZ,MAAM,EAACiM,IAAI,CAAE,EAAG,CAAE,CAAC,CACd,CACT,EACE,CAAC,GAjBDvG,QAkBH,CACL,CAAC,CACA,CAAC,CACF,CAAC,EACH,CAAC,cAGN5E,KAAA,QAAA+K,QAAA,eACE/K,KAAA,QAAK8K,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDjL,IAAA,OAAIgL,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,WAAS,CAAI,CAAC,cAClD/K,KAAA,WACEiM,OAAO,CAAEnC,gBAAiB,CAC1BgB,SAAS,CAAC,2FAA2F,CAAAC,QAAA,eAErGjL,IAAA,CAACd,IAAI,EAACmM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,eAErC,EAAQ,CAAC,EACN,CAAC,cAENhL,IAAA,QAAKgL,SAAS,CAAC,mCAAmC,CAAAC,QAAA,cAChDjL,IAAA,OAAIgL,SAAS,CAAC,WAAW,CAAAC,QAAA,CACtB3I,QAAQ,CAACsC,GAAG,CAAEuJ,OAAO,eACpBjO,KAAA,OAEE8K,SAAS,CAAC,0EAA0E,CAAAC,QAAA,eAEpFjL,IAAA,SAAAiL,QAAA,CAAOkD,OAAO,CAAO,CAAC,cACtBjO,KAAA,QAAK8K,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC/K,KAAA,QAAK8K,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EACxCrJ,gBAAgB,CAACuG,MAAM,CAACtD,CAAC,EAAIA,CAAC,CAACK,GAAG,CAACC,QAAQ,CAACgJ,OAAO,CAAC,CAAC,CAACnI,MAAM,CAAC,aAChE,EAAK,CAAC,CACLmI,OAAO,GAAK,KAAK,eAChBnO,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM3B,aAAa,CAAC,SAAS,CAAE2D,OAAO,CAAE,CACjDnD,SAAS,CAAC,uEAAuE,CACjFuC,KAAK,CAAC,iBAAiB,CAAAtC,QAAA,cAEvBjL,IAAA,CAACZ,MAAM,EAACiM,IAAI,CAAE,EAAG,CAAE,CAAC,CACd,CACT,EACE,CAAC,GAjBD8C,OAkBH,CACL,CAAC,CACA,CAAC,CACF,CAAC,EACH,CAAC,EACH,CAAC,CACM,CAAC,EACN,CAAC,cAGZnO,IAAA,CAACjB,MAAM,CAACmM,IAAI,EAACkD,IAAI,CAAE5K,YAAa,CAAC6K,YAAY,CAAE5K,eAAgB,CAAAwH,QAAA,cAC7D/K,KAAA,CAACnB,MAAM,CAACyM,MAAM,EAAAP,QAAA,eACZjL,IAAA,CAACjB,MAAM,CAACuP,OAAO,EAACtD,SAAS,CAAC,gCAAgC,CAAE,CAAC,cAC7D9K,KAAA,CAACnB,MAAM,CAAC0M,OAAO,EAACT,SAAS,CAAC,6HAA6H,CAAAC,QAAA,eACvJ/K,KAAA,CAACnB,MAAM,CAACwP,KAAK,EAACvD,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EACjDvH,SAAS,GAAK,WAAW,EAAI,mBAAmB,CAChDA,SAAS,GAAK,UAAU,EAAI,kBAAkB,CAC9CA,SAAS,GAAK,SAAS,EAAI,kBAAkB,CAC7CA,SAAS,GAAK,SAAS,GAAK1B,gBAAgB,CAAG,iBAAiBA,gBAAgB,EAAE,CAAG,iBAAiB,CAAC,EAC5F,CAAC,cAGb9B,KAAA,QAAK8K,SAAS,CAAC,WAAW,CAAAC,QAAA,EACvBvH,SAAS,GAAK,WAAW,eACxBxD,KAAA,CAAAE,SAAA,EAAA6K,QAAA,eACE/K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,gBAEhE,CAAO,CAAC,cACRjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACXP,KAAK,CAAE/E,WAAW,CAAC6C,IAAI,EAAI,EAAG,CAC9BuF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE6C,IAAI,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACxEqC,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cACN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,sBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAAC+F,mBAAmB,EAAI,EAAG,CAC7CqC,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE+F,mBAAmB,CAAEnF,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACvFkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,mBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAACoF,gBAAgB,EAAI,EAAG,CAC1CgD,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoF,gBAAgB,CAAExE,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACpFkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cACN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,UAEhE,CAAO,CAAC,cACRjL,IAAA,WACE2I,KAAK,CAAE/E,WAAW,CAACkB,QAAQ,EAAI,EAAG,CAClCkH,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEkB,QAAQ,CAAEN,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CAC5EqC,SAAS,CAAC,oDAAoD,CAAAC,QAAA,CAE7D7I,UAAU,CAACwC,GAAG,CAAEE,QAAQ,eACvB9E,IAAA,WAAuB2I,KAAK,CAAE7D,QAAS,CAAAmG,QAAA,CACpCnG,QAAQ,EADEA,QAEL,CACT,CAAC,CACI,CAAC,EACN,CAAC,cACN5E,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,kBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAAC8F,WAAW,EAAI,EAAG,CACrCsC,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE8F,WAAW,CAAElF,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CAC/EkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,uBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAACgG,oBAAoB,EAAI,EAAG,CAC9CoC,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEgG,oBAAoB,CAAEpF,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACxFkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,qBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAACiG,kBAAkB,EAAI,EAAG,CAC5CmC,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEiG,kBAAkB,CAAErF,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACtFkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,EACN,CACH,CAEAtH,SAAS,GAAK,UAAU,eACvBxD,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,eAEhE,CAAO,CAAC,cACRjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACXP,KAAK,CAAE/E,WAAW,CAAC6C,IAAI,EAAI,EAAG,CAC9BuF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE6C,IAAI,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACxEqC,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CACN,CAEAtH,SAAS,GAAK,SAAS,eACtBxD,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,eAEhE,CAAO,CAAC,cACRjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACXP,KAAK,CAAE/E,WAAW,CAAC6C,IAAI,EAAI,EAAG,CAC9BuF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE6C,IAAI,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACxEqC,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CACN,CAEAtH,SAAS,GAAK,SAAS,eACtBxD,KAAA,CAAAE,SAAA,EAAA6K,QAAA,eACE/K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,cAEhE,CAAO,CAAC,cACRjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACXP,KAAK,CAAE/E,WAAW,CAAC6C,IAAI,EAAI,EAAG,CAC9BuF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE6C,IAAI,CAAEjC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACxEqC,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,oBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAAC+C,KAAK,EAAI,EAAG,CAC/BqF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE+C,KAAK,CAAEnC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACzEkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,sBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAACgD,SAAS,EAAI,EAAG,CACnCoF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEgD,SAAS,CAAEpC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CAC7EkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,mBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAACoF,gBAAgB,EAAIpF,WAAW,CAACgD,SAAS,EAAI,EAAG,CACnEoF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoF,gBAAgB,CAAExE,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CACpFkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,uBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAACiD,WAAW,EAAI,EAAG,CACrCmF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEiD,WAAW,CAAErC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CAC/EkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAEN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,oBAEhE,CAAO,CAAC,cACRjL,IAAA,aACE2I,KAAK,CAAE/E,WAAW,CAACkD,SAAS,EAAI,EAAG,CACnCkF,QAAQ,CAAGxH,CAAC,EAAKX,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEkD,SAAS,CAAEtC,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAAC,CAAE,CAC7EkE,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,oDAAoD,CAC/D,CAAC,EACC,CAAC,cAGN9K,KAAA,QAAA+K,QAAA,eACEjL,IAAA,UAAOgL,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,8BAEhE,CAAO,CAAC,CAEPrH,WAAW,CAACoD,gBAAgB,EAAIpD,WAAW,CAACoD,gBAAgB,CAACpC,GAAG,CAAC,CAAC0I,OAAO,CAAElD,KAAK,gBAC/ElK,KAAA,QAAiB8K,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAC9C/K,KAAA,QAAK8K,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCjL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,eAAe,CAC3BpE,KAAK,CAAE2E,OAAO,CAACC,KAAK,EAAI,EAAG,CAC3BvB,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG7J,WAAW,CAACoD,gBAAgB,CAAC,CACzDyG,eAAe,CAACrD,KAAK,CAAC,CAACmD,KAAK,CAAG/I,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAC7C9E,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoD,gBAAgB,CAAEyG,eAAe,CAAC,CAAC,CACrE,CAAE,CACFzC,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,eAAe,CAC3BpE,KAAK,CAAE2E,OAAO,CAACI,MAAM,EAAI,EAAG,CAC5B1B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG7J,WAAW,CAACoD,gBAAgB,CAAC,CACzDyG,eAAe,CAACrD,KAAK,CAAC,CAACsD,MAAM,CAAGlJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAC9C9E,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoD,gBAAgB,CAAEyG,eAAe,CAAC,CAAC,CACrE,CAAE,CACFzC,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,aACE+M,WAAW,CAAC,qBAAqB,CACjCpE,KAAK,CAAE2E,OAAO,CAACK,QAAQ,EAAI,EAAG,CAC9B3B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG7J,WAAW,CAACoD,gBAAgB,CAAC,CACzDyG,eAAe,CAACrD,KAAK,CAAC,CAACuD,QAAQ,CAAGnJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAChD9E,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoD,gBAAgB,CAAEyG,eAAe,CAAC,CAAC,CACrE,CAAE,CACFZ,IAAI,CAAE,CAAE,CACR7B,SAAS,CAAC,4DAA4D,CACvE,CAAC,cAEFhL,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACX6D,WAAW,CAAC,gBAAgB,CAC5BpE,KAAK,CAAE2E,OAAO,CAACM,GAAG,EAAI,EAAG,CACzB5B,QAAQ,CAAGxH,CAAC,EAAK,CACf,KAAM,CAAAiJ,eAAe,CAAG,CAAC,GAAG7J,WAAW,CAACoD,gBAAgB,CAAC,CACzDyG,eAAe,CAACrD,KAAK,CAAC,CAACwD,GAAG,CAAGpJ,CAAC,CAACyH,MAAM,CAACtD,KAAK,CAC3C9E,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoD,gBAAgB,CAAEyG,eAAe,CAAC,CAAC,CACrE,CAAE,CACFzC,SAAS,CAAC,4DAA4D,CACvE,CAAC,EACC,CAAC,cAENhL,IAAA,WACEmM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAsB,eAAe,CAAG,CAAC,GAAG7J,WAAW,CAACoD,gBAAgB,CAAC,CACzDyG,eAAe,CAACI,MAAM,CAACzD,KAAK,CAAE,CAAC,CAAC,CAChCvG,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoD,gBAAgB,CAAEyG,eAAe,CAAC,CAAC,CACrE,CAAE,CACFzC,SAAS,CAAC,8EAA8E,CAAAC,QAAA,cAExFjL,IAAA,CAACX,CAAC,EAACgM,IAAI,CAAE,EAAG,CAAE,CAAC,CACT,CAAC,GA5DDjB,KA6DL,CACN,CAAC,cAEFlK,KAAA,WACEiM,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAsB,eAAe,CAAG,CAAC,IAAI7J,WAAW,CAACoD,gBAAgB,EAAI,EAAE,CAAC,CAAE,CAAEuG,KAAK,CAAE,EAAE,CAAEG,MAAM,CAAE,EAAE,CAAEE,GAAG,CAAE,EAAG,CAAC,CAAC,CACrG/J,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEoD,gBAAgB,CAAEyG,eAAe,CAAC,CAAC,CACrE,CAAE,CACFzC,SAAS,CAAC,iHAAiH,CAAAC,QAAA,eAE3HjL,IAAA,CAACd,IAAI,EAACmM,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,uBAErC,EAAQ,CAAC,EACN,CAAC,EACN,CACH,EACE,CAAC,cAEN9K,KAAA,QAAK8K,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC9CjL,IAAA,CAACjB,MAAM,CAACyP,KAAK,EAACC,OAAO,MAAAxD,QAAA,cACnBjL,IAAA,WAAQgL,SAAS,CAAC,sFAAsF,CAAAC,QAAA,CAAC,QAEzG,CAAQ,CAAC,CACG,CAAC,cAEfjL,IAAA,WACEmM,OAAO,CAAEjC,mBAAoB,CAC7BkC,QAAQ,CAAE,CAACxI,WAAW,CAAC6C,IAAK,CAC5BuE,SAAS,CAAE,6CACTpH,WAAW,CAAC6C,IAAI,CAAG,+BAA+B,CAAG,gCAAgC,EACpF,CAAAwE,QAAA,CAEFjJ,gBAAgB,CAAG,cAAc,CAAG,KAAK,CACpC,CAAC,EACN,CAAC,EACQ,CAAC,EACJ,CAAC,CACL,CAAC,cAGdhC,IAAA,CAACjB,MAAM,CAACmM,IAAI,EAACkD,IAAI,CAAEhL,eAAgB,CAACiL,YAAY,CAAEhL,kBAAmB,CAAA4H,QAAA,cACnE/K,KAAA,CAACnB,MAAM,CAACyM,MAAM,EAAAP,QAAA,eACZjL,IAAA,CAACjB,MAAM,CAACuP,OAAO,EAACtD,SAAS,CAAC,gCAAgC,CAAE,CAAC,cAC7D9K,KAAA,CAACnB,MAAM,CAAC0M,OAAO,EAACT,SAAS,CAAC,6HAA6H,CAAAC,QAAA,eACrJ/K,KAAA,CAACnB,MAAM,CAACwP,KAAK,EAACvD,SAAS,CAAC,2DAA2D,CAAAC,QAAA,eACjFjL,IAAA,CAACR,aAAa,EAAC6L,IAAI,CAAE,EAAG,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,mBAE9C,EAAc,CAAC,cAEf9K,KAAA,CAACnB,MAAM,CAAC2P,WAAW,EAAC1D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAC/C,CAAA3H,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE4F,IAAI,IAAK,WAAW,EACjC,kDAAkD5F,YAAY,CAACmH,IAAI,CAAChE,IAAI,kCAAkC,CAE3G,CAAAnD,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAE4F,IAAI,IAAK,SAAS,EAC/B,gDAAgD5F,YAAY,CAACmH,IAAI,2FAA2F,EAC5I,CAAC,cAErBvK,KAAA,QAAK8K,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC9CjL,IAAA,CAACjB,MAAM,CAACyP,KAAK,EAACC,OAAO,MAAAxD,QAAA,cACnBjL,IAAA,WAAQgL,SAAS,CAAC,sFAAsF,CAAAC,QAAA,CAAC,QAEzG,CAAQ,CAAC,CACG,CAAC,cAEfjL,IAAA,WACEmM,OAAO,CAAEzB,YAAa,CACtBM,SAAS,CAAC,uEAAuE,CAAAC,QAAA,CAClF,QAED,CAAQ,CAAC,EACN,CAAC,EACQ,CAAC,EACJ,CAAC,CACL,CAAC,EACX,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAA5J,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}