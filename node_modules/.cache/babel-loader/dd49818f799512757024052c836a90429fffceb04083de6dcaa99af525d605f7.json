{"ast":null,"code":"import React,{useState,useEffect}from'react';import*as Tabs from'@radix-ui/react-tabs';import*as Dialog from'@radix-ui/react-dialog';import*as Select from'@radix-ui/react-select';import{Save,Plus,Edit,Trash2,X,ChevronDown,Info,AlertTriangle,Lock,Check,User,Filter}from'lucide-react';import clsx from'clsx';import DataImportExport from'./DataImportExport';// Patient Types definition\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PATIENT_TYPES={'all':'All Patient Types','1':'Type 1: Healthy','2':'Type 2: Mild inflammation, moderate risk','3':'Type 3: Smoker, diabetic, immunocompromised','4':'Type 4: Periodontal disease, chronic illness, poor healing'};// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend=async data=>{// Simulate API call\nreturn new Promise(resolve=>{setTimeout(()=>{console.log('Data saved:',data);localStorage.setItem('conditions_data',JSON.stringify(data));resolve({success:true});},1500);});};function AdminPanel(_ref){let{conditions,onConditionsUpdate,onClose}=_ref;const[activeTab,setActiveTab]=useState('conditions');const[editedConditions,setEditedConditions]=useState([]);const[selectedCondition,setSelectedCondition]=useState(null);const[editingProductId,setEditingProductId]=useState(null);const[categories,setCategories]=useState([]);const[ddsTypes,setDdsTypes]=useState([]);const[allProducts,setAllProducts]=useState([]);const[isEditing,setIsEditing]=useState(false);const[isSaving,setIsSaving]=useState(false);const[showSuccess,setShowSuccess]=useState(false);// Patient-specific products configuration\nconst[activePatientType,setActivePatientType]=useState('all');const[patientSpecificProducts,setPatientSpecificProducts]=useState({});// Modal states\nconst[showDeleteModal,setShowDeleteModal]=useState(false);const[itemToDelete,setItemToDelete]=useState(null);const[showAddModal,setShowAddModal]=useState(false);const[modalType,setModalType]=useState('');const[newItemData,setNewItemData]=useState({});// Initialize data\nuseEffect(()=>{if(conditions){setEditedConditions([...conditions]);// Extract unique categories\nconst uniqueCategories=[...new Set(conditions.map(c=>c.category))];setCategories(uniqueCategories);// Extract unique DDS types\nconst allDdsTypes=[];conditions.forEach(condition=>{condition.dds.forEach(dds=>{if(!allDdsTypes.includes(dds)){allDdsTypes.push(dds);}});});setDdsTypes(allDdsTypes);// Extract all products\nconst productsSet=new Set();conditions.forEach(condition=>{if(condition.productDetails){Object.keys(condition.productDetails).forEach(product=>{productsSet.add(product);});}});setAllProducts(Array.from(productsSet));// Select first condition by default\nif(conditions.length>0&&!selectedCondition){setSelectedCondition(conditions[0]);// Initialize patient-specific product configuration\nconst firstCondition=conditions[0];initializePatientSpecificProducts(firstCondition);}}},[conditions]);// Initialize patient-specific products when a condition is selected\nuseEffect(()=>{if(selectedCondition){initializePatientSpecificProducts(selectedCondition);}},[selectedCondition]);// Initialize patient-specific products for a condition\nconst initializePatientSpecificProducts=condition=>{if(!condition)return;const patientProducts={};// For each phase\ncondition.phases.forEach(phase=>{patientProducts[phase]={'all':condition.products[phase]||[],'1':[],'2':[],'3':[],'4':[]};// Analyze existing products to determine patient-specific assignments\nconst allProducts=condition.products[phase]||[];// Process regular products (for all patients)\nallProducts.forEach(product=>{if(!product.includes('(Type')){// Regular products apply to all patient types\npatientProducts[phase]['1'].push(product);patientProducts[phase]['2'].push(product);patientProducts[phase]['3'].push(product);patientProducts[phase]['4'].push(product);}// Process type-specific products\nelse if(product.includes('(Type 3/4 Only)')){const baseProduct=product.replace(' (Type 3/4 Only)','');patientProducts[phase]['3'].push(baseProduct);patientProducts[phase]['4'].push(baseProduct);}});// Try to infer patient types from condition patterns in Excel\n// For specific conditions with known patterns\nif(condition.name==='Gingival Recession Surgery'&&phase==='Prep'){// Type 1 gets nothing (N/A in Excel)\npatientProducts[phase]['1']=[];}// For conditions where Type 3/4 get additional products\nif(condition.name==='Gingival Recession Surgery'&&phase==='Acute'||condition.name==='Scaling and Root Planing (SRP)'&&phase==='Acute'){if(patientProducts[phase]['3'].includes('Synvaza')&&!patientProducts[phase]['3'].includes('AO ProVantage Gel')){patientProducts[phase]['3'].push('AO ProVantage Gel');patientProducts[phase]['4'].push('AO ProVantage Gel');}}});setPatientSpecificProducts(patientProducts);};const handleEditProduct=product=>{// Find the product details from the first condition that uses it (for consistency)\nlet productDetails={name:product,usage:'',rationale:'',competitive:'',objection:'',factSheet:'#'};// Try to find existing details\nfor(const condition of editedConditions){if(condition.productDetails&&condition.productDetails[product]){productDetails={name:product,usage:condition.productDetails[product].usage||'',rationale:condition.productDetails[product].rationale||'',competitive:condition.productDetails[product].competitive||'',objection:condition.productDetails[product].objection||'',factSheet:condition.productDetails[product].factSheet||'#'};break;}}setNewItemData(productDetails);setModalType('product');setEditingProductId(product);setShowAddModal(true);};// Save all changes\nconst handleSaveChanges=async()=>{setIsSaving(true);try{// Apply patient-specific products to condition\nconst updatedConditions=applyPatientSpecificProducts();const result=await saveToBackend(updatedConditions);if(result.success){onConditionsUpdate(updatedConditions);setShowSuccess(true);setTimeout(()=>setShowSuccess(false),3000);}}catch(error){console.error('Error saving changes:',error);// Handle error (show error notification, etc.)\n}finally{setIsSaving(false);}};// Apply patient-specific products to condition before saving\n// Apply patient-specific products to condition before saving\nconst applyPatientSpecificProducts=()=>{if(!selectedCondition)return[...editedConditions];// Deep copy of edited conditions\nconst updatedConditions=JSON.parse(JSON.stringify(editedConditions));// Find the condition to update\nconst conditionIndex=updatedConditions.findIndex(c=>c.name===selectedCondition.name);if(conditionIndex===-1)return updatedConditions;// Create a metadata field if it doesn't exist to store patient-specific configurations\nif(!updatedConditions[conditionIndex].patientSpecificConfig){updatedConditions[conditionIndex].patientSpecificConfig={};}// Store the complete patient-specific configuration\nupdatedConditions[conditionIndex].patientSpecificConfig=JSON.parse(JSON.stringify(patientSpecificProducts));// Update each phase's products for backward compatibility with existing code\nObject.keys(patientSpecificProducts).forEach(phase=>{const phaseProducts=[];const patientTypesForPhase=patientSpecificProducts[phase];// Start with regular products (all patient types)\nconst commonProducts=new Set();// Find products common to all patient types\nconst allPatientTypes=['1','2','3','4'];const productsInAllTypes=new Set();// First pass: collect all products\nallPatientTypes.forEach(patientType=>{(patientTypesForPhase[patientType]||[]).forEach(product=>{productsInAllTypes.add(product);});});// Second pass: find which products are in all patient types\nfor(const product of productsInAllTypes){const isInAllTypes=allPatientTypes.every(patientType=>(patientTypesForPhase[patientType]||[]).includes(product));if(isInAllTypes){commonProducts.add(product);}}// Add common products first\nphaseProducts.push(...Array.from(commonProducts));// Check for Type 3/4 specific products\nconst type34Products=new Set();(patientTypesForPhase['3']||[]).forEach(product=>{if((patientTypesForPhase['4']||[]).includes(product)&&!(patientTypesForPhase['1']||[]).includes(product)&&!(patientTypesForPhase['2']||[]).includes(product)&&!product.includes('(Type')){type34Products.add(`${product} (Type 3/4 Only)`);}});// Add Type 3/4 specific products\nphaseProducts.push(...Array.from(type34Products));// Update the condition's products for this phase\nupdatedConditions[conditionIndex].products[phase]=phaseProducts;// Ensure all products have product details\nconst allProductsToCheck=[...commonProducts,...Array.from(type34Products).map(p=>p.replace(' (Type 3/4 Only)','')),// Add products that are only in some patient types\n...[...productsInAllTypes].filter(p=>!commonProducts.has(p))];// Initialize productDetails if it doesn't exist\nif(!updatedConditions[conditionIndex].productDetails){updatedConditions[conditionIndex].productDetails={};}// Make sure all products have details\nallProductsToCheck.forEach(product=>{const cleanProductName=product.replace(' (Type 3/4 Only)','');// If product doesn't have details yet, create empty details\nif(!updatedConditions[conditionIndex].productDetails[cleanProductName]){updatedConditions[conditionIndex].productDetails[cleanProductName]={usage:'',rationale:'',competitive:'',objection:'',factSheet:'#'};// Try to find product details from other conditions\nfor(const condition of updatedConditions){if(condition.productDetails&&condition.productDetails[cleanProductName]){updatedConditions[conditionIndex].productDetails[cleanProductName]={...condition.productDetails[cleanProductName]};break;}}}});});return updatedConditions;};// Reset changes\nconst handleResetChanges=()=>{setEditedConditions([...conditions]);setIsEditing(false);// Reset patient-specific products\nif(selectedCondition){initializePatientSpecificProducts(selectedCondition);}};// Handle condition selection\nconst handleConditionSelect=condition=>{setSelectedCondition(condition);setActivePatientType('all');initializePatientSpecificProducts(condition);};// Update condition field\nconst updateConditionField=(conditionId,field,value)=>{setIsEditing(true);setEditedConditions(prev=>prev.map(condition=>condition.name===conditionId?{...condition,[field]:value}:condition));// Update selected condition if it's the one being edited\nif(selectedCondition&&selectedCondition.name===conditionId){setSelectedCondition(prev=>({...prev,[field]:value}));}};// Update product details\nconst updateProductDetail=(conditionId,productName,field,value)=>{setIsEditing(true);setEditedConditions(prev=>prev.map(condition=>{if(condition.name===conditionId){const updatedProductDetails={...condition.productDetails};if(!updatedProductDetails[productName]){updatedProductDetails[productName]={};}updatedProductDetails[productName][field]=value;return{...condition,productDetails:updatedProductDetails};}return condition;}));// Update selected condition if it's the one being edited\nif(selectedCondition&&selectedCondition.name===conditionId){const updatedProductDetails={...selectedCondition.productDetails};if(!updatedProductDetails[productName]){updatedProductDetails[productName]={};}updatedProductDetails[productName][field]=value;setSelectedCondition(prev=>({...prev,productDetails:updatedProductDetails}));}};// Handle patient type selection for product configuration\nconst handlePatientTypeSelect=type=>{setActivePatientType(type);};// Add product to specific patient type and phase\nconst addProductToPatientType=(phase,patientType,productName)=>{setIsEditing(true);// Update patient-specific products\nsetPatientSpecificProducts(prev=>{const updated={...prev};// Initialize phase if not exists\nif(!updated[phase]){updated[phase]={'all':[],'1':[],'2':[],'3':[],'4':[]};}// If patientType is 'all', add to all patient types\nif(patientType==='all'){// Add to all patient types, including 'all'\nupdated[phase]['all']=[...new Set([...updated[phase]['all'],productName])];updated[phase]['1']=[...new Set([...updated[phase]['1'],productName])];updated[phase]['2']=[...new Set([...updated[phase]['2'],productName])];updated[phase]['3']=[...new Set([...updated[phase]['3'],productName])];updated[phase]['4']=[...new Set([...updated[phase]['4'],productName])];}else{// Add to specific patient type\nupdated[phase][patientType]=[...new Set([...updated[phase][patientType],productName])];// Check if product is now in all individual patient types and update 'all' accordingly\nconst isInAllTypes=['1','2','3','4'].every(type=>updated[phase][type].includes(productName));if(isInAllTypes&&!updated[phase]['all'].includes(productName)){updated[phase]['all']=[...updated[phase]['all'],productName];}}return updated;});};// Remove product from specific patient type and phase\nconst removeProductFromPatientType=(phase,patientType,productName)=>{setIsEditing(true);// Update patient-specific products\nsetPatientSpecificProducts(prev=>{const updated={...prev};// If patientType is 'all', remove from all patient types\nif(patientType==='all'){updated[phase]['all']=updated[phase]['all'].filter(p=>p!==productName);updated[phase]['1']=updated[phase]['1'].filter(p=>p!==productName);updated[phase]['2']=updated[phase]['2'].filter(p=>p!==productName);updated[phase]['3']=updated[phase]['3'].filter(p=>p!==productName);updated[phase]['4']=updated[phase]['4'].filter(p=>p!==productName);}else{// Remove from specific patient type\nupdated[phase][patientType]=updated[phase][patientType].filter(p=>p!==productName);// Remove from 'all' as well since it's no longer in all patient types\nupdated[phase]['all']=updated[phase]['all'].filter(p=>p!==productName);}return updated;});};// Add new condition\nconst handleAddCondition=()=>{setModalType('condition');setNewItemData({name:'',category:categories[0]||'',phases:['Prep','Acute','Maintenance'],dds:[],patientType:'Types 1 to 4',products:{Prep:[],Acute:[],Maintenance:[]},pitchPoints:'',competitiveAdvantage:'',handlingObjections:'',productDetails:{}});setShowAddModal(true);};// Add new category\nconst handleAddCategory=()=>{setModalType('category');setNewItemData({name:''});setShowAddModal(true);};// Add new DDS type\nconst handleAddDdsType=()=>{setModalType('ddsType');setNewItemData({name:''});setShowAddModal(true);};// Add new product\nconst handleAddProduct=()=>{setModalType('product');setNewItemData({name:'',usage:'',rationale:'',competitive:'',objection:'',factSheet:'#'});setShowAddModal(true);};// Submit new item from modal\nconst handleSubmitNewItem=()=>{setIsEditing(true);if(modalType==='product'){const productName=newItemData.name;if(editingProductId&&editingProductId!==productName){// Product name was changed - need to update all references\nsetEditedConditions(prev=>prev.map(condition=>{// Update product references in all phases\nconst updatedProducts={...condition.products};Object.keys(updatedProducts).forEach(phase=>{updatedProducts[phase]=updatedProducts[phase].map(p=>p===editingProductId?productName:p===`${editingProductId} (Type 3/4 Only)`?`${productName} (Type 3/4 Only)`:p);});// Update product details\nconst updatedProductDetails={...condition.productDetails};if(updatedProductDetails[editingProductId]){updatedProductDetails[productName]={usage:newItemData.usage,rationale:newItemData.rationale,competitive:newItemData.competitive,objection:newItemData.objection,factSheet:newItemData.factSheet||'#'};delete updatedProductDetails[editingProductId];}return{...condition,products:updatedProducts,productDetails:updatedProductDetails};}));// Update allProducts list\nsetAllProducts(prev=>{const index=prev.indexOf(editingProductId);if(index!==-1){const updated=[...prev];updated[index]=productName;return updated;}return[...prev,productName];});// Update patient-specific products if currently editing\nif(selectedCondition){setPatientSpecificProducts(prev=>{const updated={...prev};Object.keys(updated).forEach(phase=>{Object.keys(updated[phase]).forEach(type=>{updated[phase][type]=updated[phase][type].map(p=>p===editingProductId?productName:p);});});return updated;});}}else if(editingProductId){// Only details changed, not the name\nsetEditedConditions(prev=>prev.map(condition=>{if(condition.productDetails&&condition.productDetails[productName]){const updatedProductDetails={...condition.productDetails};updatedProductDetails[productName]={usage:newItemData.usage,rationale:newItemData.rationale,competitive:newItemData.competitive,objection:newItemData.objection,factSheet:newItemData.factSheet||'#'};return{...condition,productDetails:updatedProductDetails};}return condition;}));}else{// This is a new product (original code for adding a new product)\nif(!allProducts.includes(productName)){setAllProducts(prev=>[...prev,productName]);// Add product details to all conditions that use it\nsetEditedConditions(prev=>prev.map(condition=>{const updatedProductDetails={...condition.productDetails};updatedProductDetails[productName]={usage:newItemData.usage,rationale:newItemData.rationale,competitive:newItemData.competitive,objection:newItemData.objection,factSheet:newItemData.factSheet||'#'};return{...condition,productDetails:updatedProductDetails};}));}}}else if(modalType==='condition'){// ... keep existing code for condition\n}else if(modalType==='category'){// ... keep existing code for category\n}else if(modalType==='ddsType'){// ... keep existing code for ddsType\n}setShowAddModal(false);setNewItemData({});setEditingProductId(null);};// Delete confirmation\nconst confirmDelete=(type,item)=>{setItemToDelete({type,item});setShowDeleteModal(true);};// Handle delete\nconst handleDelete=()=>{setIsEditing(true);const{type,item}=itemToDelete;if(type==='condition'){setEditedConditions(prev=>prev.filter(c=>c.name!==item.name));// Select a new condition if the deleted one was selected\nif(selectedCondition&&selectedCondition.name===item.name){const remainingConditions=editedConditions.filter(c=>c.name!==item.name);setSelectedCondition(remainingConditions.length>0?remainingConditions[0]:null);}}else if(type==='product'){// Remove product from all conditions\nsetEditedConditions(prev=>prev.map(condition=>{const updatedProducts={...condition.products};Object.keys(updatedProducts).forEach(phase=>{updatedProducts[phase]=updatedProducts[phase].filter(p=>p!==item&&p!==`${item} (Type 3/4 Only)`);});const updatedProductDetails={...condition.productDetails};delete updatedProductDetails[item];return{...condition,products:updatedProducts,productDetails:updatedProductDetails};}));// Update allProducts list\nsetAllProducts(prev=>prev.filter(p=>p!==item));// Update patient-specific products\nsetPatientSpecificProducts(prev=>{const updated={...prev};Object.keys(updated).forEach(phase=>{Object.keys(updated[phase]).forEach(type=>{updated[phase][type]=updated[phase][type].filter(p=>p!==item);});});return updated;});}setShowDeleteModal(false);setItemToDelete(null);};// Render patient type filter and product configuration UI\nconst renderPatientTypeProductConfig=phase=>{var _patientSpecificProdu2;return/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 border rounded-lg p-4 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium\",children:\"Patient-Specific Product Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Filter by:\"}),/*#__PURE__*/_jsxs(Select.Root,{value:activePatientType,onValueChange:handlePatientTypeSelect,children:[/*#__PURE__*/_jsxs(Select.Trigger,{className:\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\",children:[/*#__PURE__*/_jsx(User,{size:15,className:\"mr-1 text-gray-500\"}),/*#__PURE__*/_jsx(Select.Value,{}),/*#__PURE__*/_jsx(Select.Icon,{children:/*#__PURE__*/_jsx(ChevronDown,{size:15})})]}),/*#__PURE__*/_jsx(Select.Portal,{children:/*#__PURE__*/_jsx(Select.Content,{className:\"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\",children:/*#__PURE__*/_jsx(Select.Viewport,{className:\"p-1\",children:Object.entries(PATIENT_TYPES).map(_ref2=>{let[type,label]=_ref2;return/*#__PURE__*/_jsx(Select.Item,{value:type,className:\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\",children:/*#__PURE__*/_jsx(Select.ItemText,{children:label})},type);})})})})]})]})]}),activePatientType!=='all'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\",children:[/*#__PURE__*/_jsx(Info,{size:15,className:\"mr-1 flex-shrink-0\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Configuring products specifically for \",/*#__PURE__*/_jsx(\"strong\",{children:PATIENT_TYPES[activePatientType]}),\". Products added here will only be recommended for this patient type.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-gray-700\",children:[\"Products for \",activePatientType==='all'?'All Patient Types':`Type ${activePatientType}`]}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>{if(e.target.value){addProductToPatientType(phase,activePatientType,e.target.value);e.target.value='';// Reset select\n}},className:\"px-3 py-1 border border-gray-300 rounded-md text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Add product...\"}),allProducts.filter(product=>{var _patientSpecificProdu;// Only show products that aren't already added for this patient type\nif(!patientSpecificProducts[phase])return true;return!((_patientSpecificProdu=patientSpecificProducts[phase][activePatientType])!==null&&_patientSpecificProdu!==void 0&&_patientSpecificProdu.includes(product));}).map(product=>/*#__PURE__*/_jsx(\"option\",{value:product,children:product},product))]})]}),patientSpecificProducts[phase]&&((_patientSpecificProdu2=patientSpecificProducts[phase][activePatientType])===null||_patientSpecificProdu2===void 0?void 0:_patientSpecificProdu2.length)>0?/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2 max-h-60 overflow-y-auto\",children:patientSpecificProducts[phase][activePatientType].map(product=>/*#__PURE__*/_jsxs(\"li\",{className:\"bg-white border rounded-md p-2 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"span\",{children:product}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeProductFromPatientType(phase,activePatientType,product),className:\"text-red-500 hover:text-red-700 p-1\",children:/*#__PURE__*/_jsx(Trash2,{size:15})})]},product))}):/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\",children:[\"No products configured for \",activePatientType==='all'?'All Patient Types':`Type ${activePatientType}`,\".\"]})]});};// Return early if no data\nif(!conditions||conditions.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"p-8 text-center text-gray-500\",children:\"No conditions data available to edit.\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-4 border-b\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold\",children:\"Knowledge Base Administrator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[isEditing&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleResetChanges,className:\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",disabled:isSaving,children:\"Reset Changes\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveChanges,className:`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${isSaving?'bg-blue-400':'bg-blue-600 hover:bg-blue-700'}`,disabled:isSaving,children:isSaving?/*#__PURE__*/_jsx(_Fragment,{children:\"Saving...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Save,{size:16,className:\"mr-1\"}),\"Save Changes\"]})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"text-gray-500 hover:text-gray-700\",children:/*#__PURE__*/_jsx(X,{size:20})})]})]}),showSuccess&&/*#__PURE__*/_jsxs(\"div\",{className:\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\",children:[/*#__PURE__*/_jsx(Check,{size:20,className:\"mr-2\"}),\"Changes saved successfully!\"]}),/*#__PURE__*/_jsxs(Tabs.Root,{value:activeTab,onValueChange:setActiveTab,children:[/*#__PURE__*/_jsxs(Tabs.List,{className:\"flex border-b\",children:[/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"importExport\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"importExport\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Import/Export\"}),/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"conditions\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"conditions\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Conditions\"}),/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"products\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"products\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Products\"}),/*#__PURE__*/_jsx(Tabs.Trigger,{value:\"categories\",className:clsx(\"px-6 py-3 text-sm font-medium\",activeTab===\"categories\"?\"text-blue-600 border-b-2 border-blue-600\":\"text-gray-500 hover:text-gray-700\"),children:\"Categories & DDS Types\"})]}),/*#__PURE__*/_jsxs(Tabs.Content,{value:\"importExport\",className:\"p-6\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2\",children:\"Knowledge Base Management\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Import and export your knowledge base data for backup purposes or to transfer between environments.\"})]}),/*#__PURE__*/_jsx(DataImportExport,{conditions:editedConditions,onImport:importedData=>{setEditedConditions(importedData);setIsEditing(true);}})]}),/*#__PURE__*/_jsx(Tabs.Content,{value:\"conditions\",className:\"flex-grow overflow-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-full\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/3 border-r p-4\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium\",children:\"All Conditions\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddCondition,className:\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add New\"]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-1\",children:editedConditions.map(condition=>/*#__PURE__*/_jsxs(\"li\",{className:clsx(\"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",selectedCondition&&selectedCondition.name===condition.name?\"bg-blue-100\":\"hover:bg-gray-100\"),onClick:()=>handleConditionSelect(condition),children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm\",children:condition.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:condition.category})]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();confirmDelete('condition',condition);},className:\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]},condition.name))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2/3 p-4\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:selectedCondition?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Condition Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedCondition.name,onChange:e=>updateConditionField(selectedCondition.name,'name',e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Category\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedCondition.category,onChange:e=>updateConditionField(selectedCondition.name,'category',e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",children:categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Patient Type\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedCondition.patientType,onChange:e=>updateConditionField(selectedCondition.name,'patientType',e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-xs text-gray-500\",children:\"Format: \\\"Types 1 to 4\\\" or \\\"Types 3 to 4\\\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"DDS Types\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-gray-300 rounded-md p-2 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedCondition.dds.map(dds=>/*#__PURE__*/_jsxs(\"span\",{className:\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\",children:[dds,/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedDds=selectedCondition.dds.filter(d=>d!==dds);updateConditionField(selectedCondition.name,'dds',updatedDds);},className:\"ml-1 text-blue-700 hover:text-blue-900\",children:/*#__PURE__*/_jsx(X,{size:14})})]},dds))})}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>{if(e.target.value&&!selectedCondition.dds.includes(e.target.value)){const updatedDds=[...selectedCondition.dds,e.target.value];updateConditionField(selectedCondition.name,'dds',updatedDds);}e.target.value='';// Reset select\n},className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Add DDS Type...\"}),ddsTypes.filter(dds=>!selectedCondition.dds.includes(dds)).map(dds=>/*#__PURE__*/_jsx(\"option\",{value:dds,children:dds},dds))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Pitch Points\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.pitchPoints,onChange:e=>updateConditionField(selectedCondition.name,'pitchPoints',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.competitiveAdvantage||'',onChange:e=>updateConditionField(selectedCondition.name,'competitiveAdvantage',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"textarea\",{value:selectedCondition.handlingObjections||'',onChange:e=>updateConditionField(selectedCondition.name,'handlingObjections',e.target.value),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Treatment Phases\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-gray-300 rounded-md p-2 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedCondition.phases.map(phase=>/*#__PURE__*/_jsxs(\"span\",{className:\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\",children:[phase,/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedPhases=selectedCondition.phases.filter(p=>p!==phase);updateConditionField(selectedCondition.name,'phases',updatedPhases);},className:\"ml-1 text-purple-700 hover:text-purple-900\",children:/*#__PURE__*/_jsx(X,{size:14})})]},phase))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New phase name...\",className:\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",onKeyDown:e=>{if(e.key==='Enter'&&e.target.value&&!selectedCondition.phases.includes(e.target.value)){const updatedPhases=[...selectedCondition.phases,e.target.value];updateConditionField(selectedCondition.name,'phases',updatedPhases);e.target.value='';}}}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{const input=e.target.previousElementSibling;if(input.value&&!selectedCondition.phases.includes(input.value)){const updatedPhases=[...selectedCondition.phases,input.value];updateConditionField(selectedCondition.name,'phases',updatedPhases);input.value='';}},className:\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\",children:\"Add\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-lg mb-3\",children:\"Products by Phase\"}),/*#__PURE__*/_jsxs(Tabs.Root,{defaultValue:selectedCondition.phases[0],className:\"border rounded-md\",children:[/*#__PURE__*/_jsx(Tabs.List,{className:\"flex border-b bg-gray-50\",children:selectedCondition.phases.map(phase=>/*#__PURE__*/_jsxs(Tabs.Trigger,{value:phase,className:clsx(\"flex-1 px-4 py-2 text-sm font-medium\",\"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"),children:[phase,\" Phase\"]},phase))}),selectedCondition.phases.map(phase=>/*#__PURE__*/_jsx(Tabs.Content,{value:phase,className:\"p-4\",children:renderPatientTypeProductConfig(phase)},phase))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-lg mb-3\",children:\"Product Details\"}),Object.keys(selectedCondition.productDetails||{}).length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:Object.keys(selectedCondition.productDetails).map(productName=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-md p-4 bg-gray-50\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-md mb-3\",children:productName}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Supporting Research Articles\"}),selectedCondition.productDetails[productName].researchArticles&&selectedCondition.productDetails[productName].researchArticles.map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow space-y-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Article title\",value:article.title||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].title=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Author/Source\",value:article.author||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].author=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Abstract (optional)\",value:article.abstract||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].abstract=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},rows:3,className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"URL (optional)\",value:article.url||'',onChange:e=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles[index].url=e.target.value;updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedArticles=[...selectedCondition.productDetails[productName].researchArticles];updatedArticles.splice(index,1);updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",children:/*#__PURE__*/_jsx(X,{size:16})})]},index)),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const currentArticles=selectedCondition.productDetails[productName].researchArticles||[];const updatedArticles=[...currentArticles,{title:'',author:'',url:''}];updateProductDetail(selectedCondition.name,productName,'researchArticles',updatedArticles);},className:\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add Research Article\"]})]})})]},productName))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm italic\",children:\"No product details available. Add products to phases first.\"})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-10 text-gray-500\",children:\"Select a condition to edit or create a new one\"})})]})}),/*#__PURE__*/_jsxs(Tabs.Content,{value:\"products\",className:\"p-6\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium\",children:\"Product Library\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddProduct,className:\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add New Product\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",children:allProducts.map(product=>{var _editedConditions$,_editedConditions$$pr;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 hover:bg-gray-50 group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-md\",children:product}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditProduct(product),className:\"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\",title:\"Edit product details\",children:/*#__PURE__*/_jsx(Edit,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>confirmDelete('product',product),className:\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\",title:\"Delete product\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]}),((_editedConditions$=editedConditions[0])===null||_editedConditions$===void 0?void 0:(_editedConditions$$pr=_editedConditions$.productDetails)===null||_editedConditions$$pr===void 0?void 0:_editedConditions$$pr[product])&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-sm text-gray-600 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"truncate\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Usage: \"}),editedConditions[0].productDetails[product].usage]}),/*#__PURE__*/_jsxs(\"div\",{className:\"truncate\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Conditions: \"}),editedConditions.filter(c=>Object.values(c.products||{}).some(products=>products.includes(product)||products.includes(`${product} (Type 3/4 Only)`))).length,\" conditions\"]})]})]},product);})})]}),/*#__PURE__*/_jsx(Tabs.Content,{value:\"categories\",className:\"p-6\",style:{maxHeight:\"calc(90vh - 160px)\",overflowY:\"auto\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium\",children:\"Categories\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddCategory,className:\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add Category\"]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:categories.map(category=>/*#__PURE__*/_jsxs(\"li\",{className:\"border rounded-md p-3 flex justify-between items-center bg-gray-50\",children:[/*#__PURE__*/_jsx(\"span\",{children:category}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[editedConditions.filter(c=>c.category===category).length,\" conditions\"]})]},category))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium\",children:\"DDS Types\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleAddDdsType,className:\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add DDS Type\"]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:ddsTypes.map(ddsType=>/*#__PURE__*/_jsxs(\"li\",{className:\"border rounded-md p-3 flex justify-between items-center bg-gray-50\",children:[/*#__PURE__*/_jsx(\"span\",{children:ddsType}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[editedConditions.filter(c=>c.dds.includes(ddsType)).length,\" conditions\"]})]},ddsType))})]})]})})]}),/*#__PURE__*/_jsx(Dialog.Root,{open:showAddModal,onOpenChange:setShowAddModal,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50 z-50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",children:[/*#__PURE__*/_jsxs(Dialog.Title,{className:\"text-lg font-semibold mb-4\",children:[modalType==='condition'&&'Add New Condition',modalType==='category'&&'Add New Category',modalType==='ddsType'&&'Add New DDS Type',modalType==='product'&&(editingProductId?`Edit Product: ${editingProductId}`:'Add New Product')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[modalType==='condition'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Condition Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Category\"}),/*#__PURE__*/_jsx(\"select\",{value:newItemData.category||'',onChange:e=>setNewItemData({...newItemData,category:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\",children:categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Key Pitch Points\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.pitchPoints||'',onChange:e=>setNewItemData({...newItemData,pitchPoints:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.competitiveAdvantage||'',onChange:e=>setNewItemData({...newItemData,competitiveAdvantage:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Handling Objections\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.handlingObjections||'',onChange:e=>setNewItemData({...newItemData,handlingObjections:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]})]}),modalType==='category'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Category Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),modalType==='ddsType'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"DDS Type Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),modalType==='product'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Product Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemData.name||'',onChange:e=>setNewItemData({...newItemData,name:e.target.value}),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Usage Instructions\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.usage||'',onChange:e=>setNewItemData({...newItemData,usage:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Clinical Rationale\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.rationale||'',onChange:e=>setNewItemData({...newItemData,rationale:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Competitive Advantage\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.competitive||'',onChange:e=>setNewItemData({...newItemData,competitive:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Objection Handling\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newItemData.objection||'',onChange:e=>setNewItemData({...newItemData,objection:e.target.value}),rows:2,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Supporting Research Articles\"}),newItemData.researchArticles&&newItemData.researchArticles.map((article,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow space-y-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Article title\",value:article.title||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].title=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Author/Source\",value:article.author||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].author=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Abstract (optional)\",value:article.abstract||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].abstract=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},rows:3,className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"URL (optional)\",value:article.url||'',onChange:e=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles[index].url=e.target.value;setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const updatedArticles=[...newItemData.researchArticles];updatedArticles.splice(index,1);setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\",children:/*#__PURE__*/_jsx(X,{size:16})})]},index)),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const updatedArticles=[...(newItemData.researchArticles||[]),{title:'',author:'',url:''}];setNewItemData({...newItemData,researchArticles:updatedArticles});},className:\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),\"Add Research Article\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmitNewItem,disabled:!newItemData.name,className:`px-3 py-1.5 rounded-md text-white text-sm ${newItemData.name?'bg-blue-600 hover:bg-blue-700':'bg-blue-300 cursor-not-allowed'}`,children:editingProductId?'Save Changes':'Add'})]})]})]})}),/*#__PURE__*/_jsx(Dialog.Root,{open:showDeleteModal,onOpenChange:setShowDeleteModal,children:/*#__PURE__*/_jsxs(Dialog.Portal,{children:[/*#__PURE__*/_jsx(Dialog.Overlay,{className:\"fixed inset-0 bg-black/50 z-50\"}),/*#__PURE__*/_jsxs(Dialog.Content,{className:\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\",children:[/*#__PURE__*/_jsxs(Dialog.Title,{className:\"text-lg font-semibold mb-2 flex items-center text-red-600\",children:[/*#__PURE__*/_jsx(AlertTriangle,{size:20,className:\"mr-2\"}),\"Confirm Deletion\"]}),/*#__PURE__*/_jsxs(Dialog.Description,{className:\"text-gray-600 mb-4\",children:[(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='condition'&&`Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`,(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='product'&&`Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(Dialog.Close,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDelete,className:\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\",children:\"Delete\"})]})]})]})})]})});}export default AdminPanel;","map":{"version":3,"names":["React","useState","useEffect","Tabs","Dialog","Select","Save","Plus","Edit","Trash2","X","ChevronDown","Info","AlertTriangle","Lock","Check","User","Filter","clsx","DataImportExport","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PATIENT_TYPES","saveToBackend","data","Promise","resolve","setTimeout","console","log","localStorage","setItem","JSON","stringify","success","AdminPanel","_ref","conditions","onConditionsUpdate","onClose","activeTab","setActiveTab","editedConditions","setEditedConditions","selectedCondition","setSelectedCondition","editingProductId","setEditingProductId","categories","setCategories","ddsTypes","setDdsTypes","allProducts","setAllProducts","isEditing","setIsEditing","isSaving","setIsSaving","showSuccess","setShowSuccess","activePatientType","setActivePatientType","patientSpecificProducts","setPatientSpecificProducts","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showAddModal","setShowAddModal","modalType","setModalType","newItemData","setNewItemData","uniqueCategories","Set","map","c","category","allDdsTypes","forEach","condition","dds","includes","push","productsSet","productDetails","Object","keys","product","add","Array","from","length","firstCondition","initializePatientSpecificProducts","patientProducts","phases","phase","products","baseProduct","replace","name","handleEditProduct","usage","rationale","competitive","objection","factSheet","handleSaveChanges","updatedConditions","applyPatientSpecificProducts","result","error","parse","conditionIndex","findIndex","patientSpecificConfig","phaseProducts","patientTypesForPhase","commonProducts","allPatientTypes","productsInAllTypes","patientType","isInAllTypes","every","type34Products","allProductsToCheck","p","filter","has","cleanProductName","handleResetChanges","handleConditionSelect","updateConditionField","conditionId","field","value","prev","updateProductDetail","productName","updatedProductDetails","handlePatientTypeSelect","type","addProductToPatientType","updated","removeProductFromPatientType","handleAddCondition","Prep","Acute","Maintenance","pitchPoints","competitiveAdvantage","handlingObjections","handleAddCategory","handleAddDdsType","handleAddProduct","handleSubmitNewItem","updatedProducts","index","indexOf","confirmDelete","item","handleDelete","remainingConditions","renderPatientTypeProductConfig","_patientSpecificProdu2","className","children","Root","onValueChange","Trigger","size","Value","Icon","Portal","Content","Viewport","entries","_ref2","label","Item","ItemText","onChange","e","target","_patientSpecificProdu","onClick","disabled","List","style","maxHeight","overflowY","onImport","importedData","stopPropagation","updatedDds","d","rows","updatedPhases","placeholder","onKeyDown","key","input","previousElementSibling","defaultValue","researchArticles","article","title","updatedArticles","author","abstract","url","splice","currentArticles","_editedConditions$","_editedConditions$$pr","values","some","ddsType","open","onOpenChange","Overlay","Title","Close","asChild","Description"],"sources":["/Users/austincopps/Projects/RusselProject/Build/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Tabs from '@radix-ui/react-tabs';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport * as Select from '@radix-ui/react-select';\nimport { Save, Plus, Edit, Trash2, X, ChevronDown, Info, AlertTriangle, Lock, Check, User, Filter } from 'lucide-react';\nimport clsx from 'clsx';\nimport DataImportExport from './DataImportExport';\n\n// Patient Types definition\nconst PATIENT_TYPES = {\n  'all': 'All Patient Types',\n  '1': 'Type 1: Healthy',\n  '2': 'Type 2: Mild inflammation, moderate risk',\n  '3': 'Type 3: Smoker, diabetic, immunocompromised',\n  '4': 'Type 4: Periodontal disease, chronic illness, poor healing'\n};\n\n// Mock function for saving data - in a real app, this would connect to backend\nconst saveToBackend = async (data) => {\n  // Simulate API call\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Data saved:', data);\n      localStorage.setItem('conditions_data', JSON.stringify(data));\n      resolve({ success: true });\n    }, 1500);\n  });\n};\n\nfunction AdminPanel({ conditions, onConditionsUpdate, onClose }) {\n  const [activeTab, setActiveTab] = useState('conditions');\n  const [editedConditions, setEditedConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [ddsTypes, setDdsTypes] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  \n  // Patient-specific products configuration\n  const [activePatientType, setActivePatientType] = useState('all');\n  const [patientSpecificProducts, setPatientSpecificProducts] = useState({});\n  \n  // Modal states\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [newItemData, setNewItemData] = useState({});\n  \n  // Initialize data\n  useEffect(() => {\n    if (conditions) {\n      setEditedConditions([...conditions]);\n      \n      // Extract unique categories\n      const uniqueCategories = [...new Set(conditions.map(c => c.category))];\n      setCategories(uniqueCategories);\n      \n      // Extract unique DDS types\n      const allDdsTypes = [];\n      conditions.forEach(condition => {\n        condition.dds.forEach(dds => {\n          if (!allDdsTypes.includes(dds)) {\n            allDdsTypes.push(dds);\n          }\n        });\n      });\n      setDdsTypes(allDdsTypes);\n      \n      // Extract all products\n      const productsSet = new Set();\n      conditions.forEach(condition => {\n        if (condition.productDetails) {\n          Object.keys(condition.productDetails).forEach(product => {\n            productsSet.add(product);\n          });\n        }\n      });\n      setAllProducts(Array.from(productsSet));\n      \n      // Select first condition by default\n      if (conditions.length > 0 && !selectedCondition) {\n        setSelectedCondition(conditions[0]);\n        \n        // Initialize patient-specific product configuration\n        const firstCondition = conditions[0];\n        initializePatientSpecificProducts(firstCondition);\n      }\n    }\n  }, [conditions]);\n\n  // Initialize patient-specific products when a condition is selected\n  useEffect(() => {\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  }, [selectedCondition]);\n\n  // Initialize patient-specific products for a condition\n  const initializePatientSpecificProducts = (condition) => {\n    if (!condition) return;\n    \n    const patientProducts = {};\n    \n    // For each phase\n    condition.phases.forEach(phase => {\n      patientProducts[phase] = {\n        'all': condition.products[phase] || [],\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n      };\n      \n      // Analyze existing products to determine patient-specific assignments\n      const allProducts = condition.products[phase] || [];\n      \n      // Process regular products (for all patients)\n      allProducts.forEach(product => {\n        if (!product.includes('(Type')) {\n          // Regular products apply to all patient types\n          patientProducts[phase]['1'].push(product);\n          patientProducts[phase]['2'].push(product);\n          patientProducts[phase]['3'].push(product);\n          patientProducts[phase]['4'].push(product);\n        } \n        // Process type-specific products\n        else if (product.includes('(Type 3/4 Only)')) {\n          const baseProduct = product.replace(' (Type 3/4 Only)', '');\n          patientProducts[phase]['3'].push(baseProduct);\n          patientProducts[phase]['4'].push(baseProduct);\n        }\n      });\n      \n      // Try to infer patient types from condition patterns in Excel\n      // For specific conditions with known patterns\n      if (condition.name === 'Gingival Recession Surgery' && phase === 'Prep') {\n        // Type 1 gets nothing (N/A in Excel)\n        patientProducts[phase]['1'] = [];\n      }\n      \n      // For conditions where Type 3/4 get additional products\n      if (\n        (condition.name === 'Gingival Recession Surgery' && phase === 'Acute') ||\n        (condition.name === 'Scaling and Root Planing (SRP)' && phase === 'Acute')\n      ) {\n        if (patientProducts[phase]['3'].includes('Synvaza') && \n            !patientProducts[phase]['3'].includes('AO ProVantage Gel')) {\n          patientProducts[phase]['3'].push('AO ProVantage Gel');\n          patientProducts[phase]['4'].push('AO ProVantage Gel');\n        }\n      }\n    });\n    \n    setPatientSpecificProducts(patientProducts);\n  };\n\n  const handleEditProduct = (product) => {\n    // Find the product details from the first condition that uses it (for consistency)\n    let productDetails = { name: product, usage: '', rationale: '', competitive: '', objection: '', factSheet: '#' };\n    \n    // Try to find existing details\n    for (const condition of editedConditions) {\n      if (condition.productDetails && condition.productDetails[product]) {\n        productDetails = {\n          name: product,\n          usage: condition.productDetails[product].usage || '',\n          rationale: condition.productDetails[product].rationale || '',\n          competitive: condition.productDetails[product].competitive || '',\n          objection: condition.productDetails[product].objection || '',\n          factSheet: condition.productDetails[product].factSheet || '#'\n        };\n        break;\n      }\n    }\n    \n    setNewItemData(productDetails);\n    setModalType('product');\n    setEditingProductId(product);\n    setShowAddModal(true);\n  };\n\n  // Save all changes\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      // Apply patient-specific products to condition\n      const updatedConditions = applyPatientSpecificProducts();\n      \n      const result = await saveToBackend(updatedConditions);\n      if (result.success) {\n        onConditionsUpdate(updatedConditions);\n        setShowSuccess(true);\n        setTimeout(() => setShowSuccess(false), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      // Handle error (show error notification, etc.)\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Apply patient-specific products to condition before saving\n  // Apply patient-specific products to condition before saving\n  const applyPatientSpecificProducts = () => {\n    if (!selectedCondition) return [...editedConditions];\n    \n    // Deep copy of edited conditions\n    const updatedConditions = JSON.parse(JSON.stringify(editedConditions));\n    \n    // Find the condition to update\n    const conditionIndex = updatedConditions.findIndex(c => c.name === selectedCondition.name);\n    if (conditionIndex === -1) return updatedConditions;\n    \n    // Create a metadata field if it doesn't exist to store patient-specific configurations\n    if (!updatedConditions[conditionIndex].patientSpecificConfig) {\n      updatedConditions[conditionIndex].patientSpecificConfig = {};\n    }\n    \n    // Store the complete patient-specific configuration\n    updatedConditions[conditionIndex].patientSpecificConfig = JSON.parse(JSON.stringify(patientSpecificProducts));\n    \n    // Update each phase's products for backward compatibility with existing code\n    Object.keys(patientSpecificProducts).forEach(phase => {\n      const phaseProducts = [];\n      const patientTypesForPhase = patientSpecificProducts[phase];\n      \n      // Start with regular products (all patient types)\n      const commonProducts = new Set();\n      \n      // Find products common to all patient types\n      const allPatientTypes = ['1', '2', '3', '4'];\n      const productsInAllTypes = new Set();\n      \n      // First pass: collect all products\n      allPatientTypes.forEach(patientType => {\n        (patientTypesForPhase[patientType] || []).forEach(product => {\n          productsInAllTypes.add(product);\n        });\n      });\n      \n      // Second pass: find which products are in all patient types\n      for (const product of productsInAllTypes) {\n        const isInAllTypes = allPatientTypes.every(patientType => \n          (patientTypesForPhase[patientType] || []).includes(product)\n        );\n        \n        if (isInAllTypes) {\n          commonProducts.add(product);\n        }\n      }\n      \n      // Add common products first\n      phaseProducts.push(...Array.from(commonProducts));\n      \n      // Check for Type 3/4 specific products\n      const type34Products = new Set();\n      \n      (patientTypesForPhase['3'] || []).forEach(product => {\n        if (\n          (patientTypesForPhase['4'] || []).includes(product) && \n          !(patientTypesForPhase['1'] || []).includes(product) && \n          !(patientTypesForPhase['2'] || []).includes(product) &&\n          !product.includes('(Type')\n        ) {\n          type34Products.add(`${product} (Type 3/4 Only)`);\n        }\n      });\n      \n      // Add Type 3/4 specific products\n      phaseProducts.push(...Array.from(type34Products));\n      \n      // Update the condition's products for this phase\n      updatedConditions[conditionIndex].products[phase] = phaseProducts;\n      \n      // Ensure all products have product details\n      const allProductsToCheck = [\n        ...commonProducts, \n        ...Array.from(type34Products).map(p => p.replace(' (Type 3/4 Only)', '')),\n        // Add products that are only in some patient types\n        ...[...productsInAllTypes].filter(p => !commonProducts.has(p))\n      ];\n      \n      // Initialize productDetails if it doesn't exist\n      if (!updatedConditions[conditionIndex].productDetails) {\n        updatedConditions[conditionIndex].productDetails = {};\n      }\n      \n      // Make sure all products have details\n      allProductsToCheck.forEach(product => {\n        const cleanProductName = product.replace(' (Type 3/4 Only)', '');\n        \n        // If product doesn't have details yet, create empty details\n        if (!updatedConditions[conditionIndex].productDetails[cleanProductName]) {\n          updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n            usage: '',\n            rationale: '',\n            competitive: '',\n            objection: '',\n            factSheet: '#'\n          };\n          \n          // Try to find product details from other conditions\n          for (const condition of updatedConditions) {\n            if (condition.productDetails && condition.productDetails[cleanProductName]) {\n              updatedConditions[conditionIndex].productDetails[cleanProductName] = {\n                ...condition.productDetails[cleanProductName]\n              };\n              break;\n            }\n          }\n        }\n      });\n    });\n    \n    return updatedConditions;\n  };\n  \n  // Reset changes\n  const handleResetChanges = () => {\n    setEditedConditions([...conditions]);\n    setIsEditing(false);\n    \n    // Reset patient-specific products\n    if (selectedCondition) {\n      initializePatientSpecificProducts(selectedCondition);\n    }\n  };\n  \n  // Handle condition selection\n  const handleConditionSelect = (condition) => {\n    setSelectedCondition(condition);\n    setActivePatientType('all');\n    initializePatientSpecificProducts(condition);\n  };\n  \n  // Update condition field\n  const updateConditionField = (conditionId, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => \n        condition.name === conditionId\n          ? { ...condition, [field]: value }\n          : condition\n      )\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      setSelectedCondition(prev => ({ ...prev, [field]: value }));\n    }\n  };\n  \n  // Update product details\n  const updateProductDetail = (conditionId, productName, field, value) => {\n    setIsEditing(true);\n    setEditedConditions(prev => \n      prev.map(condition => {\n        if (condition.name === conditionId) {\n          const updatedProductDetails = { ...condition.productDetails };\n          if (!updatedProductDetails[productName]) {\n            updatedProductDetails[productName] = {};\n          }\n          updatedProductDetails[productName][field] = value;\n          return { ...condition, productDetails: updatedProductDetails };\n        }\n        return condition;\n      })\n    );\n    \n    // Update selected condition if it's the one being edited\n    if (selectedCondition && selectedCondition.name === conditionId) {\n      const updatedProductDetails = { ...selectedCondition.productDetails };\n      if (!updatedProductDetails[productName]) {\n        updatedProductDetails[productName] = {};\n      }\n      updatedProductDetails[productName][field] = value;\n      setSelectedCondition(prev => ({ \n        ...prev, \n        productDetails: updatedProductDetails \n      }));\n    }\n  };\n  \n  // Handle patient type selection for product configuration\n  const handlePatientTypeSelect = (type) => {\n    setActivePatientType(type);\n  };\n  \n  // Add product to specific patient type and phase\n  const addProductToPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // Initialize phase if not exists\n      if (!updated[phase]) {\n        updated[phase] = {\n          'all': [],\n          '1': [],\n          '2': [],\n          '3': [],\n          '4': []\n        };\n      }\n      \n      // If patientType is 'all', add to all patient types\n      if (patientType === 'all') {\n        // Add to all patient types, including 'all'\n        updated[phase]['all'] = [...new Set([...updated[phase]['all'], productName])];\n        updated[phase]['1'] = [...new Set([...updated[phase]['1'], productName])];\n        updated[phase]['2'] = [...new Set([...updated[phase]['2'], productName])];\n        updated[phase]['3'] = [...new Set([...updated[phase]['3'], productName])];\n        updated[phase]['4'] = [...new Set([...updated[phase]['4'], productName])];\n      } else {\n        // Add to specific patient type\n        updated[phase][patientType] = [...new Set([...updated[phase][patientType], productName])];\n        \n        // Check if product is now in all individual patient types and update 'all' accordingly\n        const isInAllTypes = ['1', '2', '3', '4'].every(type => \n          updated[phase][type].includes(productName)\n        );\n        \n        if (isInAllTypes && !updated[phase]['all'].includes(productName)) {\n          updated[phase]['all'] = [...updated[phase]['all'], productName];\n        }\n      }\n      \n      return updated;\n    });\n  };\n  \n  // Remove product from specific patient type and phase\n  const removeProductFromPatientType = (phase, patientType, productName) => {\n    setIsEditing(true);\n    \n    // Update patient-specific products\n    setPatientSpecificProducts(prev => {\n      const updated = { ...prev };\n      \n      // If patientType is 'all', remove from all patient types\n      if (patientType === 'all') {\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n        updated[phase]['1'] = updated[phase]['1'].filter(p => p !== productName);\n        updated[phase]['2'] = updated[phase]['2'].filter(p => p !== productName);\n        updated[phase]['3'] = updated[phase]['3'].filter(p => p !== productName);\n        updated[phase]['4'] = updated[phase]['4'].filter(p => p !== productName);\n      } else {\n        // Remove from specific patient type\n        updated[phase][patientType] = updated[phase][patientType].filter(p => p !== productName);\n        \n        // Remove from 'all' as well since it's no longer in all patient types\n        updated[phase]['all'] = updated[phase]['all'].filter(p => p !== productName);\n      }\n      \n      return updated;\n    });\n  };\n  // Add new condition\n  const handleAddCondition = () => {\n    setModalType('condition');\n    setNewItemData({\n      name: '',\n      category: categories[0] || '',\n      phases: ['Prep', 'Acute', 'Maintenance'],\n      dds: [],\n      patientType: 'Types 1 to 4',\n      products: {\n        Prep: [],\n        Acute: [],\n        Maintenance: []\n      },\n      pitchPoints: '',\n      competitiveAdvantage: '',\n      handlingObjections: '',\n      productDetails: {}\n    });\n    setShowAddModal(true);\n  };\n  \n  // Add new category\n  const handleAddCategory = () => {\n    setModalType('category');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new DDS type\n  const handleAddDdsType = () => {\n    setModalType('ddsType');\n    setNewItemData({ name: '' });\n    setShowAddModal(true);\n  };\n  \n  // Add new product\n  const handleAddProduct = () => {\n    setModalType('product');\n    setNewItemData({\n      name: '',\n      usage: '',\n      rationale: '',\n      competitive: '',\n      objection: '',\n      factSheet: '#'\n    });\n    setShowAddModal(true);\n  };\n  \n  // Submit new item from modal\n  const handleSubmitNewItem = () => {\n  setIsEditing(true);\n  \n  if (modalType === 'product') {\n    const productName = newItemData.name;\n    \n    if (editingProductId && editingProductId !== productName) {\n      // Product name was changed - need to update all references\n      setEditedConditions(prev => \n        prev.map(condition => {\n          // Update product references in all phases\n          const updatedProducts = { ...condition.products };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].map(p => \n              p === editingProductId ? productName : \n              p === `${editingProductId} (Type 3/4 Only)` ? `${productName} (Type 3/4 Only)` : p\n            );\n          });\n          \n          // Update product details\n          const updatedProductDetails = { ...condition.productDetails };\n          if (updatedProductDetails[editingProductId]) {\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            delete updatedProductDetails[editingProductId];\n          }\n          \n          return { \n            ...condition, \n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        })\n      );\n      \n      // Update allProducts list\n      setAllProducts(prev => {\n        const index = prev.indexOf(editingProductId);\n        if (index !== -1) {\n          const updated = [...prev];\n          updated[index] = productName;\n          return updated;\n        }\n        return [...prev, productName];\n      });\n      \n      // Update patient-specific products if currently editing\n      if (selectedCondition) {\n        setPatientSpecificProducts(prev => {\n          const updated = { ...prev };\n          Object.keys(updated).forEach(phase => {\n            Object.keys(updated[phase]).forEach(type => {\n              updated[phase][type] = updated[phase][type].map(p => \n                p === editingProductId ? productName : p\n              );\n            });\n          });\n          return updated;\n        });\n      }\n    } else if (editingProductId) {\n      // Only details changed, not the name\n      setEditedConditions(prev => \n        prev.map(condition => {\n          if (condition.productDetails && condition.productDetails[productName]) {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          }\n          return condition;\n        })\n      );\n    } else {\n      // This is a new product (original code for adding a new product)\n      if (!allProducts.includes(productName)) {\n        setAllProducts(prev => [...prev, productName]);\n        \n        // Add product details to all conditions that use it\n        setEditedConditions(prev => \n          prev.map(condition => {\n            const updatedProductDetails = { ...condition.productDetails };\n            updatedProductDetails[productName] = {\n              usage: newItemData.usage,\n              rationale: newItemData.rationale,\n              competitive: newItemData.competitive,\n              objection: newItemData.objection,\n              factSheet: newItemData.factSheet || '#'\n            };\n            return { ...condition, productDetails: updatedProductDetails };\n          })\n        );\n      }\n    }\n  } else if (modalType === 'condition') {\n    // ... keep existing code for condition\n  } else if (modalType === 'category') {\n    // ... keep existing code for category\n  } else if (modalType === 'ddsType') {\n    // ... keep existing code for ddsType\n  }\n  \n  setShowAddModal(false);\n  setNewItemData({});\n  setEditingProductId(null);\n};\n  \n  // Delete confirmation\n  const confirmDelete = (type, item) => {\n    setItemToDelete({ type, item });\n    setShowDeleteModal(true);\n  };\n  \n  // Handle delete\n  const handleDelete = () => {\n    setIsEditing(true);\n    const { type, item } = itemToDelete;\n    \n    if (type === 'condition') {\n      setEditedConditions(prev => prev.filter(c => c.name !== item.name));\n      \n      // Select a new condition if the deleted one was selected\n      if (selectedCondition && selectedCondition.name === item.name) {\n        const remainingConditions = editedConditions.filter(c => c.name !== item.name);\n        setSelectedCondition(remainingConditions.length > 0 ? remainingConditions[0] : null);\n      }\n    } else if (type === 'product') {\n      // Remove product from all conditions\n      setEditedConditions(prev => \n        prev.map(condition => {\n          const updatedProducts = { ...condition.products };\n          Object.keys(updatedProducts).forEach(phase => {\n            updatedProducts[phase] = updatedProducts[phase].filter(p => \n              p !== item && p !== `${item} (Type 3/4 Only)`\n            );\n          });\n          \n          const updatedProductDetails = { ...condition.productDetails };\n          delete updatedProductDetails[item];\n          \n          return { \n            ...condition, \n            products: updatedProducts,\n            productDetails: updatedProductDetails\n          };\n        })\n      );\n      \n      // Update allProducts list\n      setAllProducts(prev => prev.filter(p => p !== item));\n      \n      // Update patient-specific products\n      setPatientSpecificProducts(prev => {\n        const updated = { ...prev };\n        Object.keys(updated).forEach(phase => {\n          Object.keys(updated[phase]).forEach(type => {\n            updated[phase][type] = updated[phase][type].filter(p => p !== item);\n          });\n        });\n        return updated;\n      });\n    }\n    \n    setShowDeleteModal(false);\n    setItemToDelete(null);\n  };\n  \n  // Render patient type filter and product configuration UI\n  const renderPatientTypeProductConfig = (phase) => {\n    return (\n      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-medium\">Patient-Specific Product Configuration</h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Filter by:</span>\n            <Select.Root value={activePatientType} onValueChange={handlePatientTypeSelect}>\n              <Select.Trigger className=\"px-3 py-1 text-sm border border-gray-300 rounded-md flex items-center\">\n                <User size={15} className=\"mr-1 text-gray-500\" />\n                <Select.Value />\n                <Select.Icon><ChevronDown size={15} /></Select.Icon>\n              </Select.Trigger>\n              <Select.Portal>\n                <Select.Content className=\"bg-white rounded-md shadow-lg border min-w-[220px] z-[9999]\">\n                  <Select.Viewport className=\"p-1\">\n                    {Object.entries(PATIENT_TYPES).map(([type, label]) => (\n                      <Select.Item\n                        key={type}\n                        value={type}\n                        className=\"flex items-center h-8 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\"\n                      >\n                        <Select.ItemText>{label}</Select.ItemText>\n                      </Select.Item>\n                    ))}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Portal>\n            </Select.Root>\n          </div>\n        </div>\n        \n        {activePatientType !== 'all' && (\n          <div className=\"mb-4 p-2 bg-blue-50 border border-blue-100 rounded text-sm text-blue-700 flex items-center\">\n            <Info size={15} className=\"mr-1 flex-shrink-0\" />\n            <span>\n              Configuring products specifically for <strong>{PATIENT_TYPES[activePatientType]}</strong>.\n              Products added here will only be recommended for this patient type.\n            </span>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Products for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}</span>\n          <select\n            onChange={(e) => {\n              if (e.target.value) {\n                addProductToPatientType(phase, activePatientType, e.target.value);\n                e.target.value = ''; // Reset select\n              }\n            }}\n            className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n          >\n            <option value=\"\">Add product...</option>\n            {allProducts\n              .filter(product => {\n                // Only show products that aren't already added for this patient type\n                if (!patientSpecificProducts[phase]) return true;\n                return !patientSpecificProducts[phase][activePatientType]?.includes(product);\n              })\n              .map((product) => (\n                <option key={product} value={product}>\n                  {product}\n                </option>\n              ))}\n          </select>\n        </div>\n        \n        {patientSpecificProducts[phase] && patientSpecificProducts[phase][activePatientType]?.length > 0 ? (\n          <ul className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {patientSpecificProducts[phase][activePatientType].map((product) => (\n              <li \n                key={product}\n                className=\"bg-white border rounded-md p-2 flex justify-between items-center\"\n              >\n                <span>{product}</span>\n                <button\n                  onClick={() => removeProductFromPatientType(phase, activePatientType, product)}\n                  className=\"text-red-500 hover:text-red-700 p-1\"\n                >\n                  <Trash2 size={15} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"p-4 text-center text-gray-500 bg-gray-100 rounded-md\">\n            No products configured for {activePatientType === 'all' ? 'All Patient Types' : `Type ${activePatientType}`}.\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  // Return early if no data\n  if (!conditions || conditions.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-gray-500\">\n        No conditions data available to edit.\n      </div>\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4 overflow-hidden\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-4 border-b\">\n          <h2 className=\"text-xl font-bold\">Knowledge Base Administrator</h2>\n          <div className=\"flex items-center space-x-2\">\n            {/* Action buttons */}\n            {isEditing && (\n              <>\n                <button\n                  onClick={handleResetChanges}\n                  className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\"\n                  disabled={isSaving}\n                >\n                  Reset Changes\n                </button>\n                <button\n                  onClick={handleSaveChanges}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm flex items-center ${\n                    isSaving ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                  disabled={isSaving}\n                >\n                  {isSaving ? (\n                    <>Saving...</>\n                  ) : (\n                    <>\n                      <Save size={16} className=\"mr-1\" />\n                      Save Changes\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Save success notification */}\n        {showSuccess && (\n          <div className=\"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded flex items-center shadow-md\">\n            <Check size={20} className=\"mr-2\" />\n            Changes saved successfully!\n          </div>\n        )}\n        \n        {/* Tabs */}\n        <Tabs.Root value={activeTab} onValueChange={setActiveTab}>\n          <Tabs.List className=\"flex border-b\">\n            <Tabs.Trigger\n              value=\"importExport\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"importExport\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Import/Export\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"conditions\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"conditions\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Conditions\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"products\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"products\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Products\n            </Tabs.Trigger>\n            <Tabs.Trigger\n              value=\"categories\"\n              className={clsx(\n                \"px-6 py-3 text-sm font-medium\",\n                activeTab === \"categories\" \n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              )}\n            >\n              Categories & DDS Types\n            </Tabs.Trigger>\n          </Tabs.List>\n          \n          {/* Import/Export Tab */}\n          <Tabs.Content value=\"importExport\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-medium mb-2\">Knowledge Base Management</h3>\n              <p className=\"text-gray-600\">\n                Import and export your knowledge base data for backup purposes or to transfer between environments.\n              </p>\n            </div>\n            \n            <DataImportExport \n              conditions={editedConditions} \n              onImport={(importedData) => {\n                setEditedConditions(importedData);\n                setIsEditing(true);\n              }} \n            />\n          </Tabs.Content>\n          \n          {/* Conditions Tab */}\n          <Tabs.Content value=\"conditions\" className=\"flex-grow overflow-auto\">\n            <div className=\"flex h-full\">\n              {/* Conditions List */}\n              <div className=\"w-1/3 border-r p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"font-medium\">All Conditions</h3>\n                  <button\n                    onClick={handleAddCondition}\n                    className=\"p-1 text-blue-600 hover:text-blue-800 inline-flex items-center text-sm\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add New\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-1\">\n                  {editedConditions.map((condition) => (\n                    <li \n                      key={condition.name}\n                      className={clsx(\n                        \"px-3 py-2 rounded-md cursor-pointer flex justify-between items-center group\",\n                        selectedCondition && selectedCondition.name === condition.name\n                          ? \"bg-blue-100\"\n                          : \"hover:bg-gray-100\"\n                      )}\n                      onClick={() => handleConditionSelect(condition)}\n                    >\n                      <div>\n                        <div className=\"font-medium text-sm\">{condition.name}</div>\n                        <div className=\"text-xs text-gray-500\">{condition.category}</div>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          confirmDelete('condition', condition);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* Condition Editor */}\n              <div className=\"w-2/3 p-4\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n                {selectedCondition ? (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {/* Condition Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Condition Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={selectedCondition.name}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n                      \n                      {/* Category */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Category\n                        </label>\n                        <select\n                          value={selectedCondition.category}\n                          onChange={(e) => updateConditionField(selectedCondition.name, 'category', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          {categories.map((category) => (\n                            <option key={category} value={category}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    \n                    {/* Patient Type */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Patient Type\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={selectedCondition.patientType}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'patientType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Format: \"Types 1 to 4\" or \"Types 3 to 4\"</p>\n                    </div>\n                    \n                    {/* DDS Types */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        DDS Types\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.dds.map((dds) => (\n                            <span \n                              key={dds} \n                              className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {dds}\n                              <button\n                                onClick={() => {\n                                  const updatedDds = selectedCondition.dds.filter(d => d !== dds);\n                                  updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                                }}\n                                className=\"ml-1 text-blue-700 hover:text-blue-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <select\n                        onChange={(e) => {\n                          if (e.target.value && !selectedCondition.dds.includes(e.target.value)) {\n                            const updatedDds = [...selectedCondition.dds, e.target.value];\n                            updateConditionField(selectedCondition.name, 'dds', updatedDds);\n                          }\n                          e.target.value = ''; // Reset select\n                        }}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Add DDS Type...</option>\n                        {ddsTypes.filter(dds => !selectedCondition.dds.includes(dds)).map((dds) => (\n                          <option key={dds} value={dds}>\n                            {dds}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Pitch Points */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Pitch Points\n                      </label>\n                      <textarea\n                        value={selectedCondition.pitchPoints}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'pitchPoints', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    \n                    {/* Competitive Advantage */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={selectedCondition.competitiveAdvantage || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'competitiveAdvantage', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n\n                    {/* Handling Objections */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={selectedCondition.handlingObjections || ''}\n                        onChange={(e) => updateConditionField(selectedCondition.name, 'handlingObjections', e.target.value)}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    {/* Phases */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Treatment Phases\n                      </label>\n                      <div className=\"border border-gray-300 rounded-md p-2 mb-2\">\n                        <div className=\"flex flex-wrap gap-2\">\n                          {selectedCondition.phases.map((phase) => (\n                            <span \n                              key={phase} \n                              className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm flex items-center\"\n                            >\n                              {phase}\n                              <button\n                                onClick={() => {\n                                  const updatedPhases = selectedCondition.phases.filter(p => p !== phase);\n                                  updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                                }}\n                                className=\"ml-1 text-purple-700 hover:text-purple-900\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"New phase name...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' && e.target.value && !selectedCondition.phases.includes(e.target.value)) {\n                              const updatedPhases = [...selectedCondition.phases, e.target.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              e.target.value = '';\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={(e) => {\n                            const input = e.target.previousElementSibling;\n                            if (input.value && !selectedCondition.phases.includes(input.value)) {\n                              const updatedPhases = [...selectedCondition.phases, input.value];\n                              updateConditionField(selectedCondition.name, 'phases', updatedPhases);\n                              input.value = '';\n                            }\n                          }}\n                          className=\"px-3 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    </div>\n                    {/* Products by Phase with Patient Type Filtering */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Products by Phase</h3>\n                      \n                      <Tabs.Root defaultValue={selectedCondition.phases[0]} className=\"border rounded-md\">\n                        <Tabs.List className=\"flex border-b bg-gray-50\">\n                          {selectedCondition.phases.map((phase) => (\n                            <Tabs.Trigger\n                              key={phase}\n                              value={phase}\n                              className={clsx(\n                                \"flex-1 px-4 py-2 text-sm font-medium\",\n                                \"ui-selected:text-blue-600 ui-selected:bg-white ui-selected:border-b-0\",\n                                \"ui-not-selected:text-gray-500 ui-not-selected:hover:text-gray-700\"\n                              )}\n                            >\n                              {phase} Phase\n                            </Tabs.Trigger>\n                          ))}\n                        </Tabs.List>\n                        \n                        {selectedCondition.phases.map((phase) => (\n                          <Tabs.Content key={phase} value={phase} className=\"p-4\">\n                            {/* Patient-specific product configuration */}\n                            {renderPatientTypeProductConfig(phase)}\n                          </Tabs.Content>\n                        ))}\n                      </Tabs.Root>\n                    </div>\n                    \n                    {/* Product Details */}\n                    <div className=\"mt-6\">\n                      <h3 className=\"font-medium text-lg mb-3\">Product Details</h3>\n                      \n                      {Object.keys(selectedCondition.productDetails || {}).length > 0 ? (\n                        <div className=\"space-y-6\">\n                          {Object.keys(selectedCondition.productDetails).map((productName) => (\n                            <div key={productName} className=\"border rounded-md p-4 bg-gray-50\">\n                              <h4 className=\"font-medium text-md mb-3\">{productName}</h4>\n                              \n                              <div className=\"space-y-3\">\n                                {/* ...existing fields... */}\n                                \n                                {/* Research Articles Section */}\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Supporting Research Articles\n                                  </label>\n                                  \n                                  {selectedCondition.productDetails[productName].researchArticles && \n                                    selectedCondition.productDetails[productName].researchArticles.map((article, index) => (\n                                    <div key={index} className=\"flex space-x-2 mb-2\">\n                                      <div className=\"flex-grow space-y-2\">\n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Article title\"\n                                          value={article.title || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].title = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"Author/Source\"\n                                          value={article.author || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].author = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <textarea\n                                          placeholder=\"Abstract (optional)\"\n                                          value={article.abstract || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].abstract = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          rows={3}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                        \n                                        <input\n                                          type=\"text\"\n                                          placeholder=\"URL (optional)\"\n                                          value={article.url || ''}\n                                          onChange={(e) => {\n                                            const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                            updatedArticles[index].url = e.target.value;\n                                            updateProductDetail(\n                                              selectedCondition.name, \n                                              productName, \n                                              'researchArticles', \n                                              updatedArticles\n                                            );\n                                          }}\n                                          className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                                        />\n                                      </div>\n                                      \n                                      <button\n                                        onClick={() => {\n                                          const updatedArticles = [...selectedCondition.productDetails[productName].researchArticles];\n                                          updatedArticles.splice(index, 1);\n                                          updateProductDetail(\n                                            selectedCondition.name, \n                                            productName, \n                                            'researchArticles', \n                                            updatedArticles\n                                          );\n                                        }}\n                                        className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                                      >\n                                        <X size={16} />\n                                      </button>\n                                    </div>\n                                  ))}\n                                  \n                                  <button\n                                    onClick={() => {\n                                      const currentArticles = selectedCondition.productDetails[productName].researchArticles || [];\n                                      const updatedArticles = [...currentArticles, { title: '', author: '', url: '' }];\n                                      updateProductDetail(\n                                        selectedCondition.name, \n                                        productName, \n                                        'researchArticles', \n                                        updatedArticles\n                                      );\n                                    }}\n                                    className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                                  >\n                                    <Plus size={16} className=\"mr-1\" />\n                                    Add Research Article\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-gray-500 text-sm italic\">\n                          No product details available. Add products to phases first.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-10 text-gray-500\">\n                    Select a condition to edit or create a new one\n                  </div>\n                )}\n              </div>\n            </div>\n          </Tabs.Content>\n          \n          {/* Products Tab */}\n          <Tabs.Content value=\"products\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-lg font-medium\">Product Library</h3>\n              <button\n                onClick={handleAddProduct}\n                className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n              >\n                <Plus size={16} className=\"mr-1\" />\n                Add New Product\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {allProducts.map((product) => (\n                <div key={product} className=\"border rounded-lg p-4 hover:bg-gray-50 group\">\n                <div className=\"flex justify-between items-start\">\n                  <h4 className=\"font-medium text-md\">{product}</h4>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => handleEditProduct(product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-blue-500 hover:text-blue-700 p-1\"\n                      title=\"Edit product details\"\n                    >\n                      <Edit size={16} />\n                    </button>\n                    <button\n                      onClick={() => confirmDelete('product', product)}\n                      className=\"opacity-0 group-hover:opacity-100 text-red-500 hover:text-red-700 p-1\"\n                      title=\"Delete product\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                </div>\n                  \n                {editedConditions[0]?.productDetails?.[product] && (\n                  <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Usage: </span>\n                      {editedConditions[0].productDetails[product].usage}\n                    </div>\n                    <div className=\"truncate\">\n                      <span className=\"font-medium\">Conditions: </span>\n                      {editedConditions.filter(c => \n                        Object.values(c.products || {}).some(products => \n                          products.includes(product) || products.includes(`${product} (Type 3/4 Only)`)\n                        )\n                      ).length} conditions\n                    </div>\n                  </div>\n                )}\n              </div>\n              ))}\n            </div>\n          </Tabs.Content>\n          \n          {/* Categories & DDS Types Tab */}\n          <Tabs.Content value=\"categories\" className=\"p-6\" style={{ maxHeight: \"calc(90vh - 160px)\", overflowY: \"auto\" }}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {/* Categories */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">Categories</h3>\n                  <button\n                    onClick={handleAddCategory}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add Category\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-2\">\n                  {categories.map((category) => (\n                    <li \n                      key={category}\n                      className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50\"\n                    >\n                      <span>{category}</span>\n                      <div className=\"text-sm text-gray-500\">\n                        {editedConditions.filter(c => c.category === category).length} conditions\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {/* DDS Types */}\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium\">DDS Types</h3>\n                  <button\n                    onClick={handleAddDdsType}\n                    className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm flex items-center\"\n                  >\n                    <Plus size={16} className=\"mr-1\" />\n                    Add DDS Type\n                  </button>\n                </div>\n                \n                <ul className=\"space-y-2\">\n                  {ddsTypes.map((ddsType) => (\n                    <li \n                      key={ddsType}\n                      className=\"border rounded-md p-3 flex justify-between items-center bg-gray-50\"\n                    >\n                      <span>{ddsType}</span>\n                      <div className=\"text-sm text-gray-500\">\n                        {editedConditions.filter(c => c.dds.includes(ddsType)).length} conditions\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </Tabs.Content>\n        </Tabs.Root>\n\n        {/* Add New Item Modal */}\n        <Dialog.Root open={showAddModal} onOpenChange={setShowAddModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n            <Dialog.Title className=\"text-lg font-semibold mb-4\">\n              {modalType === 'condition' && 'Add New Condition'}\n              {modalType === 'category' && 'Add New Category'}\n              {modalType === 'ddsType' && 'Add New DDS Type'}\n              {modalType === 'product' && (editingProductId ? `Edit Product: ${editingProductId}` : 'Add New Product')}\n            </Dialog.Title>\n\n              \n              <div className=\"space-y-4\">\n                {modalType === 'condition' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Condition Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Category\n                      </label>\n                      <select\n                        value={newItemData.category || ''}\n                        onChange={(e) => setNewItemData({...newItemData, category: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      >\n                        {categories.map((category) => (\n                          <option key={category} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Key Pitch Points\n                      </label>\n                      <textarea\n                        value={newItemData.pitchPoints || ''}\n                        onChange={(e) => setNewItemData({...newItemData, pitchPoints: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitiveAdvantage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitiveAdvantage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Handling Objections\n                      </label>\n                      <textarea\n                        value={newItemData.handlingObjections || ''}\n                        onChange={(e) => setNewItemData({...newItemData, handlingObjections: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </>\n                )}\n                \n                {modalType === 'category' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'ddsType' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      DDS Type Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newItemData.name || ''}\n                      onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                    />\n                  </div>\n                )}\n                \n                {modalType === 'product' && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Product Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={newItemData.name || ''}\n                        onChange={(e) => setNewItemData({...newItemData, name: e.target.value})}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Usage Instructions\n                      </label>\n                      <textarea\n                        value={newItemData.usage || ''}\n                        onChange={(e) => setNewItemData({...newItemData, usage: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Clinical Rationale\n                      </label>\n                      <textarea\n                        value={newItemData.rationale || ''}\n                        onChange={(e) => setNewItemData({...newItemData, rationale: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Competitive Advantage\n                      </label>\n                      <textarea\n                        value={newItemData.competitive || ''}\n                        onChange={(e) => setNewItemData({...newItemData, competitive: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Objection Handling\n                      </label>\n                      <textarea\n                        value={newItemData.objection || ''}\n                        onChange={(e) => setNewItemData({...newItemData, objection: e.target.value})}\n                        rows={2}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                      />\n                    </div>\n                    \n                    {/* New Research Articles Section */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Supporting Research Articles\n                      </label>\n                      \n                      {newItemData.researchArticles && newItemData.researchArticles.map((article, index) => (\n                        <div key={index} className=\"flex space-x-2 mb-2\">\n                          <div className=\"flex-grow space-y-2\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Article title\"\n                              value={article.title || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].title = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"Author/Source\"\n                              value={article.author || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].author = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <textarea\n                              placeholder=\"Abstract (optional)\"\n                              value={article.abstract || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].abstract = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              rows={3}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                            \n                            <input\n                              type=\"text\"\n                              placeholder=\"URL (optional)\"\n                              value={article.url || ''}\n                              onChange={(e) => {\n                                const updatedArticles = [...newItemData.researchArticles];\n                                updatedArticles[index].url = e.target.value;\n                                setNewItemData({...newItemData, researchArticles: updatedArticles});\n                              }}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                            />\n                          </div>\n                          \n                          <button\n                            onClick={() => {\n                              const updatedArticles = [...newItemData.researchArticles];\n                              updatedArticles.splice(index, 1);\n                              setNewItemData({...newItemData, researchArticles: updatedArticles});\n                            }}\n                            className=\"p-2 border border-red-300 rounded-md text-red-500 hover:bg-red-50 self-start\"\n                          >\n                            <X size={16} />\n                          </button>\n                        </div>\n                      ))}\n                      \n                      <button\n                        onClick={() => {\n                          const updatedArticles = [...(newItemData.researchArticles || []), { title: '', author: '', url: '' }];\n                          setNewItemData({...newItemData, researchArticles: updatedArticles});\n                        }}\n                        className=\"mt-2 px-3 py-2 border border-indigo-300 rounded-md text-indigo-600 hover:bg-indigo-50 text-sm flex items-center\"\n                      >\n                        <Plus size={16} className=\"mr-1\" />\n                        Add Research Article\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleSubmitNewItem}\n                  disabled={!newItemData.name}\n                  className={`px-3 py-1.5 rounded-md text-white text-sm ${\n                    newItemData.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'\n                  }`}\n                >\n                  {editingProductId ? 'Save Changes' : 'Add'}\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n        \n        {/* Delete Confirmation Modal */}\n        <Dialog.Root open={showDeleteModal} onOpenChange={setShowDeleteModal}>\n          <Dialog.Portal>\n            <Dialog.Overlay className=\"fixed inset-0 bg-black/50 z-50\" />\n            <Dialog.Content className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md w-[90vw] bg-white rounded-lg shadow-xl p-6 z-50\">\n              <Dialog.Title className=\"text-lg font-semibold mb-2 flex items-center text-red-600\">\n                <AlertTriangle size={20} className=\"mr-2\" />\n                Confirm Deletion\n              </Dialog.Title>\n              \n              <Dialog.Description className=\"text-gray-600 mb-4\">\n                {itemToDelete?.type === 'condition' && \n                  `Are you sure you want to delete the condition \"${itemToDelete.item.name}\"? This action cannot be undone.`}\n                \n                {itemToDelete?.type === 'product' && \n                  `Are you sure you want to delete the product \"${itemToDelete.item}\"? This will remove it from all conditions where it's used. This action cannot be undone.`}\n              </Dialog.Description>\n              \n              <div className=\"mt-6 flex justify-end space-x-3\">\n                <Dialog.Close asChild>\n                  <button className=\"px-3 py-1.5 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm\">\n                    Cancel\n                  </button>\n                </Dialog.Close>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 text-sm\"\n                >\n                  Delete\n                </button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Portal>\n        </Dialog.Root>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}